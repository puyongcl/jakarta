// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: order.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateChatOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid      int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerNickName string `protobuf:"bytes,2,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"`
	ListenerAvatar   string `protobuf:"bytes,3,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`
	Uid              int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	BuyUnit          int64  `protobuf:"varint,5,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`
	PricingPlanId    int64  `protobuf:"varint,6,opt,name=pricingPlanId,proto3" json:"pricingPlanId,omitempty"`
	OrderType        int64  `protobuf:"varint,7,opt,name=orderType,proto3" json:"orderType,omitempty"`
	TextChatPrice    int64  `protobuf:"varint,8,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`   //textChatPrice
	VoiceChatPrice   int64  `protobuf:"varint,9,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"` //voiceChatPrice
	NickName         string `protobuf:"bytes,10,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Avatar           string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UserChannel      string `protobuf:"bytes,12,opt,name=userChannel,proto3" json:"userChannel,omitempty"`
	ListenerChannel  string `protobuf:"bytes,13,opt,name=listenerChannel,proto3" json:"listenerChannel,omitempty"`
}

func (x *CreateChatOrderReq) Reset() {
	*x = CreateChatOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatOrderReq) ProtoMessage() {}

func (x *CreateChatOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatOrderReq.ProtoReflect.Descriptor instead.
func (*CreateChatOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *CreateChatOrderReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *CreateChatOrderReq) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *CreateChatOrderReq) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

func (x *CreateChatOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateChatOrderReq) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *CreateChatOrderReq) GetPricingPlanId() int64 {
	if x != nil {
		return x.PricingPlanId
	}
	return 0
}

func (x *CreateChatOrderReq) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *CreateChatOrderReq) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *CreateChatOrderReq) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *CreateChatOrderReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *CreateChatOrderReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateChatOrderReq) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

func (x *CreateChatOrderReq) GetListenerChannel() string {
	if x != nil {
		return x.ListenerChannel
	}
	return ""
}

type CreateChatOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatUnitMinute int64  `protobuf:"varint,1,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"` // 服务单价包含多少分钟
	BuyUnit        int64  `protobuf:"varint,2,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`               // 购买的时长，单价时间的整数倍
	UnitPrice      int64  `protobuf:"varint,3,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`           // 单价
	BaseAmount     int64  `protobuf:"varint,4,opt,name=baseAmount,proto3" json:"baseAmount,omitempty"`         // 服务费
	TaxAmount      int64  `protobuf:"varint,5,opt,name=taxAmount,proto3" json:"taxAmount,omitempty"`           // 税费
	NightAddAmount int64  `protobuf:"varint,6,opt,name=nightAddAmount,proto3" json:"nightAddAmount,omitempty"` // 夜间加收费用
	SaveAmount     int64  `protobuf:"varint,7,opt,name=saveAmount,proto3" json:"saveAmount,omitempty"`         // 优惠减免金额
	ActualAmount   int64  `protobuf:"varint,8,opt,name=actualAmount,proto3" json:"actualAmount,omitempty"`     // 实际总费用
	OrderId        string `protobuf:"bytes,9,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrderType      int64  `protobuf:"varint,10,opt,name=orderType,proto3" json:"orderType,omitempty"`
}

func (x *CreateChatOrderResp) Reset() {
	*x = CreateChatOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatOrderResp) ProtoMessage() {}

func (x *CreateChatOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatOrderResp.ProtoReflect.Descriptor instead.
func (*CreateChatOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *CreateChatOrderResp) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *CreateChatOrderResp) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *CreateChatOrderResp) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *CreateChatOrderResp) GetBaseAmount() int64 {
	if x != nil {
		return x.BaseAmount
	}
	return 0
}

func (x *CreateChatOrderResp) GetTaxAmount() int64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *CreateChatOrderResp) GetNightAddAmount() int64 {
	if x != nil {
		return x.NightAddAmount
	}
	return 0
}

func (x *CreateChatOrderResp) GetSaveAmount() int64 {
	if x != nil {
		return x.SaveAmount
	}
	return 0
}

func (x *CreateChatOrderResp) GetActualAmount() int64 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

func (x *CreateChatOrderResp) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateChatOrderResp) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

type DoChatOrderActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     string  `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OperatorUid int64   `protobuf:"varint,2,opt,name=operatorUid,proto3" json:"operatorUid,omitempty"`
	Action      int64   `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"` // 状态操作
	Star        int64   `protobuf:"varint,4,opt,name=star,proto3" json:"star,omitempty"`     // 评价星级
	Remark      string  `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`  // 备注 例如退款原因
	Comment     string  `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Tag         []int64 `protobuf:"varint,7,rep,packed,name=tag,proto3" json:"tag,omitempty"`
	Additional  string  `protobuf:"bytes,8,opt,name=additional,proto3" json:"additional,omitempty"` // 补充信息
	Attachment  string  `protobuf:"bytes,9,opt,name=attachment,proto3" json:"attachment,omitempty"` // 附件 #分隔图片文件
	SendMsg     int64   `protobuf:"varint,10,opt,name=sendMsg,proto3" json:"sendMsg,omitempty"`     // 是否同步发送到聊天 2 是 4 否
	OrderType   int64   `protobuf:"varint,11,opt,name=orderType,proto3" json:"orderType,omitempty"` // 订单类型
	ListenerUid int64   `protobuf:"varint,12,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *DoChatOrderActionReq) Reset() {
	*x = DoChatOrderActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoChatOrderActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoChatOrderActionReq) ProtoMessage() {}

func (x *DoChatOrderActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoChatOrderActionReq.ProtoReflect.Descriptor instead.
func (*DoChatOrderActionReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *DoChatOrderActionReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DoChatOrderActionReq) GetOperatorUid() int64 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *DoChatOrderActionReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *DoChatOrderActionReq) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *DoChatOrderActionReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DoChatOrderActionReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *DoChatOrderActionReq) GetTag() []int64 {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *DoChatOrderActionReq) GetAdditional() string {
	if x != nil {
		return x.Additional
	}
	return ""
}

func (x *DoChatOrderActionReq) GetAttachment() string {
	if x != nil {
		return x.Attachment
	}
	return ""
}

func (x *DoChatOrderActionReq) GetSendMsg() int64 {
	if x != nil {
		return x.SendMsg
	}
	return 0
}

func (x *DoChatOrderActionReq) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *DoChatOrderActionReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type DoChatOrderActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoChatOrderActionResp) Reset() {
	*x = DoChatOrderActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoChatOrderActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoChatOrderActionResp) ProtoMessage() {}

func (x *DoChatOrderActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoChatOrderActionResp.ProtoReflect.Descriptor instead.
func (*DoChatOrderActionResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

// 订单列表
type ShortChatOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             string  `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	CreateTime          string  `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ListenerUid         int64   `protobuf:"varint,3,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerNickName    string  `protobuf:"bytes,4,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"`
	ListenerAvatar      string  `protobuf:"bytes,5,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`
	BuyUnit             int64   `protobuf:"varint,6,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`
	ChatUnitMinute      int64   `protobuf:"varint,7,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"`
	UnitPrice           int64   `protobuf:"varint,8,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	ActualAmount        int64   `protobuf:"varint,9,opt,name=actualAmount,proto3" json:"actualAmount,omitempty"`
	OrderState          int64   `protobuf:"varint,10,opt,name=orderState,proto3" json:"orderState,omitempty"`
	OrderType           int64   `protobuf:"varint,11,opt,name=orderType,proto3" json:"orderType,omitempty"`
	NickName            string  `protobuf:"bytes,12,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Uid                 int64   `protobuf:"varint,13,opt,name=uid,proto3" json:"uid,omitempty"`
	Avatar              string  `protobuf:"bytes,14,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Comment             string  `protobuf:"bytes,15,opt,name=comment,proto3" json:"comment,omitempty"`
	CommentTag          []int64 `protobuf:"varint,16,rep,packed,name=commentTag,proto3" json:"commentTag,omitempty"`
	CommentTime         string  `protobuf:"bytes,17,opt,name=commentTime,proto3" json:"commentTime,omitempty"`
	Star                int64   `protobuf:"varint,18,opt,name=star,proto3" json:"star,omitempty"`
	Reply               string  `protobuf:"bytes,19,opt,name=reply,proto3" json:"reply,omitempty"`
	ReplyTime           string  `protobuf:"bytes,20,opt,name=replyTime,proto3" json:"replyTime,omitempty"`
	FeedbackTime        string  `protobuf:"bytes,21,opt,name=feedbackTime,proto3" json:"feedbackTime,omitempty"`
	Feedback            string  `protobuf:"bytes,22,opt,name=feedback,proto3" json:"feedback,omitempty"`
	StatusMark          string  `protobuf:"bytes,23,opt,name=statusMark,proto3" json:"statusMark,omitempty"` // 根据不通状态确定下一个状态的倒数计时提示语
	UsedChatMinute      int64   `protobuf:"varint,24,opt,name=usedChatMinute,proto3" json:"usedChatMinute,omitempty"`
	StartTime           string  `protobuf:"bytes,25,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime             string  `protobuf:"bytes,26,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExpiryTime          string  `protobuf:"bytes,27,opt,name=expiryTime,proto3" json:"expiryTime,omitempty"`
	SaveAmount          int64   `protobuf:"varint,28,opt,name=saveAmount,proto3" json:"saveAmount,omitempty"`
	PlatformShareAmount int64   `protobuf:"varint,29,opt,name=platformShareAmount,proto3" json:"platformShareAmount,omitempty"` // 平台收益金额（分）
	ListenerAmount      int64   `protobuf:"varint,30,opt,name=listenerAmount,proto3" json:"listenerAmount,omitempty"`           // XXX收益
}

func (x *ShortChatOrder) Reset() {
	*x = ShortChatOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortChatOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortChatOrder) ProtoMessage() {}

func (x *ShortChatOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortChatOrder.ProtoReflect.Descriptor instead.
func (*ShortChatOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *ShortChatOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ShortChatOrder) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ShortChatOrder) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ShortChatOrder) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *ShortChatOrder) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

func (x *ShortChatOrder) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *ShortChatOrder) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *ShortChatOrder) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *ShortChatOrder) GetActualAmount() int64 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

func (x *ShortChatOrder) GetOrderState() int64 {
	if x != nil {
		return x.OrderState
	}
	return 0
}

func (x *ShortChatOrder) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ShortChatOrder) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ShortChatOrder) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ShortChatOrder) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ShortChatOrder) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ShortChatOrder) GetCommentTag() []int64 {
	if x != nil {
		return x.CommentTag
	}
	return nil
}

func (x *ShortChatOrder) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *ShortChatOrder) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *ShortChatOrder) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *ShortChatOrder) GetReplyTime() string {
	if x != nil {
		return x.ReplyTime
	}
	return ""
}

func (x *ShortChatOrder) GetFeedbackTime() string {
	if x != nil {
		return x.FeedbackTime
	}
	return ""
}

func (x *ShortChatOrder) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *ShortChatOrder) GetStatusMark() string {
	if x != nil {
		return x.StatusMark
	}
	return ""
}

func (x *ShortChatOrder) GetUsedChatMinute() int64 {
	if x != nil {
		return x.UsedChatMinute
	}
	return 0
}

func (x *ShortChatOrder) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ShortChatOrder) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ShortChatOrder) GetExpiryTime() string {
	if x != nil {
		return x.ExpiryTime
	}
	return ""
}

func (x *ShortChatOrder) GetSaveAmount() int64 {
	if x != nil {
		return x.SaveAmount
	}
	return 0
}

func (x *ShortChatOrder) GetPlatformShareAmount() int64 {
	if x != nil {
		return x.PlatformShareAmount
	}
	return 0
}

func (x *ShortChatOrder) GetListenerAmount() int64 {
	if x != nil {
		return x.ListenerAmount
	}
	return 0
}

type GetChatOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListType    int64 `protobuf:"varint,3,opt,name=listType,proto3" json:"listType,omitempty"` // 列表类型 0 全部 1 服务中 2 未反馈 3 待处理退款
	PageNo      int64 `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetChatOrderListReq) Reset() {
	*x = GetChatOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderListReq) ProtoMessage() {}

func (x *GetChatOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderListReq.ProtoReflect.Descriptor instead.
func (*GetChatOrderListReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *GetChatOrderListReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetChatOrderListReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetChatOrderListReq) GetListType() int64 {
	if x != nil {
		return x.ListType
	}
	return 0
}

func (x *GetChatOrderListReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetChatOrderListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetChatOrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ShortChatOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetChatOrderListResp) Reset() {
	*x = GetChatOrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderListResp) ProtoMessage() {}

func (x *GetChatOrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderListResp.ProtoReflect.Descriptor instead.
func (*GetChatOrderListResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatOrderListResp) GetList() []*ShortChatOrder {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取聊天服务定价
type BusinessChatPricePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime             string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Id                     int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TaxRate                int64  `protobuf:"varint,3,opt,name=taxRate,proto3" json:"taxRate,omitempty"`                                // 税率
	NightAddPriceRate      int64  `protobuf:"varint,4,opt,name=nightAddPriceRate,proto3" json:"nightAddPriceRate,omitempty"`            // 夜间加收费率
	ShareRateStep1Star5    int64  `protobuf:"varint,5,opt,name=shareRateStep1Star5,proto3" json:"shareRateStep1Star5,omitempty"`        // 1阶段满意评价平台抽佣比率
	ShareRateStep1Star3    int64  `protobuf:"varint,6,opt,name=shareRateStep1Star3,proto3" json:"shareRateStep1Star3,omitempty"`        // 1阶段一般评价平台抽佣比率
	ShareRateStep1Star1    int64  `protobuf:"varint,7,opt,name=shareRateStep1Star1,proto3" json:"shareRateStep1Star1,omitempty"`        // 1阶段不满意评价平台抽佣比率
	ShareAmountStep1Unit   int64  `protobuf:"varint,8,opt,name=shareAmountStep1Unit,proto3" json:"shareAmountStep1Unit,omitempty"`      // 1阶段时长临界单位
	ShareRateStep2Star5    int64  `protobuf:"varint,9,opt,name=shareRateStep2Star5,proto3" json:"shareRateStep2Star5,omitempty"`        // 2阶段满意评价平台抽佣比率
	ShareRateStep2Star3    int64  `protobuf:"varint,10,opt,name=shareRateStep2Star3,proto3" json:"shareRateStep2Star3,omitempty"`       // 2阶段一般评价平台抽佣比率
	ShareRateStep2Star1    int64  `protobuf:"varint,11,opt,name=shareRateStep2Star1,proto3" json:"shareRateStep2Star1,omitempty"`       // 2阶段不满意评价平台抽佣比率
	NightAddPriceHourStart int64  `protobuf:"varint,12,opt,name=nightAddPriceHourStart,proto3" json:"nightAddPriceHourStart,omitempty"` // 夜间服务加价开始时刻
	NightAddPriceHourEnd   int64  `protobuf:"varint,13,opt,name=nightAddPriceHourEnd,proto3" json:"nightAddPriceHourEnd,omitempty"`     // 夜间加价结束时刻
	ChatUnitMinute         int64  `protobuf:"varint,14,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"`                 // 单位时长的分钟数
	NewUserDiscount        int64  `protobuf:"varint,15,opt,name=newUserDiscount,proto3" json:"newUserDiscount,omitempty"`               // 新用户减免比率
	DefaultTextChatPrice   int64  `protobuf:"varint,16,opt,name=defaultTextChatPrice,proto3" json:"defaultTextChatPrice,omitempty"`     // 默认文字聊天价格
	DefaultVoiceChatPrice  int64  `protobuf:"varint,17,opt,name=defaultVoiceChatPrice,proto3" json:"defaultVoiceChatPrice,omitempty"`   // 默认语音聊天价格
	OrderCnt               int64  `protobuf:"varint,18,opt,name=orderCnt,proto3" json:"orderCnt,omitempty"`                             // 订单数
	FreeMinute             int64  `protobuf:"varint,19,opt,name=freeMinute,proto3" json:"freeMinute,omitempty"`                         // 免费分钟数
}

func (x *BusinessChatPricePlan) Reset() {
	*x = BusinessChatPricePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessChatPricePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessChatPricePlan) ProtoMessage() {}

func (x *BusinessChatPricePlan) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessChatPricePlan.ProtoReflect.Descriptor instead.
func (*BusinessChatPricePlan) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *BusinessChatPricePlan) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *BusinessChatPricePlan) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BusinessChatPricePlan) GetTaxRate() int64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

func (x *BusinessChatPricePlan) GetNightAddPriceRate() int64 {
	if x != nil {
		return x.NightAddPriceRate
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareRateStep1Star5() int64 {
	if x != nil {
		return x.ShareRateStep1Star5
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareRateStep1Star3() int64 {
	if x != nil {
		return x.ShareRateStep1Star3
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareRateStep1Star1() int64 {
	if x != nil {
		return x.ShareRateStep1Star1
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareAmountStep1Unit() int64 {
	if x != nil {
		return x.ShareAmountStep1Unit
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareRateStep2Star5() int64 {
	if x != nil {
		return x.ShareRateStep2Star5
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareRateStep2Star3() int64 {
	if x != nil {
		return x.ShareRateStep2Star3
	}
	return 0
}

func (x *BusinessChatPricePlan) GetShareRateStep2Star1() int64 {
	if x != nil {
		return x.ShareRateStep2Star1
	}
	return 0
}

func (x *BusinessChatPricePlan) GetNightAddPriceHourStart() int64 {
	if x != nil {
		return x.NightAddPriceHourStart
	}
	return 0
}

func (x *BusinessChatPricePlan) GetNightAddPriceHourEnd() int64 {
	if x != nil {
		return x.NightAddPriceHourEnd
	}
	return 0
}

func (x *BusinessChatPricePlan) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *BusinessChatPricePlan) GetNewUserDiscount() int64 {
	if x != nil {
		return x.NewUserDiscount
	}
	return 0
}

func (x *BusinessChatPricePlan) GetDefaultTextChatPrice() int64 {
	if x != nil {
		return x.DefaultTextChatPrice
	}
	return 0
}

func (x *BusinessChatPricePlan) GetDefaultVoiceChatPrice() int64 {
	if x != nil {
		return x.DefaultVoiceChatPrice
	}
	return 0
}

func (x *BusinessChatPricePlan) GetOrderCnt() int64 {
	if x != nil {
		return x.OrderCnt
	}
	return 0
}

func (x *BusinessChatPricePlan) GetFreeMinute() int64 {
	if x != nil {
		return x.FreeMinute
	}
	return 0
}

type GetBusinessChatPricePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id  int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBusinessChatPricePlanReq) Reset() {
	*x = GetBusinessChatPricePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessChatPricePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessChatPricePlanReq) ProtoMessage() {}

func (x *GetBusinessChatPricePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessChatPricePlanReq.ProtoReflect.Descriptor instead.
func (*GetBusinessChatPricePlanReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *GetBusinessChatPricePlanReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetBusinessChatPricePlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBusinessChatPricePlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *BusinessChatPricePlan `protobuf:"bytes,1,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *GetBusinessChatPricePlanResp) Reset() {
	*x = GetBusinessChatPricePlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessChatPricePlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessChatPricePlanResp) ProtoMessage() {}

func (x *GetBusinessChatPricePlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessChatPricePlanResp.ProtoReflect.Descriptor instead.
func (*GetBusinessChatPricePlanResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *GetBusinessChatPricePlanResp) GetConfig() *BusinessChatPricePlan {
	if x != nil {
		return x.Config
	}
	return nil
}

type EstimateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid    int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Uid            int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	BuyUnit        int64 `protobuf:"varint,3,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`               // 服务时长分钟
	TextChatPrice  int64 `protobuf:"varint,4,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`   //
	VoiceChatPrice int64 `protobuf:"varint,5,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"` //
	PricingPlanId  int64 `protobuf:"varint,6,opt,name=pricingPlanId,proto3" json:"pricingPlanId,omitempty"`   //价格id
	OrderType      int64 `protobuf:"varint,7,opt,name=orderType,proto3" json:"orderType,omitempty"`
}

func (x *EstimateOrderReq) Reset() {
	*x = EstimateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateOrderReq) ProtoMessage() {}

func (x *EstimateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateOrderReq.ProtoReflect.Descriptor instead.
func (*EstimateOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

func (x *EstimateOrderReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *EstimateOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EstimateOrderReq) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *EstimateOrderReq) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *EstimateOrderReq) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *EstimateOrderReq) GetPricingPlanId() int64 {
	if x != nil {
		return x.PricingPlanId
	}
	return 0
}

func (x *EstimateOrderReq) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

type EstimateOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatUnitMinute int64 `protobuf:"varint,1,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"` // 服务单价包含多少分钟
	BuyUnit        int64 `protobuf:"varint,2,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`               // 购买的时长，单价时间的整数倍
	UnitPrice      int64 `protobuf:"varint,3,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`           // 单价
	BaseAmount     int64 `protobuf:"varint,4,opt,name=baseAmount,proto3" json:"baseAmount,omitempty"`         // 服务费
	TaxAmount      int64 `protobuf:"varint,5,opt,name=taxAmount,proto3" json:"taxAmount,omitempty"`           // 税费
	NightAddAmount int64 `protobuf:"varint,6,opt,name=nightAddAmount,proto3" json:"nightAddAmount,omitempty"` // 夜间加收费用
	SaveAmount     int64 `protobuf:"varint,7,opt,name=saveAmount,proto3" json:"saveAmount,omitempty"`         // 优惠减免金额
	ActualAmount   int64 `protobuf:"varint,8,opt,name=actualAmount,proto3" json:"actualAmount,omitempty"`     // 实际总费用
}

func (x *EstimateOrderResp) Reset() {
	*x = EstimateOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateOrderResp) ProtoMessage() {}

func (x *EstimateOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateOrderResp.ProtoReflect.Descriptor instead.
func (*EstimateOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

func (x *EstimateOrderResp) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *EstimateOrderResp) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *EstimateOrderResp) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *EstimateOrderResp) GetBaseAmount() int64 {
	if x != nil {
		return x.BaseAmount
	}
	return 0
}

func (x *EstimateOrderResp) GetTaxAmount() int64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *EstimateOrderResp) GetNightAddAmount() int64 {
	if x != nil {
		return x.NightAddAmount
	}
	return 0
}

func (x *EstimateOrderResp) GetSaveAmount() int64 {
	if x != nil {
		return x.SaveAmount
	}
	return 0
}

func (x *EstimateOrderResp) GetActualAmount() int64 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

type ChatOrderStateLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	State       int64  `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	OperatorUid int64  `protobuf:"varint,3,opt,name=operatorUid,proto3" json:"operatorUid,omitempty"`
	Remark      string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ChatOrderStateLog) Reset() {
	*x = ChatOrderStateLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatOrderStateLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatOrderStateLog) ProtoMessage() {}

func (x *ChatOrderStateLog) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatOrderStateLog.ProtoReflect.Descriptor instead.
func (*ChatOrderStateLog) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *ChatOrderStateLog) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ChatOrderStateLog) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ChatOrderStateLog) GetOperatorUid() int64 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *ChatOrderStateLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 用户获取订单状态记录
type GetChatOrderStateLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId  string  `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	PageNo   int64   `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int64   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	State    []int64 `protobuf:"varint,4,rep,packed,name=state,proto3" json:"state,omitempty"`
}

func (x *GetChatOrderStateLogReq) Reset() {
	*x = GetChatOrderStateLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderStateLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderStateLogReq) ProtoMessage() {}

func (x *GetChatOrderStateLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderStateLogReq.ProtoReflect.Descriptor instead.
func (*GetChatOrderStateLogReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{13}
}

func (x *GetChatOrderStateLogReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetChatOrderStateLogReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetChatOrderStateLogReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetChatOrderStateLogReq) GetState() []int64 {
	if x != nil {
		return x.State
	}
	return nil
}

type GetChatOrderStateLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ChatOrderStateLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetChatOrderStateLogResp) Reset() {
	*x = GetChatOrderStateLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderStateLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderStateLogResp) ProtoMessage() {}

func (x *GetChatOrderStateLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderStateLogResp.ProtoReflect.Descriptor instead.
func (*GetChatOrderStateLogResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{14}
}

func (x *GetChatOrderStateLogResp) GetList() []*ChatOrderStateLog {
	if x != nil {
		return x.List
	}
	return nil
}

// 更新语音聊天订单的使用情况
type UpdateChatOrderUseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	UsedMinute  int64  `protobuf:"varint,3,opt,name=usedMinute,proto3" json:"usedMinute,omitempty"`
	StartTime   string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime    string `protobuf:"bytes,5,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	OrderType   int64  `protobuf:"varint,6,opt,name=orderType,proto3" json:"orderType,omitempty"`
	Action      int64  `protobuf:"varint,7,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *UpdateChatOrderUseReq) Reset() {
	*x = UpdateChatOrderUseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChatOrderUseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatOrderUseReq) ProtoMessage() {}

func (x *UpdateChatOrderUseReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatOrderUseReq.ProtoReflect.Descriptor instead.
func (*UpdateChatOrderUseReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateChatOrderUseReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateChatOrderUseReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UpdateChatOrderUseReq) GetUsedMinute() int64 {
	if x != nil {
		return x.UsedMinute
	}
	return 0
}

func (x *UpdateChatOrderUseReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateChatOrderUseReq) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

func (x *UpdateChatOrderUseReq) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *UpdateChatOrderUseReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type UpdateChatOrderUseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateChatOrderUseResp) Reset() {
	*x = UpdateChatOrderUseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChatOrderUseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatOrderUseResp) ProtoMessage() {}

func (x *UpdateChatOrderUseResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatOrderUseResp.ProtoReflect.Descriptor instead.
func (*UpdateChatOrderUseResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{16}
}

// 获取需要过期更新状态的订单
type GetExpireVoiceChatOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo          int64  `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize        int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartExpiryTime string `protobuf:"bytes,3,opt,name=startExpiryTime,proto3" json:"startExpiryTime,omitempty"`
	EndExpiryTime   string `protobuf:"bytes,4,opt,name=endExpiryTime,proto3" json:"endExpiryTime,omitempty"`
}

func (x *GetExpireVoiceChatOrderReq) Reset() {
	*x = GetExpireVoiceChatOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExpireVoiceChatOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpireVoiceChatOrderReq) ProtoMessage() {}

func (x *GetExpireVoiceChatOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpireVoiceChatOrderReq.ProtoReflect.Descriptor instead.
func (*GetExpireVoiceChatOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{17}
}

func (x *GetExpireVoiceChatOrderReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetExpireVoiceChatOrderReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetExpireVoiceChatOrderReq) GetStartExpiryTime() string {
	if x != nil {
		return x.StartExpiryTime
	}
	return ""
}

func (x *GetExpireVoiceChatOrderReq) GetEndExpiryTime() string {
	if x != nil {
		return x.EndExpiryTime
	}
	return ""
}

type ExpireVoiceChatOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId        string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Uid            int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid    int64  `protobuf:"varint,3,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	BuyUnit        int64  `protobuf:"varint,4,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`
	ChatUnitMinute int64  `protobuf:"varint,5,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"`
	UsedChatMinute int64  `protobuf:"varint,6,opt,name=usedChatMinute,proto3" json:"usedChatMinute,omitempty"`
}

func (x *ExpireVoiceChatOrder) Reset() {
	*x = ExpireVoiceChatOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireVoiceChatOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireVoiceChatOrder) ProtoMessage() {}

func (x *ExpireVoiceChatOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireVoiceChatOrder.ProtoReflect.Descriptor instead.
func (*ExpireVoiceChatOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{18}
}

func (x *ExpireVoiceChatOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ExpireVoiceChatOrder) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ExpireVoiceChatOrder) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ExpireVoiceChatOrder) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *ExpireVoiceChatOrder) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *ExpireVoiceChatOrder) GetUsedChatMinute() int64 {
	if x != nil {
		return x.UsedChatMinute
	}
	return 0
}

type GetExpireVoiceChatOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ExpireVoiceChatOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetExpireVoiceChatOrderResp) Reset() {
	*x = GetExpireVoiceChatOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExpireVoiceChatOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpireVoiceChatOrderResp) ProtoMessage() {}

func (x *GetExpireVoiceChatOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpireVoiceChatOrderResp.ProtoReflect.Descriptor instead.
func (*GetExpireVoiceChatOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{19}
}

func (x *GetExpireVoiceChatOrderResp) GetList() []*ExpireVoiceChatOrder {
	if x != nil {
		return x.List
	}
	return nil
}

// 结算订单
type SettleChatOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Star        int64  `protobuf:"varint,2,opt,name=star,proto3" json:"star,omitempty"`
	SettleType  int64  `protobuf:"varint,3,opt,name=settleType,proto3" json:"settleType,omitempty"` // 结算类型 2 已经确认 3 待确认 6 已经退款
	Uid         int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64  `protobuf:"varint,5,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *SettleChatOrderReq) Reset() {
	*x = SettleChatOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleChatOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleChatOrderReq) ProtoMessage() {}

func (x *SettleChatOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleChatOrderReq.ProtoReflect.Descriptor instead.
func (*SettleChatOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{20}
}

func (x *SettleChatOrderReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *SettleChatOrderReq) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *SettleChatOrderReq) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

func (x *SettleChatOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SettleChatOrderReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type SettleChatOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid         int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Amount              int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` // XXX收益金额 分
	OrderId             string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrderType           int64  `protobuf:"varint,4,opt,name=orderType,proto3" json:"orderType,omitempty"`
	UsedMinute          int64  `protobuf:"varint,5,opt,name=usedMinute,proto3" json:"usedMinute,omitempty"`
	Uid                 int64  `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	PlatformShareAmount int64  `protobuf:"varint,7,opt,name=platformShareAmount,proto3" json:"platformShareAmount,omitempty"` // 平台分成金额 分
}

func (x *SettleChatOrderResp) Reset() {
	*x = SettleChatOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleChatOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleChatOrderResp) ProtoMessage() {}

func (x *SettleChatOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleChatOrderResp.ProtoReflect.Descriptor instead.
func (*SettleChatOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{21}
}

func (x *SettleChatOrderResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *SettleChatOrderResp) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SettleChatOrderResp) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *SettleChatOrderResp) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *SettleChatOrderResp) GetUsedMinute() int64 {
	if x != nil {
		return x.UsedMinute
	}
	return 0
}

func (x *SettleChatOrderResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SettleChatOrderResp) GetPlatformShareAmount() int64 {
	if x != nil {
		return x.PlatformShareAmount
	}
	return 0
}

// 内部获取订单详情
type ChatOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	CreateTime       string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ListenerUid      int64  `protobuf:"varint,3,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerNickName string `protobuf:"bytes,4,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"`
	ListenerAvatar   string `protobuf:"bytes,5,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`
	BuyUnit          int64  `protobuf:"varint,6,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`
	UsedChatMinute   int64  `protobuf:"varint,7,opt,name=usedChatMinute,proto3" json:"usedChatMinute,omitempty"`
	StartTime        string `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime          string `protobuf:"bytes,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExpiryTime       string `protobuf:"bytes,10,opt,name=expiryTime,proto3" json:"expiryTime,omitempty"`
	SaveAmount       int64  `protobuf:"varint,11,opt,name=saveAmount,proto3" json:"saveAmount,omitempty"`
	ActualAmount     int64  `protobuf:"varint,12,opt,name=actualAmount,proto3" json:"actualAmount,omitempty"`
	OrderState       int64  `protobuf:"varint,13,opt,name=orderState,proto3" json:"orderState,omitempty"`
	ChatUnitMinute   int64  `protobuf:"varint,14,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"`
	OrderType        int64  `protobuf:"varint,15,opt,name=orderType,proto3" json:"orderType,omitempty"`
	NickName         string `protobuf:"bytes,16,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Uid              int64  `protobuf:"varint,17,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ChatOrder) Reset() {
	*x = ChatOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatOrder) ProtoMessage() {}

func (x *ChatOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatOrder.ProtoReflect.Descriptor instead.
func (*ChatOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{22}
}

func (x *ChatOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ChatOrder) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ChatOrder) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ChatOrder) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *ChatOrder) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

func (x *ChatOrder) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *ChatOrder) GetUsedChatMinute() int64 {
	if x != nil {
		return x.UsedChatMinute
	}
	return 0
}

func (x *ChatOrder) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ChatOrder) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ChatOrder) GetExpiryTime() string {
	if x != nil {
		return x.ExpiryTime
	}
	return ""
}

func (x *ChatOrder) GetSaveAmount() int64 {
	if x != nil {
		return x.SaveAmount
	}
	return 0
}

func (x *ChatOrder) GetActualAmount() int64 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

func (x *ChatOrder) GetOrderState() int64 {
	if x != nil {
		return x.OrderState
	}
	return 0
}

func (x *ChatOrder) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *ChatOrder) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ChatOrder) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ChatOrder) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetChatOrderDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *GetChatOrderDetailReq) Reset() {
	*x = GetChatOrderDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderDetailReq) ProtoMessage() {}

func (x *GetChatOrderDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderDetailReq.ProtoReflect.Descriptor instead.
func (*GetChatOrderDetailReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{23}
}

func (x *GetChatOrderDetailReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetChatOrderDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *ShortChatOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetChatOrderDetailResp) Reset() {
	*x = GetChatOrderDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderDetailResp) ProtoMessage() {}

func (x *GetChatOrderDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderDetailResp.ProtoReflect.Descriptor instead.
func (*GetChatOrderDetailResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{24}
}

func (x *GetChatOrderDetailResp) GetOrder() *ShortChatOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

// 获取XXX服务评价列表
type ListenerOrderOpinion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                        // 用户id
	ListenerUid      int64   `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`                        // XXX用户id
	Avatar           string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                   // 用户头像
	NickName         string  `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`                               // 用户昵称
	OrderId          string  `protobuf:"bytes,5,opt,name=orderId,proto3" json:"orderId,omitempty"`                                 // 订单id
	CommentTime      string  `protobuf:"bytes,6,opt,name=commentTime,proto3" json:"commentTime,omitempty"`                         //用户评价时间
	Comment          string  `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`                                 // 用户评论
	CommentTag       []int64 `protobuf:"varint,8,rep,packed,name=comment_tag,json=commentTag,proto3" json:"comment_tag,omitempty"` // 评价标签
	Star             int64   `protobuf:"varint,9,opt,name=star,proto3" json:"star,omitempty"`                                      // 好评 1 不满意 3 一般 5 满意
	ReplyTime        string  `protobuf:"bytes,10,opt,name=replyTime,proto3" json:"replyTime,omitempty"`                            //XXX回复时间
	ListenerReply    string  `protobuf:"bytes,11,opt,name=listenerReply,proto3" json:"listenerReply,omitempty"`                    //XXX回复内容
	OrderType        int64   `protobuf:"varint,12,opt,name=orderType,proto3" json:"orderType,omitempty"`                           // 订单类型
	FeedbackTime     string  `protobuf:"bytes,13,opt,name=feedbackTime,proto3" json:"feedbackTime,omitempty"`
	Feedback         string  `protobuf:"bytes,14,opt,name=feedback,proto3" json:"feedback,omitempty"`
	ListenerNickName string  `protobuf:"bytes,15,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"` //XXX昵称
	ListenerAvatar   string  `protobuf:"bytes,16,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`     // XXX头像
}

func (x *ListenerOrderOpinion) Reset() {
	*x = ListenerOrderOpinion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerOrderOpinion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerOrderOpinion) ProtoMessage() {}

func (x *ListenerOrderOpinion) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerOrderOpinion.ProtoReflect.Descriptor instead.
func (*ListenerOrderOpinion) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{25}
}

func (x *ListenerOrderOpinion) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListenerOrderOpinion) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ListenerOrderOpinion) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ListenerOrderOpinion) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ListenerOrderOpinion) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ListenerOrderOpinion) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *ListenerOrderOpinion) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ListenerOrderOpinion) GetCommentTag() []int64 {
	if x != nil {
		return x.CommentTag
	}
	return nil
}

func (x *ListenerOrderOpinion) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *ListenerOrderOpinion) GetReplyTime() string {
	if x != nil {
		return x.ReplyTime
	}
	return ""
}

func (x *ListenerOrderOpinion) GetListenerReply() string {
	if x != nil {
		return x.ListenerReply
	}
	return ""
}

func (x *ListenerOrderOpinion) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ListenerOrderOpinion) GetFeedbackTime() string {
	if x != nil {
		return x.FeedbackTime
	}
	return ""
}

func (x *ListenerOrderOpinion) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *ListenerOrderOpinion) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *ListenerOrderOpinion) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

type GetListenerCommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Star        int64 `protobuf:"varint,3,opt,name=star,proto3" json:"star,omitempty"`
	PageNo      int64 `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetListenerCommentListReq) Reset() {
	*x = GetListenerCommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerCommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerCommentListReq) ProtoMessage() {}

func (x *GetListenerCommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerCommentListReq.ProtoReflect.Descriptor instead.
func (*GetListenerCommentListReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{26}
}

func (x *GetListenerCommentListReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetListenerCommentListReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerCommentListReq) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *GetListenerCommentListReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetListenerCommentListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetListenerCommentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListenerOrderOpinion `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetListenerCommentListResp) Reset() {
	*x = GetListenerCommentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerCommentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerCommentListResp) ProtoMessage() {}

func (x *GetListenerCommentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerCommentListResp.ProtoReflect.Descriptor instead.
func (*GetListenerCommentListResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{27}
}

func (x *GetListenerCommentListResp) GetList() []*ListenerOrderOpinion {
	if x != nil {
		return x.List
	}
	return nil
}

// XXX回复
type ReplyOrderCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Reply       string `protobuf:"bytes,3,opt,name=reply,proto3" json:"reply,omitempty"` // XXX回复
}

func (x *ReplyOrderCommentReq) Reset() {
	*x = ReplyOrderCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyOrderCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyOrderCommentReq) ProtoMessage() {}

func (x *ReplyOrderCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyOrderCommentReq.ProtoReflect.Descriptor instead.
func (*ReplyOrderCommentReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{28}
}

func (x *ReplyOrderCommentReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReplyOrderCommentReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ReplyOrderCommentReq) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type ReplyOrderCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyOrderCommentResp) Reset() {
	*x = ReplyOrderCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyOrderCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyOrderCommentResp) ProtoMessage() {}

func (x *ReplyOrderCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyOrderCommentResp.ProtoReflect.Descriptor instead.
func (*ReplyOrderCommentResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{29}
}

// XXX反馈用户
type FeedbackOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Uid         int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64  `protobuf:"varint,3,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Feedback    string `protobuf:"bytes,4,opt,name=feedback,proto3" json:"feedback,omitempty"`
	SendMsg     int64  `protobuf:"varint,5,opt,name=sendMsg,proto3" json:"sendMsg,omitempty"` // 是否同步发送到聊天 2 是 4 否
}

func (x *FeedbackOrderReq) Reset() {
	*x = FeedbackOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackOrderReq) ProtoMessage() {}

func (x *FeedbackOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackOrderReq.ProtoReflect.Descriptor instead.
func (*FeedbackOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{30}
}

func (x *FeedbackOrderReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FeedbackOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FeedbackOrderReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *FeedbackOrderReq) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *FeedbackOrderReq) GetSendMsg() int64 {
	if x != nil {
		return x.SendMsg
	}
	return 0
}

type FeedbackOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FeedbackOrderResp) Reset() {
	*x = FeedbackOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackOrderResp) ProtoMessage() {}

func (x *FeedbackOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackOrderResp.ProtoReflect.Descriptor instead.
func (*FeedbackOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{31}
}

// 退款订单列表
type RefundChatOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string  `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	CreateTime       string  `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ListenerUid      int64   `protobuf:"varint,3,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerNickName string  `protobuf:"bytes,4,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"`
	ListenerAvatar   string  `protobuf:"bytes,5,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`
	NickName         string  `protobuf:"bytes,6,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Uid              int64   `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	Avatar           string  `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BuyUnit          int64   `protobuf:"varint,9,opt,name=buyUnit,proto3" json:"buyUnit,omitempty"`
	ChatUnitMinute   int64   `protobuf:"varint,10,opt,name=chatUnitMinute,proto3" json:"chatUnitMinute,omitempty"`
	UnitPrice        int64   `protobuf:"varint,11,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	ActualAmount     int64   `protobuf:"varint,12,opt,name=actualAmount,proto3" json:"actualAmount,omitempty"`
	SaveAmount       int64   `protobuf:"varint,13,opt,name=saveAmount,proto3" json:"saveAmount,omitempty"`
	OrderState       int64   `protobuf:"varint,14,opt,name=orderState,proto3" json:"orderState,omitempty"`
	OrderType        int64   `protobuf:"varint,15,opt,name=orderType,proto3" json:"orderType,omitempty"`
	Comment          string  `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty"`
	CommentTag       []int64 `protobuf:"varint,17,rep,packed,name=commentTag,proto3" json:"commentTag,omitempty"`
	CommentTime      string  `protobuf:"bytes,18,opt,name=commentTime,proto3" json:"commentTime,omitempty"`
	Star             int64   `protobuf:"varint,19,opt,name=star,proto3" json:"star,omitempty"`
	FeedbackTime     string  `protobuf:"bytes,20,opt,name=feedbackTime,proto3" json:"feedbackTime,omitempty"`
	Feedback         string  `protobuf:"bytes,21,opt,name=feedback,proto3" json:"feedback,omitempty"`
	UsedChatMinute   int64   `protobuf:"varint,22,opt,name=usedChatMinute,proto3" json:"usedChatMinute,omitempty"`
	StartTime        string  `protobuf:"bytes,23,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime          string  `protobuf:"bytes,24,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExpiryTime       string  `protobuf:"bytes,25,opt,name=expiryTime,proto3" json:"expiryTime,omitempty"`
	ApplyRefundTime  string  `protobuf:"bytes,26,opt,name=applyRefundTime,proto3" json:"applyRefundTime,omitempty"`  // 首次申请退款时间
	RefundReason     string  `protobuf:"bytes,27,opt,name=refundReason,proto3" json:"refundReason,omitempty"`        // 退款原因
	RefundReasonTag  int64   `protobuf:"varint,28,opt,name=refundReasonTag,proto3" json:"refundReasonTag,omitempty"` // 退款原因标签
	Additional       string  `protobuf:"bytes,29,opt,name=additional,proto3" json:"additional,omitempty"`            // 补充信息
	Attachment       string  `protobuf:"bytes,30,opt,name=attachment,proto3" json:"attachment,omitempty"`            // 附加图片 #分隔
	UserChannel      string  `protobuf:"bytes,31,opt,name=userChannel,proto3" json:"userChannel,omitempty"`          // 用户渠道
}

func (x *RefundChatOrder) Reset() {
	*x = RefundChatOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundChatOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundChatOrder) ProtoMessage() {}

func (x *RefundChatOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundChatOrder.ProtoReflect.Descriptor instead.
func (*RefundChatOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{32}
}

func (x *RefundChatOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *RefundChatOrder) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RefundChatOrder) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *RefundChatOrder) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *RefundChatOrder) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

func (x *RefundChatOrder) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *RefundChatOrder) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RefundChatOrder) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RefundChatOrder) GetBuyUnit() int64 {
	if x != nil {
		return x.BuyUnit
	}
	return 0
}

func (x *RefundChatOrder) GetChatUnitMinute() int64 {
	if x != nil {
		return x.ChatUnitMinute
	}
	return 0
}

func (x *RefundChatOrder) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *RefundChatOrder) GetActualAmount() int64 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

func (x *RefundChatOrder) GetSaveAmount() int64 {
	if x != nil {
		return x.SaveAmount
	}
	return 0
}

func (x *RefundChatOrder) GetOrderState() int64 {
	if x != nil {
		return x.OrderState
	}
	return 0
}

func (x *RefundChatOrder) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *RefundChatOrder) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RefundChatOrder) GetCommentTag() []int64 {
	if x != nil {
		return x.CommentTag
	}
	return nil
}

func (x *RefundChatOrder) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *RefundChatOrder) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *RefundChatOrder) GetFeedbackTime() string {
	if x != nil {
		return x.FeedbackTime
	}
	return ""
}

func (x *RefundChatOrder) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *RefundChatOrder) GetUsedChatMinute() int64 {
	if x != nil {
		return x.UsedChatMinute
	}
	return 0
}

func (x *RefundChatOrder) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *RefundChatOrder) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *RefundChatOrder) GetExpiryTime() string {
	if x != nil {
		return x.ExpiryTime
	}
	return ""
}

func (x *RefundChatOrder) GetApplyRefundTime() string {
	if x != nil {
		return x.ApplyRefundTime
	}
	return ""
}

func (x *RefundChatOrder) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *RefundChatOrder) GetRefundReasonTag() int64 {
	if x != nil {
		return x.RefundReasonTag
	}
	return 0
}

func (x *RefundChatOrder) GetAdditional() string {
	if x != nil {
		return x.Additional
	}
	return ""
}

func (x *RefundChatOrder) GetAttachment() string {
	if x != nil {
		return x.Attachment
	}
	return ""
}

func (x *RefundChatOrder) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

type GetOrderListByAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo      int64   `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Uid         int64   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64   `protobuf:"varint,4,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	OrderType   int64   `protobuf:"varint,5,opt,name=orderType,proto3" json:"orderType,omitempty"`
	OrderId     string  `protobuf:"bytes,6,opt,name=orderId,proto3" json:"orderId,omitempty"`
	State       []int64 `protobuf:"varint,7,rep,packed,name=state,proto3" json:"state,omitempty"`
}

func (x *GetOrderListByAdminReq) Reset() {
	*x = GetOrderListByAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListByAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListByAdminReq) ProtoMessage() {}

func (x *GetOrderListByAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListByAdminReq.ProtoReflect.Descriptor instead.
func (*GetOrderListByAdminReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{33}
}

func (x *GetOrderListByAdminReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetOrderListByAdminReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetOrderListByAdminReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetOrderListByAdminReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetOrderListByAdminReq) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *GetOrderListByAdminReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetOrderListByAdminReq) GetState() []int64 {
	if x != nil {
		return x.State
	}
	return nil
}

type GetOrderListByAdminResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum  int64              `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	List []*RefundChatOrder `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetOrderListByAdminResp) Reset() {
	*x = GetOrderListByAdminResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListByAdminResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListByAdminResp) ProtoMessage() {}

func (x *GetOrderListByAdminResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListByAdminResp.ProtoReflect.Descriptor instead.
func (*GetOrderListByAdminResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{34}
}

func (x *GetOrderListByAdminResp) GetSum() int64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *GetOrderListByAdminResp) GetList() []*RefundChatOrder {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取需要自动处理的订单
type GetAutoProcessOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo     int64   `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize   int64   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	BeforeTime string  `protobuf:"bytes,3,opt,name=beforeTime,proto3" json:"beforeTime,omitempty"`
	State      []int64 `protobuf:"varint,4,rep,packed,name=state,proto3" json:"state,omitempty"`
}

func (x *GetAutoProcessOrderReq) Reset() {
	*x = GetAutoProcessOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoProcessOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoProcessOrderReq) ProtoMessage() {}

func (x *GetAutoProcessOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoProcessOrderReq.ProtoReflect.Descriptor instead.
func (*GetAutoProcessOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{35}
}

func (x *GetAutoProcessOrderReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetAutoProcessOrderReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetAutoProcessOrderReq) GetBeforeTime() string {
	if x != nil {
		return x.BeforeTime
	}
	return ""
}

func (x *GetAutoProcessOrderReq) GetState() []int64 {
	if x != nil {
		return x.State
	}
	return nil
}

type AutoProcessOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,2,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	OrderId     string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	ListenerUid int64  `protobuf:"varint,4,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Uid         int64  `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	OrderType   int64  `protobuf:"varint,6,opt,name=orderType,proto3" json:"orderType,omitempty"`
	OrderState  int64  `protobuf:"varint,7,opt,name=orderState,proto3" json:"orderState,omitempty"`
}

func (x *AutoProcessOrder) Reset() {
	*x = AutoProcessOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoProcessOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoProcessOrder) ProtoMessage() {}

func (x *AutoProcessOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoProcessOrder.ProtoReflect.Descriptor instead.
func (*AutoProcessOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{36}
}

func (x *AutoProcessOrder) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AutoProcessOrder) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *AutoProcessOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AutoProcessOrder) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *AutoProcessOrder) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AutoProcessOrder) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *AutoProcessOrder) GetOrderState() int64 {
	if x != nil {
		return x.OrderState
	}
	return 0
}

type GetAutoProcessOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AutoProcessOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetAutoProcessOrderResp) Reset() {
	*x = GetAutoProcessOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoProcessOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoProcessOrderResp) ProtoMessage() {}

func (x *GetAutoProcessOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoProcessOrderResp.ProtoReflect.Descriptor instead.
func (*GetAutoProcessOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{37}
}

func (x *GetAutoProcessOrderResp) GetList() []*AutoProcessOrder {
	if x != nil {
		return x.List
	}
	return nil
}

// 更新订单统计数据
type UpdateOrderLastDaysStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid []int64 `protobuf:"varint,1,rep,packed,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *UpdateOrderLastDaysStatReq) Reset() {
	*x = UpdateOrderLastDaysStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderLastDaysStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderLastDaysStatReq) ProtoMessage() {}

func (x *UpdateOrderLastDaysStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderLastDaysStatReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderLastDaysStatReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateOrderLastDaysStatReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateOrderLastDaysStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateOrderLastDaysStatResp) Reset() {
	*x = UpdateOrderLastDaysStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderLastDaysStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderLastDaysStatResp) ProtoMessage() {}

func (x *UpdateOrderLastDaysStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderLastDaysStatResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderLastDaysStatResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{39}
}

// 获取最近的好评
type GetRecentGoodCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo   int64 `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetRecentGoodCommentReq) Reset() {
	*x = GetRecentGoodCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentGoodCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentGoodCommentReq) ProtoMessage() {}

func (x *GetRecentGoodCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentGoodCommentReq.ProtoReflect.Descriptor instead.
func (*GetRecentGoodCommentReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{40}
}

func (x *GetRecentGoodCommentReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetRecentGoodCommentReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RecentGoodComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Uid         int64  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *RecentGoodComment) Reset() {
	*x = RecentGoodComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentGoodComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentGoodComment) ProtoMessage() {}

func (x *RecentGoodComment) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentGoodComment.ProtoReflect.Descriptor instead.
func (*RecentGoodComment) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{41}
}

func (x *RecentGoodComment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RecentGoodComment) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *RecentGoodComment) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetRecentGoodCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RecentGoodComment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetRecentGoodCommentResp) Reset() {
	*x = GetRecentGoodCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentGoodCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentGoodCommentResp) ProtoMessage() {}

func (x *GetRecentGoodCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentGoodCommentResp.ProtoReflect.Descriptor instead.
func (*GetRecentGoodCommentResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{42}
}

func (x *GetRecentGoodCommentResp) GetList() []*RecentGoodComment {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取指定XXX最近的好评
type GetListenerRecentGoodCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener []*ShortListenerProfile `protobuf:"bytes,1,rep,name=listener,proto3" json:"listener,omitempty"`
}

func (x *GetListenerRecentGoodCommentReq) Reset() {
	*x = GetListenerRecentGoodCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerRecentGoodCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerRecentGoodCommentReq) ProtoMessage() {}

func (x *GetListenerRecentGoodCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerRecentGoodCommentReq.ProtoReflect.Descriptor instead.
func (*GetListenerRecentGoodCommentReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{43}
}

func (x *GetListenerRecentGoodCommentReq) GetListener() []*ShortListenerProfile {
	if x != nil {
		return x.Listener
	}
	return nil
}

type GetListenerRecentGoodCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RecentGoodComment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetListenerRecentGoodCommentResp) Reset() {
	*x = GetListenerRecentGoodCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerRecentGoodCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerRecentGoodCommentResp) ProtoMessage() {}

func (x *GetListenerRecentGoodCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerRecentGoodCommentResp.ProtoReflect.Descriptor instead.
func (*GetListenerRecentGoodCommentResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{44}
}

func (x *GetListenerRecentGoodCommentResp) GetList() []*RecentGoodComment {
	if x != nil {
		return x.List
	}
	return nil
}

type ShortListenerProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid      int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerNickName string `protobuf:"bytes,2,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"`
	ListenerAvatar   string `protobuf:"bytes,3,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`
}

func (x *ShortListenerProfile) Reset() {
	*x = ShortListenerProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortListenerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortListenerProfile) ProtoMessage() {}

func (x *ShortListenerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortListenerProfile.ProtoReflect.Descriptor instead.
func (*ShortListenerProfile) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{45}
}

func (x *ShortListenerProfile) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ShortListenerProfile) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *ShortListenerProfile) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

// 获取最近一个好评订单
type GetLastCommentOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Star        int64 `protobuf:"varint,2,opt,name=star,proto3" json:"star,omitempty"`
}

func (x *GetLastCommentOrderReq) Reset() {
	*x = GetLastCommentOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastCommentOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastCommentOrderReq) ProtoMessage() {}

func (x *GetLastCommentOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastCommentOrderReq.ProtoReflect.Descriptor instead.
func (*GetLastCommentOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{46}
}

func (x *GetLastCommentOrderReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetLastCommentOrderReq) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

type GetLastCommentOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string  `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	ListenerNickName string  `protobuf:"bytes,2,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"` // XXX昵称
	NickName         string  `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`                 // 用户昵称
	CommentTime      string  `protobuf:"bytes,4,opt,name=commentTime,proto3" json:"commentTime,omitempty"`           // 用户评价时间
	CommentTag       []int64 `protobuf:"varint,5,rep,packed,name=commentTag,proto3" json:"commentTag,omitempty"`     // 评价标签
}

func (x *GetLastCommentOrderResp) Reset() {
	*x = GetLastCommentOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastCommentOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastCommentOrderResp) ProtoMessage() {}

func (x *GetLastCommentOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastCommentOrderResp.ProtoReflect.Descriptor instead.
func (*GetLastCommentOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{47}
}

func (x *GetLastCommentOrderResp) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetLastCommentOrderResp) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *GetLastCommentOrderResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetLastCommentOrderResp) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *GetLastCommentOrderResp) GetCommentTag() []int64 {
	if x != nil {
		return x.CommentTag
	}
	return nil
}

// 获取最近时间段用户数
type GetRecentPaidUserCntReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	StartTime   string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     string `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetRecentPaidUserCntReq) Reset() {
	*x = GetRecentPaidUserCntReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentPaidUserCntReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentPaidUserCntReq) ProtoMessage() {}

func (x *GetRecentPaidUserCntReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentPaidUserCntReq.ProtoReflect.Descriptor instead.
func (*GetRecentPaidUserCntReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{48}
}

func (x *GetRecentPaidUserCntReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetRecentPaidUserCntReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetRecentPaidUserCntReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type GetRecentPaidUserCntResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserCnt int64 `protobuf:"varint,1,opt,name=userCnt,proto3" json:"userCnt,omitempty"`
}

func (x *GetRecentPaidUserCntResp) Reset() {
	*x = GetRecentPaidUserCntResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentPaidUserCntResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentPaidUserCntResp) ProtoMessage() {}

func (x *GetRecentPaidUserCntResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentPaidUserCntResp.ProtoReflect.Descriptor instead.
func (*GetRecentPaidUserCntResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{49}
}

func (x *GetRecentPaidUserCntResp) GetUserCnt() int64 {
	if x != nil {
		return x.UserCnt
	}
	return 0
}

// 用户获取反馈列表
type GetChatOrderFeedbackListByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	PageNo   int64 `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetChatOrderFeedbackListByUserReq) Reset() {
	*x = GetChatOrderFeedbackListByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderFeedbackListByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderFeedbackListByUserReq) ProtoMessage() {}

func (x *GetChatOrderFeedbackListByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderFeedbackListByUserReq.ProtoReflect.Descriptor instead.
func (*GetChatOrderFeedbackListByUserReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{50}
}

func (x *GetChatOrderFeedbackListByUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetChatOrderFeedbackListByUserReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetChatOrderFeedbackListByUserReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserSeeChatOrderFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`                   //单号
	CreateTime       string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`             // 下单时间
	ListenerUid      int64  `protobuf:"varint,3,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`          // XXXuid
	ListenerNickName string `protobuf:"bytes,4,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"` // XXX名称
	ListenerAvatar   string `protobuf:"bytes,5,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`     // XXX缩略头像
	FeedbackTime     string `protobuf:"bytes,6,opt,name=feedbackTime,proto3" json:"feedbackTime,omitempty"`         // 反馈时间
	Feedback         string `protobuf:"bytes,7,opt,name=feedback,proto3" json:"feedback,omitempty"`                 // 反馈内容
}

func (x *UserSeeChatOrderFeedback) Reset() {
	*x = UserSeeChatOrderFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSeeChatOrderFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSeeChatOrderFeedback) ProtoMessage() {}

func (x *UserSeeChatOrderFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSeeChatOrderFeedback.ProtoReflect.Descriptor instead.
func (*UserSeeChatOrderFeedback) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{51}
}

func (x *UserSeeChatOrderFeedback) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UserSeeChatOrderFeedback) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserSeeChatOrderFeedback) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UserSeeChatOrderFeedback) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *UserSeeChatOrderFeedback) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

func (x *UserSeeChatOrderFeedback) GetFeedbackTime() string {
	if x != nil {
		return x.FeedbackTime
	}
	return ""
}

func (x *UserSeeChatOrderFeedback) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type GetChatOrderFeedbackListByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserSeeChatOrderFeedback `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetChatOrderFeedbackListByUserResp) Reset() {
	*x = GetChatOrderFeedbackListByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatOrderFeedbackListByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatOrderFeedbackListByUserResp) ProtoMessage() {}

func (x *GetChatOrderFeedbackListByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatOrderFeedbackListByUserResp.ProtoReflect.Descriptor instead.
func (*GetChatOrderFeedbackListByUserResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{52}
}

func (x *GetChatOrderFeedbackListByUserResp) GetList() []*UserSeeChatOrderFeedback {
	if x != nil {
		return x.List
	}
	return nil
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xc8, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xd7, 0x02, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x41, 0x64, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61,
	0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x14, 0x44, 0x6f, 0x43, 0x68, 0x61,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc6,
	0x07, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x26, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xd3, 0x06, 0x0a, 0x15, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x31, 0x53, 0x74, 0x61, 0x72, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x31, 0x53, 0x74, 0x61, 0x72, 0x35, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x31, 0x53, 0x74, 0x61, 0x72, 0x33, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x65, 0x70, 0x31, 0x53, 0x74, 0x61, 0x72, 0x33, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x31, 0x53, 0x74, 0x61, 0x72, 0x31,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x31, 0x53, 0x74, 0x61, 0x72, 0x31, 0x12, 0x32, 0x0a, 0x14, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x31, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x31, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x30, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x32, 0x53, 0x74, 0x61, 0x72, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x32, 0x53, 0x74, 0x61, 0x72,
	0x35, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x32, 0x53, 0x74, 0x61, 0x72, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x32, 0x53, 0x74,
	0x61, 0x72, 0x33, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x32, 0x53, 0x74, 0x61, 0x72, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x32,
	0x53, 0x74, 0x61, 0x72, 0x31, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a,
	0x14, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x6f,
	0x75, 0x72, 0x45, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x45, 0x6e,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65,
	0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x72, 0x65, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xf2, 0x01,
	0x0a, 0x10, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x11, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x41,
	0x64, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xdb,
	0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa0, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x14, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x22, 0xeb, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xad,
	0x04, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x75, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x61, 0x76, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x31,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xff, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4f, 0x70, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x68, 0x0a,
	0x14, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x96, 0x01, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x22, 0x13, 0x0a, 0x11, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf3,
	0x07, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54,
	0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xde, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x43, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x5b, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x22, 0x4d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x8c, 0x01, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22,
	0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x22,
	0xbd, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x22,
	0x73, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x22, 0x56, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xb5, 0x0d, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x64, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x6f,
	0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x10, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x14, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6f, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_order_proto_goTypes = []interface{}{
	(*CreateChatOrderReq)(nil),                 // 0: pb.CreateChatOrderReq
	(*CreateChatOrderResp)(nil),                // 1: pb.CreateChatOrderResp
	(*DoChatOrderActionReq)(nil),               // 2: pb.DoChatOrderActionReq
	(*DoChatOrderActionResp)(nil),              // 3: pb.DoChatOrderActionResp
	(*ShortChatOrder)(nil),                     // 4: pb.ShortChatOrder
	(*GetChatOrderListReq)(nil),                // 5: pb.GetChatOrderListReq
	(*GetChatOrderListResp)(nil),               // 6: pb.GetChatOrderListResp
	(*BusinessChatPricePlan)(nil),              // 7: pb.BusinessChatPricePlan
	(*GetBusinessChatPricePlanReq)(nil),        // 8: pb.GetBusinessChatPricePlanReq
	(*GetBusinessChatPricePlanResp)(nil),       // 9: pb.GetBusinessChatPricePlanResp
	(*EstimateOrderReq)(nil),                   // 10: pb.EstimateOrderReq
	(*EstimateOrderResp)(nil),                  // 11: pb.EstimateOrderResp
	(*ChatOrderStateLog)(nil),                  // 12: pb.ChatOrderStateLog
	(*GetChatOrderStateLogReq)(nil),            // 13: pb.GetChatOrderStateLogReq
	(*GetChatOrderStateLogResp)(nil),           // 14: pb.GetChatOrderStateLogResp
	(*UpdateChatOrderUseReq)(nil),              // 15: pb.UpdateChatOrderUseReq
	(*UpdateChatOrderUseResp)(nil),             // 16: pb.UpdateChatOrderUseResp
	(*GetExpireVoiceChatOrderReq)(nil),         // 17: pb.GetExpireVoiceChatOrderReq
	(*ExpireVoiceChatOrder)(nil),               // 18: pb.ExpireVoiceChatOrder
	(*GetExpireVoiceChatOrderResp)(nil),        // 19: pb.GetExpireVoiceChatOrderResp
	(*SettleChatOrderReq)(nil),                 // 20: pb.SettleChatOrderReq
	(*SettleChatOrderResp)(nil),                // 21: pb.SettleChatOrderResp
	(*ChatOrder)(nil),                          // 22: pb.ChatOrder
	(*GetChatOrderDetailReq)(nil),              // 23: pb.GetChatOrderDetailReq
	(*GetChatOrderDetailResp)(nil),             // 24: pb.GetChatOrderDetailResp
	(*ListenerOrderOpinion)(nil),               // 25: pb.ListenerOrderOpinion
	(*GetListenerCommentListReq)(nil),          // 26: pb.GetListenerCommentListReq
	(*GetListenerCommentListResp)(nil),         // 27: pb.GetListenerCommentListResp
	(*ReplyOrderCommentReq)(nil),               // 28: pb.ReplyOrderCommentReq
	(*ReplyOrderCommentResp)(nil),              // 29: pb.ReplyOrderCommentResp
	(*FeedbackOrderReq)(nil),                   // 30: pb.FeedbackOrderReq
	(*FeedbackOrderResp)(nil),                  // 31: pb.FeedbackOrderResp
	(*RefundChatOrder)(nil),                    // 32: pb.RefundChatOrder
	(*GetOrderListByAdminReq)(nil),             // 33: pb.GetOrderListByAdminReq
	(*GetOrderListByAdminResp)(nil),            // 34: pb.GetOrderListByAdminResp
	(*GetAutoProcessOrderReq)(nil),             // 35: pb.GetAutoProcessOrderReq
	(*AutoProcessOrder)(nil),                   // 36: pb.AutoProcessOrder
	(*GetAutoProcessOrderResp)(nil),            // 37: pb.GetAutoProcessOrderResp
	(*UpdateOrderLastDaysStatReq)(nil),         // 38: pb.UpdateOrderLastDaysStatReq
	(*UpdateOrderLastDaysStatResp)(nil),        // 39: pb.UpdateOrderLastDaysStatResp
	(*GetRecentGoodCommentReq)(nil),            // 40: pb.GetRecentGoodCommentReq
	(*RecentGoodComment)(nil),                  // 41: pb.RecentGoodComment
	(*GetRecentGoodCommentResp)(nil),           // 42: pb.GetRecentGoodCommentResp
	(*GetListenerRecentGoodCommentReq)(nil),    // 43: pb.GetListenerRecentGoodCommentReq
	(*GetListenerRecentGoodCommentResp)(nil),   // 44: pb.GetListenerRecentGoodCommentResp
	(*ShortListenerProfile)(nil),               // 45: pb.ShortListenerProfile
	(*GetLastCommentOrderReq)(nil),             // 46: pb.GetLastCommentOrderReq
	(*GetLastCommentOrderResp)(nil),            // 47: pb.GetLastCommentOrderResp
	(*GetRecentPaidUserCntReq)(nil),            // 48: pb.GetRecentPaidUserCntReq
	(*GetRecentPaidUserCntResp)(nil),           // 49: pb.GetRecentPaidUserCntResp
	(*GetChatOrderFeedbackListByUserReq)(nil),  // 50: pb.GetChatOrderFeedbackListByUserReq
	(*UserSeeChatOrderFeedback)(nil),           // 51: pb.UserSeeChatOrderFeedback
	(*GetChatOrderFeedbackListByUserResp)(nil), // 52: pb.GetChatOrderFeedbackListByUserResp
}
var file_order_proto_depIdxs = []int32{
	4,  // 0: pb.GetChatOrderListResp.list:type_name -> pb.ShortChatOrder
	7,  // 1: pb.GetBusinessChatPricePlanResp.Config:type_name -> pb.BusinessChatPricePlan
	12, // 2: pb.GetChatOrderStateLogResp.list:type_name -> pb.ChatOrderStateLog
	18, // 3: pb.GetExpireVoiceChatOrderResp.list:type_name -> pb.ExpireVoiceChatOrder
	4,  // 4: pb.GetChatOrderDetailResp.order:type_name -> pb.ShortChatOrder
	25, // 5: pb.GetListenerCommentListResp.list:type_name -> pb.ListenerOrderOpinion
	32, // 6: pb.GetOrderListByAdminResp.list:type_name -> pb.RefundChatOrder
	36, // 7: pb.GetAutoProcessOrderResp.list:type_name -> pb.AutoProcessOrder
	41, // 8: pb.GetRecentGoodCommentResp.list:type_name -> pb.RecentGoodComment
	45, // 9: pb.GetListenerRecentGoodCommentReq.listener:type_name -> pb.ShortListenerProfile
	41, // 10: pb.GetListenerRecentGoodCommentResp.list:type_name -> pb.RecentGoodComment
	51, // 11: pb.GetChatOrderFeedbackListByUserResp.list:type_name -> pb.UserSeeChatOrderFeedback
	10, // 12: pb.order.estimateOrder:input_type -> pb.EstimateOrderReq
	0,  // 13: pb.order.createChatOrder:input_type -> pb.CreateChatOrderReq
	23, // 14: pb.order.getChatOrderDetail:input_type -> pb.GetChatOrderDetailReq
	2,  // 15: pb.order.doChatOrderAction:input_type -> pb.DoChatOrderActionReq
	5,  // 16: pb.order.getChatOrderList:input_type -> pb.GetChatOrderListReq
	8,  // 17: pb.order.getBusinessChatPricePlan:input_type -> pb.GetBusinessChatPricePlanReq
	13, // 18: pb.order.getChatOrderStateLog:input_type -> pb.GetChatOrderStateLogReq
	15, // 19: pb.order.updateChatOrderUse:input_type -> pb.UpdateChatOrderUseReq
	17, // 20: pb.order.getExpireVoiceChatOrder:input_type -> pb.GetExpireVoiceChatOrderReq
	20, // 21: pb.order.settleChatOrder:input_type -> pb.SettleChatOrderReq
	26, // 22: pb.order.getListenerCommentList:input_type -> pb.GetListenerCommentListReq
	28, // 23: pb.order.replyOrderComment:input_type -> pb.ReplyOrderCommentReq
	30, // 24: pb.order.feedbackOrder:input_type -> pb.FeedbackOrderReq
	33, // 25: pb.order.getOrderListByAdmin:input_type -> pb.GetOrderListByAdminReq
	35, // 26: pb.order.getAutoProcessOrder:input_type -> pb.GetAutoProcessOrderReq
	38, // 27: pb.order.updateOrderLastDaysStat:input_type -> pb.UpdateOrderLastDaysStatReq
	40, // 28: pb.order.getRecentGoodComment:input_type -> pb.GetRecentGoodCommentReq
	43, // 29: pb.order.getListenerRecentGoodComment:input_type -> pb.GetListenerRecentGoodCommentReq
	46, // 30: pb.order.getLastCommentOrder:input_type -> pb.GetLastCommentOrderReq
	48, // 31: pb.order.getRecentPaidUserCnt:input_type -> pb.GetRecentPaidUserCntReq
	50, // 32: pb.order.getChatOrderFeedbackListByUser:input_type -> pb.GetChatOrderFeedbackListByUserReq
	11, // 33: pb.order.estimateOrder:output_type -> pb.EstimateOrderResp
	1,  // 34: pb.order.createChatOrder:output_type -> pb.CreateChatOrderResp
	24, // 35: pb.order.getChatOrderDetail:output_type -> pb.GetChatOrderDetailResp
	3,  // 36: pb.order.doChatOrderAction:output_type -> pb.DoChatOrderActionResp
	6,  // 37: pb.order.getChatOrderList:output_type -> pb.GetChatOrderListResp
	9,  // 38: pb.order.getBusinessChatPricePlan:output_type -> pb.GetBusinessChatPricePlanResp
	14, // 39: pb.order.getChatOrderStateLog:output_type -> pb.GetChatOrderStateLogResp
	16, // 40: pb.order.updateChatOrderUse:output_type -> pb.UpdateChatOrderUseResp
	19, // 41: pb.order.getExpireVoiceChatOrder:output_type -> pb.GetExpireVoiceChatOrderResp
	21, // 42: pb.order.settleChatOrder:output_type -> pb.SettleChatOrderResp
	27, // 43: pb.order.getListenerCommentList:output_type -> pb.GetListenerCommentListResp
	29, // 44: pb.order.replyOrderComment:output_type -> pb.ReplyOrderCommentResp
	31, // 45: pb.order.feedbackOrder:output_type -> pb.FeedbackOrderResp
	34, // 46: pb.order.getOrderListByAdmin:output_type -> pb.GetOrderListByAdminResp
	37, // 47: pb.order.getAutoProcessOrder:output_type -> pb.GetAutoProcessOrderResp
	39, // 48: pb.order.updateOrderLastDaysStat:output_type -> pb.UpdateOrderLastDaysStatResp
	42, // 49: pb.order.getRecentGoodComment:output_type -> pb.GetRecentGoodCommentResp
	44, // 50: pb.order.getListenerRecentGoodComment:output_type -> pb.GetListenerRecentGoodCommentResp
	47, // 51: pb.order.getLastCommentOrder:output_type -> pb.GetLastCommentOrderResp
	49, // 52: pb.order.getRecentPaidUserCnt:output_type -> pb.GetRecentPaidUserCntResp
	52, // 53: pb.order.getChatOrderFeedbackListByUser:output_type -> pb.GetChatOrderFeedbackListByUserResp
	33, // [33:54] is the sub-list for method output_type
	12, // [12:33] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoChatOrderActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoChatOrderActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortChatOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessChatPricePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessChatPricePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessChatPricePlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatOrderStateLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderStateLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderStateLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChatOrderUseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChatOrderUseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExpireVoiceChatOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireVoiceChatOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExpireVoiceChatOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleChatOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleChatOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerOrderOpinion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerCommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerCommentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyOrderCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyOrderCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedbackOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedbackOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundChatOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListByAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListByAdminResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoProcessOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoProcessOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoProcessOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderLastDaysStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderLastDaysStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentGoodCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentGoodComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentGoodCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerRecentGoodCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerRecentGoodCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortListenerProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastCommentOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastCommentOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentPaidUserCntReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentPaidUserCntResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderFeedbackListByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSeeChatOrderFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatOrderFeedbackListByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
