// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package server

import (
	"context"

	"jakarta/app/order/rpc/internal/logic"
	"jakarta/app/order/rpc/internal/svc"
	"jakarta/app/order/rpc/pb"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

// 获取订单费用估算
func (s *OrderServer) EstimateOrder(ctx context.Context, in *pb.EstimateOrderReq) (*pb.EstimateOrderResp, error) {
	l := logic.NewEstimateOrderLogic(ctx, s.svcCtx)
	return l.EstimateOrder(in)
}

// 咨询服务下订单
func (s *OrderServer) CreateChatOrder(ctx context.Context, in *pb.CreateChatOrderReq) (*pb.CreateChatOrderResp, error) {
	l := logic.NewCreateChatOrderLogic(ctx, s.svcCtx)
	return l.CreateChatOrder(in)
}

// 获取订单详情
func (s *OrderServer) GetChatOrderDetail(ctx context.Context, in *pb.GetChatOrderDetailReq) (*pb.GetChatOrderDetailResp, error) {
	l := logic.NewGetChatOrderDetailLogic(ctx, s.svcCtx)
	return l.GetChatOrderDetail(in)
}

// 订单操作
func (s *OrderServer) DoChatOrderAction(ctx context.Context, in *pb.DoChatOrderActionReq) (*pb.DoChatOrderActionResp, error) {
	l := logic.NewDoChatOrderActionLogic(ctx, s.svcCtx)
	return l.DoChatOrderAction(in)
}

// 订单列表
func (s *OrderServer) GetChatOrderList(ctx context.Context, in *pb.GetChatOrderListReq) (*pb.GetChatOrderListResp, error) {
	l := logic.NewGetChatOrderListLogic(ctx, s.svcCtx)
	return l.GetChatOrderList(in)
}

// 获取聊天服务价格配置
func (s *OrderServer) GetBusinessChatPricePlan(ctx context.Context, in *pb.GetBusinessChatPricePlanReq) (*pb.GetBusinessChatPricePlanResp, error) {
	l := logic.NewGetBusinessChatPricePlanLogic(ctx, s.svcCtx)
	return l.GetBusinessChatPricePlan(in)
}

// 获取用户订单状态变化记录
func (s *OrderServer) GetChatOrderStateLog(ctx context.Context, in *pb.GetChatOrderStateLogReq) (*pb.GetChatOrderStateLogResp, error) {
	l := logic.NewGetChatOrderStateLogLogic(ctx, s.svcCtx)
	return l.GetChatOrderStateLog(in)
}

// 更新订单的使用情况
func (s *OrderServer) UpdateChatOrderUse(ctx context.Context, in *pb.UpdateChatOrderUseReq) (*pb.UpdateChatOrderUseResp, error) {
	l := logic.NewUpdateChatOrderUseLogic(ctx, s.svcCtx)
	return l.UpdateChatOrderUse(in)
}

// 获取过期的语音订单
func (s *OrderServer) GetExpireVoiceChatOrder(ctx context.Context, in *pb.GetExpireVoiceChatOrderReq) (*pb.GetExpireVoiceChatOrderResp, error) {
	l := logic.NewGetExpireVoiceChatOrderLogic(ctx, s.svcCtx)
	return l.GetExpireVoiceChatOrder(in)
}

// 结算订单
func (s *OrderServer) SettleChatOrder(ctx context.Context, in *pb.SettleChatOrderReq) (*pb.SettleChatOrderResp, error) {
	l := logic.NewSettleChatOrderLogic(ctx, s.svcCtx)
	return l.SettleChatOrder(in)
}

// 获取XXX评价列表
func (s *OrderServer) GetListenerCommentList(ctx context.Context, in *pb.GetListenerCommentListReq) (*pb.GetListenerCommentListResp, error) {
	l := logic.NewGetListenerCommentListLogic(ctx, s.svcCtx)
	return l.GetListenerCommentList(in)
}

// XXX回复用户的订单评价
func (s *OrderServer) ReplyOrderComment(ctx context.Context, in *pb.ReplyOrderCommentReq) (*pb.ReplyOrderCommentResp, error) {
	l := logic.NewReplyOrderCommentLogic(ctx, s.svcCtx)
	return l.ReplyOrderComment(in)
}

// XXX反馈
func (s *OrderServer) FeedbackOrder(ctx context.Context, in *pb.FeedbackOrderReq) (*pb.FeedbackOrderResp, error) {
	l := logic.NewFeedbackOrderLogic(ctx, s.svcCtx)
	return l.FeedbackOrder(in)
}

// 管理后台获取订单列表
func (s *OrderServer) GetOrderListByAdmin(ctx context.Context, in *pb.GetOrderListByAdminReq) (*pb.GetOrderListByAdminResp, error) {
	l := logic.NewGetOrderListByAdminLogic(ctx, s.svcCtx)
	return l.GetOrderListByAdmin(in)
}

// 获取需要自动处理的订单
func (s *OrderServer) GetAutoProcessOrder(ctx context.Context, in *pb.GetAutoProcessOrderReq) (*pb.GetAutoProcessOrderResp, error) {
	l := logic.NewGetAutoProcessOrderLogic(ctx, s.svcCtx)
	return l.GetAutoProcessOrder(in)
}

// 更新XXX订单统计数据
func (s *OrderServer) UpdateOrderLastDaysStat(ctx context.Context, in *pb.UpdateOrderLastDaysStatReq) (*pb.UpdateOrderLastDaysStatResp, error) {
	l := logic.NewUpdateOrderLastDaysStatLogic(ctx, s.svcCtx)
	return l.UpdateOrderLastDaysStat(in)
}

// 获取最近的好评
func (s *OrderServer) GetRecentGoodComment(ctx context.Context, in *pb.GetRecentGoodCommentReq) (*pb.GetRecentGoodCommentResp, error) {
	l := logic.NewGetRecentGoodCommentLogic(ctx, s.svcCtx)
	return l.GetRecentGoodComment(in)
}

// 获取指定XXX的好评
func (s *OrderServer) GetListenerRecentGoodComment(ctx context.Context, in *pb.GetListenerRecentGoodCommentReq) (*pb.GetListenerRecentGoodCommentResp, error) {
	l := logic.NewGetListenerRecentGoodCommentLogic(ctx, s.svcCtx)
	return l.GetListenerRecentGoodComment(in)
}

// 获取最近一条评价
func (s *OrderServer) GetLastCommentOrder(ctx context.Context, in *pb.GetLastCommentOrderReq) (*pb.GetLastCommentOrderResp, error) {
	l := logic.NewGetLastCommentOrderLogic(ctx, s.svcCtx)
	return l.GetLastCommentOrder(in)
}

// 获取最近时间段付费用户数
func (s *OrderServer) GetRecentPaidUserCnt(ctx context.Context, in *pb.GetRecentPaidUserCntReq) (*pb.GetRecentPaidUserCntResp, error) {
	l := logic.NewGetRecentPaidUserCntLogic(ctx, s.svcCtx)
	return l.GetRecentPaidUserCnt(in)
}

// 用户获取反馈列表
func (s *OrderServer) GetChatOrderFeedbackListByUser(ctx context.Context, in *pb.GetChatOrderFeedbackListByUserReq) (*pb.GetChatOrderFeedbackListByUserResp, error) {
	l := logic.NewGetChatOrderFeedbackListByUserLogic(ctx, s.svcCtx)
	return l.GetChatOrderFeedbackListByUser(in)
}
