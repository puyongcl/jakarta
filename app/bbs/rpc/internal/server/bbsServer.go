// Code generated by goctl. DO NOT EDIT!
// Source: bbs.proto

package server

import (
	"context"

	"jakarta/app/bbs/rpc/internal/logic"
	"jakarta/app/bbs/rpc/internal/svc"
	"jakarta/app/bbs/rpc/pb"
)

type BbsServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedBbsServer
}

func NewBbsServer(svcCtx *svc.ServiceContext) *BbsServer {
	return &BbsServer{
		svcCtx: svcCtx,
	}
}

// 发布
func (s *BbsServer) AddStory(ctx context.Context, in *pb.AddStoryReq) (*pb.AddStoryResp, error) {
	l := logic.NewAddStoryLogic(ctx, s.svcCtx)
	return l.AddStory(in)
}

// 获取XX回复列表
func (s *BbsServer) GetStoryReplyListByUser(ctx context.Context, in *pb.GetStoryReplyListByUserReq) (*pb.GetStoryReplyListByUserResp, error) {
	l := logic.NewGetStoryReplyListByUserLogic(ctx, s.svcCtx)
	return l.GetStoryReplyListByUser(in)
}

// 回复
func (s *BbsServer) AddStoryReply(ctx context.Context, in *pb.AddStoryReplyReq) (*pb.AddStoryReplyResp, error) {
	l := logic.NewAddStoryReplyLogic(ctx, s.svcCtx)
	return l.AddStoryReply(in)
}

// 点赞
func (s *BbsServer) AddLikeStoryReply(ctx context.Context, in *pb.AddLikeStoryReplyReq) (*pb.AddLikeStoryReplyResp, error) {
	l := logic.NewAddLikeStoryReplyLogic(ctx, s.svcCtx)
	return l.AddLikeStoryReply(in)
}

// 删除发布
func (s *BbsServer) DelStory(ctx context.Context, in *pb.DelStoryReq) (*pb.DelStoryResp, error) {
	l := logic.NewDelStoryLogic(ctx, s.svcCtx)
	return l.DelStory(in)
}

// 删除回复
func (s *BbsServer) DelStoryReply(ctx context.Context, in *pb.DelStoryReplyReq) (*pb.DelStoryReplyResp, error) {
	l := logic.NewDelStoryReplyLogic(ctx, s.svcCtx)
	return l.DelStoryReply(in)
}

// 推荐
func (s *BbsServer) GetRecStoryListByUser(ctx context.Context, in *pb.GetRecStoryListByUserReq) (*pb.GetRecStoryListByUserResp, error) {
	l := logic.NewGetRecStoryListByUserLogic(ctx, s.svcCtx)
	return l.GetRecStoryListByUser(in)
}

// 获取个人所有XX
func (s *BbsServer) GetStoryListByOwn(ctx context.Context, in *pb.GetStoryListByOwnReq) (*pb.GetStoryListByOwnResp, error) {
	l := logic.NewGetStoryListByOwnLogic(ctx, s.svcCtx)
	return l.GetStoryListByOwn(in)
}

// 获取个人所有回复
func (s *BbsServer) GetStoryReplyListByOwn(ctx context.Context, in *pb.GetStoryReplyListByOwnReq) (*pb.GetStoryReplyListByOwnResp, error) {
	l := logic.NewGetStoryReplyListByOwnLogic(ctx, s.svcCtx)
	return l.GetStoryReplyListByOwn(in)
}

// 获取发布的XX（根据id）
func (s *BbsServer) GetStoryById(ctx context.Context, in *pb.GetStoryByIdReq) (*pb.GetStoryByIdResp, error) {
	l := logic.NewGetStoryByIdLogic(ctx, s.svcCtx)
	return l.GetStoryById(in)
}

// 获取XX的回复（根据id）
func (s *BbsServer) GetStoryReplyById(ctx context.Context, in *pb.GetStoryReplyByIdReq) (*pb.GetStoryReplyByIdResp, error) {
	l := logic.NewGetStoryReplyByIdLogic(ctx, s.svcCtx)
	return l.GetStoryReplyById(in)
}
