// Code generated by goctl. DO NOT EDIT!
// Source: bbs.proto

package bbs

import (
	"context"

	"jakarta/app/bbs/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddLikeStoryReplyReq        = pb.AddLikeStoryReplyReq
	AddLikeStoryReplyResp       = pb.AddLikeStoryReplyResp
	AddStoryReplyReq            = pb.AddStoryReplyReq
	AddStoryReplyResp           = pb.AddStoryReplyResp
	AddStoryReq                 = pb.AddStoryReq
	AddStoryResp                = pb.AddStoryResp
	DelStoryReplyReq            = pb.DelStoryReplyReq
	DelStoryReplyResp           = pb.DelStoryReplyResp
	DelStoryReq                 = pb.DelStoryReq
	DelStoryResp                = pb.DelStoryResp
	GetRecStoryListByUserReq    = pb.GetRecStoryListByUserReq
	GetRecStoryListByUserResp   = pb.GetRecStoryListByUserResp
	GetStoryByIdReq             = pb.GetStoryByIdReq
	GetStoryByIdResp            = pb.GetStoryByIdResp
	GetStoryListByOwnReq        = pb.GetStoryListByOwnReq
	GetStoryListByOwnResp       = pb.GetStoryListByOwnResp
	GetStoryReplyByIdReq        = pb.GetStoryReplyByIdReq
	GetStoryReplyByIdResp       = pb.GetStoryReplyByIdResp
	GetStoryReplyListByOwnReq   = pb.GetStoryReplyListByOwnReq
	GetStoryReplyListByOwnResp  = pb.GetStoryReplyListByOwnResp
	GetStoryReplyListByUserReq  = pb.GetStoryReplyListByUserReq
	GetStoryReplyListByUserResp = pb.GetStoryReplyListByUserResp
	Story                       = pb.Story
	StoryReply                  = pb.StoryReply

	Bbs interface {
		// 发布
		AddStory(ctx context.Context, in *AddStoryReq, opts ...grpc.CallOption) (*AddStoryResp, error)
		// 获取XX回复列表
		GetStoryReplyListByUser(ctx context.Context, in *GetStoryReplyListByUserReq, opts ...grpc.CallOption) (*GetStoryReplyListByUserResp, error)
		// 回复
		AddStoryReply(ctx context.Context, in *AddStoryReplyReq, opts ...grpc.CallOption) (*AddStoryReplyResp, error)
		// 点赞
		AddLikeStoryReply(ctx context.Context, in *AddLikeStoryReplyReq, opts ...grpc.CallOption) (*AddLikeStoryReplyResp, error)
		// 删除发布
		DelStory(ctx context.Context, in *DelStoryReq, opts ...grpc.CallOption) (*DelStoryResp, error)
		// 删除回复
		DelStoryReply(ctx context.Context, in *DelStoryReplyReq, opts ...grpc.CallOption) (*DelStoryReplyResp, error)
		// 推荐
		GetRecStoryListByUser(ctx context.Context, in *GetRecStoryListByUserReq, opts ...grpc.CallOption) (*GetRecStoryListByUserResp, error)
		// 获取个人所有XX
		GetStoryListByOwn(ctx context.Context, in *GetStoryListByOwnReq, opts ...grpc.CallOption) (*GetStoryListByOwnResp, error)
		// 获取个人所有回复
		GetStoryReplyListByOwn(ctx context.Context, in *GetStoryReplyListByOwnReq, opts ...grpc.CallOption) (*GetStoryReplyListByOwnResp, error)
		// 获取发布的XX（根据id）
		GetStoryById(ctx context.Context, in *GetStoryByIdReq, opts ...grpc.CallOption) (*GetStoryByIdResp, error)
		// 获取XX的回复（根据id）
		GetStoryReplyById(ctx context.Context, in *GetStoryReplyByIdReq, opts ...grpc.CallOption) (*GetStoryReplyByIdResp, error)
	}

	defaultBbs struct {
		cli zrpc.Client
	}
)

func NewBbs(cli zrpc.Client) Bbs {
	return &defaultBbs{
		cli: cli,
	}
}

// 发布
func (m *defaultBbs) AddStory(ctx context.Context, in *AddStoryReq, opts ...grpc.CallOption) (*AddStoryResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.AddStory(ctx, in, opts...)
}

// 获取XX回复列表
func (m *defaultBbs) GetStoryReplyListByUser(ctx context.Context, in *GetStoryReplyListByUserReq, opts ...grpc.CallOption) (*GetStoryReplyListByUserResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.GetStoryReplyListByUser(ctx, in, opts...)
}

// 回复
func (m *defaultBbs) AddStoryReply(ctx context.Context, in *AddStoryReplyReq, opts ...grpc.CallOption) (*AddStoryReplyResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.AddStoryReply(ctx, in, opts...)
}

// 点赞
func (m *defaultBbs) AddLikeStoryReply(ctx context.Context, in *AddLikeStoryReplyReq, opts ...grpc.CallOption) (*AddLikeStoryReplyResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.AddLikeStoryReply(ctx, in, opts...)
}

// 删除发布
func (m *defaultBbs) DelStory(ctx context.Context, in *DelStoryReq, opts ...grpc.CallOption) (*DelStoryResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.DelStory(ctx, in, opts...)
}

// 删除回复
func (m *defaultBbs) DelStoryReply(ctx context.Context, in *DelStoryReplyReq, opts ...grpc.CallOption) (*DelStoryReplyResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.DelStoryReply(ctx, in, opts...)
}

// 推荐
func (m *defaultBbs) GetRecStoryListByUser(ctx context.Context, in *GetRecStoryListByUserReq, opts ...grpc.CallOption) (*GetRecStoryListByUserResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.GetRecStoryListByUser(ctx, in, opts...)
}

// 获取个人所有XX
func (m *defaultBbs) GetStoryListByOwn(ctx context.Context, in *GetStoryListByOwnReq, opts ...grpc.CallOption) (*GetStoryListByOwnResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.GetStoryListByOwn(ctx, in, opts...)
}

// 获取个人所有回复
func (m *defaultBbs) GetStoryReplyListByOwn(ctx context.Context, in *GetStoryReplyListByOwnReq, opts ...grpc.CallOption) (*GetStoryReplyListByOwnResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.GetStoryReplyListByOwn(ctx, in, opts...)
}

// 获取发布的XX（根据id）
func (m *defaultBbs) GetStoryById(ctx context.Context, in *GetStoryByIdReq, opts ...grpc.CallOption) (*GetStoryByIdResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.GetStoryById(ctx, in, opts...)
}

// 获取XX的回复（根据id）
func (m *defaultBbs) GetStoryReplyById(ctx context.Context, in *GetStoryReplyByIdReq, opts ...grpc.CallOption) (*GetStoryReplyByIdResp, error) {
	client := pb.NewBbsClient(m.cli.Conn())
	return client.GetStoryReplyById(ctx, in, opts...)
}
