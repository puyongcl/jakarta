// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: listener.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户看到的XXX资料
type UserSeeListenerProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid         int64   `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName            string  `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar              string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus       int64   `protobuf:"varint,4,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	Constellation       int64   `protobuf:"varint,5,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Province            string  `protobuf:"bytes,6,opt,name=province,proto3" json:"province,omitempty"`            //province
	City                string  `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`                    //city
	Job                 string  `protobuf:"bytes,8,opt,name=job,proto3" json:"job,omitempty"`                      //job
	Education           int64   `protobuf:"varint,9,opt,name=education,proto3" json:"education,omitempty"`         //education
	Gender              int64   `protobuf:"varint,10,opt,name=gender,proto3" json:"gender,omitempty"`              //gender
	Age                 int64   `protobuf:"varint,11,opt,name=age,proto3" json:"age,omitempty"`
	Specialties         []int64 `protobuf:"varint,12,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction        string  `protobuf:"bytes,13,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile           string  `protobuf:"bytes,14,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	Experience1         string  `protobuf:"bytes,15,opt,name=experience1,proto3" json:"experience1,omitempty"`         //experience1
	Experience2         string  `protobuf:"bytes,16,opt,name=experience2,proto3" json:"experience2,omitempty"`         //experience2
	CertType            int64   `protobuf:"varint,17,opt,name=certType,proto3" json:"certType,omitempty"`
	CertFiles1          string  `protobuf:"bytes,18,opt,name=certFiles1,proto3" json:"certFiles1,omitempty"`          //certFiles1
	CertFiles2          string  `protobuf:"bytes,19,opt,name=certFiles2,proto3" json:"certFiles2,omitempty"`          //certFiles2
	CertFiles3          string  `protobuf:"bytes,20,opt,name=certFiles3,proto3" json:"certFiles3,omitempty"`          //certFiles3
	CertFiles4          string  `protobuf:"bytes,21,opt,name=certFiles4,proto3" json:"certFiles4,omitempty"`          //certFiles4
	CertFiles5          string  `protobuf:"bytes,22,opt,name=certFiles5,proto3" json:"certFiles5,omitempty"`          //certFiles5
	TextChatPrice       int64   `protobuf:"varint,23,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`   //textChatPrice
	VoiceChatPrice      int64   `protobuf:"varint,24,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"` //voiceChatPrice
	UserCount           int64   `protobuf:"varint,25,opt,name=userCount,proto3" json:"userCount,omitempty"`           //userCount
	ChatDuration        int64   `protobuf:"varint,26,opt,name=chatDuration,proto3" json:"chatDuration,omitempty"`     //chatDuration
	RatingSum           int64   `protobuf:"varint,27,opt,name=ratingSum,proto3" json:"ratingSum,omitempty"`           //ratingSum
	FiveStar            int64   `protobuf:"varint,28,opt,name=fiveStar,proto3" json:"fiveStar,omitempty"`             //fiveStar
	WorkState           int64   `protobuf:"varint,29,opt,name=workState,proto3" json:"workState,omitempty"`
	OpenId              string  `protobuf:"bytes,30,opt,name=openId,proto3" json:"openId,omitempty"`
	TextChatSwitch      int64   `protobuf:"varint,31,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch     int64   `protobuf:"varint,32,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
	AutoReplyNew        string  `protobuf:"bytes,33,opt,name=autoReplyNew,proto3" json:"autoReplyNew,omitempty"`               //autoReplyNew
	AutoReplyProcessing string  `protobuf:"bytes,34,opt,name=autoReplyProcessing,proto3" json:"autoReplyProcessing,omitempty"` //autoReplyProcessing
	AutoReplyFinish     string  `protobuf:"bytes,35,opt,name=autoReplyFinish,proto3" json:"autoReplyFinish,omitempty"`         //autoReplyFinish
}

func (x *UserSeeListenerProfile) Reset() {
	*x = UserSeeListenerProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSeeListenerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSeeListenerProfile) ProtoMessage() {}

func (x *UserSeeListenerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSeeListenerProfile.ProtoReflect.Descriptor instead.
func (*UserSeeListenerProfile) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{0}
}

func (x *UserSeeListenerProfile) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UserSeeListenerProfile) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserSeeListenerProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserSeeListenerProfile) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *UserSeeListenerProfile) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *UserSeeListenerProfile) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserSeeListenerProfile) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserSeeListenerProfile) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UserSeeListenerProfile) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *UserSeeListenerProfile) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserSeeListenerProfile) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserSeeListenerProfile) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *UserSeeListenerProfile) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UserSeeListenerProfile) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *UserSeeListenerProfile) GetExperience1() string {
	if x != nil {
		return x.Experience1
	}
	return ""
}

func (x *UserSeeListenerProfile) GetExperience2() string {
	if x != nil {
		return x.Experience2
	}
	return ""
}

func (x *UserSeeListenerProfile) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *UserSeeListenerProfile) GetCertFiles1() string {
	if x != nil {
		return x.CertFiles1
	}
	return ""
}

func (x *UserSeeListenerProfile) GetCertFiles2() string {
	if x != nil {
		return x.CertFiles2
	}
	return ""
}

func (x *UserSeeListenerProfile) GetCertFiles3() string {
	if x != nil {
		return x.CertFiles3
	}
	return ""
}

func (x *UserSeeListenerProfile) GetCertFiles4() string {
	if x != nil {
		return x.CertFiles4
	}
	return ""
}

func (x *UserSeeListenerProfile) GetCertFiles5() string {
	if x != nil {
		return x.CertFiles5
	}
	return ""
}

func (x *UserSeeListenerProfile) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *UserSeeListenerProfile) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *UserSeeListenerProfile) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *UserSeeListenerProfile) GetChatDuration() int64 {
	if x != nil {
		return x.ChatDuration
	}
	return 0
}

func (x *UserSeeListenerProfile) GetRatingSum() int64 {
	if x != nil {
		return x.RatingSum
	}
	return 0
}

func (x *UserSeeListenerProfile) GetFiveStar() int64 {
	if x != nil {
		return x.FiveStar
	}
	return 0
}

func (x *UserSeeListenerProfile) GetWorkState() int64 {
	if x != nil {
		return x.WorkState
	}
	return 0
}

func (x *UserSeeListenerProfile) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserSeeListenerProfile) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *UserSeeListenerProfile) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

func (x *UserSeeListenerProfile) GetAutoReplyNew() string {
	if x != nil {
		return x.AutoReplyNew
	}
	return ""
}

func (x *UserSeeListenerProfile) GetAutoReplyProcessing() string {
	if x != nil {
		return x.AutoReplyProcessing
	}
	return ""
}

func (x *UserSeeListenerProfile) GetAutoReplyFinish() string {
	if x != nil {
		return x.AutoReplyFinish
	}
	return ""
}

// XXX看到的自己的资料
type ListenerSeeOwnProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid          int64    `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus        int64    `protobuf:"varint,4,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	PhoneNumber          string   `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`      //phoneNumber
	Constellation        int64    `protobuf:"varint,6,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Province             string   `protobuf:"bytes,7,opt,name=province,proto3" json:"province,omitempty"`            //province
	City                 string   `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`                    //city
	Job                  string   `protobuf:"bytes,9,opt,name=job,proto3" json:"job,omitempty"`                      //job
	Education            int64    `protobuf:"varint,10,opt,name=education,proto3" json:"education,omitempty"`        //education
	Gender               int64    `protobuf:"varint,11,opt,name=gender,proto3" json:"gender,omitempty"`              //gender
	Birthday             string   `protobuf:"bytes,12,opt,name=birthday,proto3" json:"birthday,omitempty"`
	IdNo                 string   `protobuf:"bytes,13,opt,name=idNo,proto3" json:"idNo,omitempty"`
	IdPhoto1             string   `protobuf:"bytes,14,opt,name=idPhoto1,proto3" json:"idPhoto1,omitempty"`               //idPhoto1
	IdPhoto2             string   `protobuf:"bytes,15,opt,name=idPhoto2,proto3" json:"idPhoto2,omitempty"`               //idPhoto2
	IdPhoto3             string   `protobuf:"bytes,16,opt,name=idPhoto3,proto3" json:"idPhoto3,omitempty"`               //idPhoto3
	Specialties          []int64  `protobuf:"varint,17,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction         string   `protobuf:"bytes,18,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile            string   `protobuf:"bytes,19,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	Experience1          string   `protobuf:"bytes,20,opt,name=experience1,proto3" json:"experience1,omitempty"`         //experience1
	Experience2          string   `protobuf:"bytes,21,opt,name=experience2,proto3" json:"experience2,omitempty"`         //experience2
	CertType             int64    `protobuf:"varint,22,opt,name=certType,proto3" json:"certType,omitempty"`
	CertFiles1           string   `protobuf:"bytes,23,opt,name=certFiles1,proto3" json:"certFiles1,omitempty"`                   //certFiles1
	CertFiles2           string   `protobuf:"bytes,24,opt,name=certFiles2,proto3" json:"certFiles2,omitempty"`                   //certFiles2
	CertFiles3           string   `protobuf:"bytes,25,opt,name=certFiles3,proto3" json:"certFiles3,omitempty"`                   //certFiles3
	CertFiles4           string   `protobuf:"bytes,26,opt,name=certFiles4,proto3" json:"certFiles4,omitempty"`                   //certFiles4
	CertFiles5           string   `protobuf:"bytes,27,opt,name=certFiles5,proto3" json:"certFiles5,omitempty"`                   //certFiles5
	AutoReplyNew         string   `protobuf:"bytes,28,opt,name=autoReplyNew,proto3" json:"autoReplyNew,omitempty"`               //autoReplyNew
	AutoReplyProcessing  string   `protobuf:"bytes,29,opt,name=autoReplyProcessing,proto3" json:"autoReplyProcessing,omitempty"` //autoReplyProcessing
	AutoReplyFinish      string   `protobuf:"bytes,30,opt,name=autoReplyFinish,proto3" json:"autoReplyFinish,omitempty"`         //autoReplyFinish
	TextChatPrice        int64    `protobuf:"varint,31,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`            //textChatPrice
	VoiceChatPrice       int64    `protobuf:"varint,32,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"`          //voiceChatPrice
	CheckFailField       []string `protobuf:"bytes,33,rep,name=checkFailField,proto3" json:"checkFailField,omitempty"`
	CheckingField        []string `protobuf:"bytes,34,rep,name=checkingField,proto3" json:"checkingField,omitempty"`
	CheckStatus          int64    `protobuf:"varint,35,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"` //checkStatus
	DraftVersion         int64    `protobuf:"varint,36,opt,name=draftVersion,proto3" json:"draftVersion,omitempty"`
	ListenerName         string   `protobuf:"bytes,37,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	OtherPlatformAccount string   `protobuf:"bytes,38,opt,name=otherPlatformAccount,proto3" json:"otherPlatformAccount,omitempty"`
	TextChatSwitch       int64    `protobuf:"varint,39,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch      int64    `protobuf:"varint,40,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
}

func (x *ListenerSeeOwnProfile) Reset() {
	*x = ListenerSeeOwnProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerSeeOwnProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerSeeOwnProfile) ProtoMessage() {}

func (x *ListenerSeeOwnProfile) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerSeeOwnProfile.ProtoReflect.Descriptor instead.
func (*ListenerSeeOwnProfile) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{1}
}

func (x *ListenerSeeOwnProfile) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetIdPhoto1() string {
	if x != nil {
		return x.IdPhoto1
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetIdPhoto2() string {
	if x != nil {
		return x.IdPhoto2
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetIdPhoto3() string {
	if x != nil {
		return x.IdPhoto3
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *ListenerSeeOwnProfile) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetExperience1() string {
	if x != nil {
		return x.Experience1
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetExperience2() string {
	if x != nil {
		return x.Experience2
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetCertFiles1() string {
	if x != nil {
		return x.CertFiles1
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetCertFiles2() string {
	if x != nil {
		return x.CertFiles2
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetCertFiles3() string {
	if x != nil {
		return x.CertFiles3
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetCertFiles4() string {
	if x != nil {
		return x.CertFiles4
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetCertFiles5() string {
	if x != nil {
		return x.CertFiles5
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetAutoReplyNew() string {
	if x != nil {
		return x.AutoReplyNew
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetAutoReplyProcessing() string {
	if x != nil {
		return x.AutoReplyProcessing
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetAutoReplyFinish() string {
	if x != nil {
		return x.AutoReplyFinish
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetCheckFailField() []string {
	if x != nil {
		return x.CheckFailField
	}
	return nil
}

func (x *ListenerSeeOwnProfile) GetCheckingField() []string {
	if x != nil {
		return x.CheckingField
	}
	return nil
}

func (x *ListenerSeeOwnProfile) GetCheckStatus() int64 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetDraftVersion() int64 {
	if x != nil {
		return x.DraftVersion
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetOtherPlatformAccount() string {
	if x != nil {
		return x.OtherPlatformAccount
	}
	return ""
}

func (x *ListenerSeeOwnProfile) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *ListenerSeeOwnProfile) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

// XXX编辑自己的资料
type EditListenerProfileDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid          int64   `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`         //uid
	NickName             string  `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`                //nickName
	Avatar               string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                    //avatar
	MaritalStatus        int64   `protobuf:"varint,4,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"`     //maritalStatus
	PhoneNumber          string  `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`          //phoneNumber
	Constellation        int64   `protobuf:"varint,6,opt,name=constellation,proto3" json:"constellation,omitempty"`     //constellation
	Province             string  `protobuf:"bytes,7,opt,name=province,proto3" json:"province,omitempty"`                //province
	City                 string  `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`                        //city
	Job                  string  `protobuf:"bytes,9,opt,name=job,proto3" json:"job,omitempty"`                          //job
	Education            int64   `protobuf:"varint,10,opt,name=education,proto3" json:"education,omitempty"`            //education
	Gender               int64   `protobuf:"varint,11,opt,name=gender,proto3" json:"gender,omitempty"`                  //gender
	Birthday             string  `protobuf:"bytes,12,opt,name=birthday,proto3" json:"birthday,omitempty"`               //birthday
	IdNo                 string  `protobuf:"bytes,13,opt,name=idNo,proto3" json:"idNo,omitempty"`                       //idNo
	IdPhoto1             string  `protobuf:"bytes,14,opt,name=idPhoto1,proto3" json:"idPhoto1,omitempty"`               //idPhoto1
	IdPhoto2             string  `protobuf:"bytes,15,opt,name=idPhoto2,proto3" json:"idPhoto2,omitempty"`               //idPhoto2
	IdPhoto3             string  `protobuf:"bytes,16,opt,name=idPhoto3,proto3" json:"idPhoto3,omitempty"`               //idPhoto3
	Specialties          []int64 `protobuf:"varint,17,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction         string  `protobuf:"bytes,18,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile            string  `protobuf:"bytes,19,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	Experience1          string  `protobuf:"bytes,20,opt,name=experience1,proto3" json:"experience1,omitempty"`         //experience1
	Experience2          string  `protobuf:"bytes,21,opt,name=experience2,proto3" json:"experience2,omitempty"`         //experience2
	CertType             int64   `protobuf:"varint,22,opt,name=certType,proto3" json:"certType,omitempty"`
	CertFiles1           string  `protobuf:"bytes,23,opt,name=certFiles1,proto3" json:"certFiles1,omitempty"`                   //certFiles1
	CertFiles2           string  `protobuf:"bytes,24,opt,name=certFiles2,proto3" json:"certFiles2,omitempty"`                   //certFiles2
	CertFiles3           string  `protobuf:"bytes,25,opt,name=certFiles3,proto3" json:"certFiles3,omitempty"`                   //certFiles3
	CertFiles4           string  `protobuf:"bytes,26,opt,name=certFiles4,proto3" json:"certFiles4,omitempty"`                   //certFiles4
	CertFiles5           string  `protobuf:"bytes,27,opt,name=certFiles5,proto3" json:"certFiles5,omitempty"`                   //certFiles5
	AutoReplyNew         string  `protobuf:"bytes,28,opt,name=autoReplyNew,proto3" json:"autoReplyNew,omitempty"`               //autoReplyNew
	AutoReplyProcessing  string  `protobuf:"bytes,29,opt,name=autoReplyProcessing,proto3" json:"autoReplyProcessing,omitempty"` //autoReplyProcessing
	AutoReplyFinish      string  `protobuf:"bytes,30,opt,name=autoReplyFinish,proto3" json:"autoReplyFinish,omitempty"`         //autoReplyFinish
	TextChatPrice        int64   `protobuf:"varint,31,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`            //textChatPrice
	VoiceChatPrice       int64   `protobuf:"varint,32,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"`          //voiceChatPrice
	DraftVersion         int64   `protobuf:"varint,33,opt,name=draftVersion,proto3" json:"draftVersion,omitempty"`
	ListenerName         string  `protobuf:"bytes,34,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	OtherPlatformAccount string  `protobuf:"bytes,35,opt,name=otherPlatformAccount,proto3" json:"otherPlatformAccount,omitempty"`
	TextChatSwitch       int64   `protobuf:"varint,36,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch      int64   `protobuf:"varint,37,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
}

func (x *EditListenerProfileDraftReq) Reset() {
	*x = EditListenerProfileDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditListenerProfileDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditListenerProfileDraftReq) ProtoMessage() {}

func (x *EditListenerProfileDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditListenerProfileDraftReq.ProtoReflect.Descriptor instead.
func (*EditListenerProfileDraftReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{2}
}

func (x *EditListenerProfileDraftReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetIdPhoto1() string {
	if x != nil {
		return x.IdPhoto1
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetIdPhoto2() string {
	if x != nil {
		return x.IdPhoto2
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetIdPhoto3() string {
	if x != nil {
		return x.IdPhoto3
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *EditListenerProfileDraftReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetExperience1() string {
	if x != nil {
		return x.Experience1
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetExperience2() string {
	if x != nil {
		return x.Experience2
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetCertFiles1() string {
	if x != nil {
		return x.CertFiles1
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetCertFiles2() string {
	if x != nil {
		return x.CertFiles2
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetCertFiles3() string {
	if x != nil {
		return x.CertFiles3
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetCertFiles4() string {
	if x != nil {
		return x.CertFiles4
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetCertFiles5() string {
	if x != nil {
		return x.CertFiles5
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetAutoReplyNew() string {
	if x != nil {
		return x.AutoReplyNew
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetAutoReplyProcessing() string {
	if x != nil {
		return x.AutoReplyProcessing
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetAutoReplyFinish() string {
	if x != nil {
		return x.AutoReplyFinish
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetDraftVersion() int64 {
	if x != nil {
		return x.DraftVersion
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetOtherPlatformAccount() string {
	if x != nil {
		return x.OtherPlatformAccount
	}
	return ""
}

func (x *EditListenerProfileDraftReq) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *EditListenerProfileDraftReq) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

type EditListenerProfileDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DraftVersion int64 `protobuf:"varint,1,opt,name=draftVersion,proto3" json:"draftVersion,omitempty"`
}

func (x *EditListenerProfileDraftResp) Reset() {
	*x = EditListenerProfileDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditListenerProfileDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditListenerProfileDraftResp) ProtoMessage() {}

func (x *EditListenerProfileDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditListenerProfileDraftResp.ProtoReflect.Descriptor instead.
func (*EditListenerProfileDraftResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{3}
}

func (x *EditListenerProfileDraftResp) GetDraftVersion() int64 {
	if x != nil {
		return x.DraftVersion
	}
	return 0
}

// 普通用户获取XXX资料
type GetListenerProfileByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Uid         int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	NickName    string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Avatar      string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *GetListenerProfileByUserReq) Reset() {
	*x = GetListenerProfileByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerProfileByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerProfileByUserReq) ProtoMessage() {}

func (x *GetListenerProfileByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerProfileByUserReq.ProtoReflect.Descriptor instead.
func (*GetListenerProfileByUserReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{4}
}

func (x *GetListenerProfileByUserReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerProfileByUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetListenerProfileByUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetListenerProfileByUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type GetListenerProfileByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *UserSeeListenerProfile `protobuf:"bytes,1,opt,name=Profile,proto3" json:"Profile,omitempty"`
}

func (x *GetListenerProfileByUserResp) Reset() {
	*x = GetListenerProfileByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerProfileByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerProfileByUserResp) ProtoMessage() {}

func (x *GetListenerProfileByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerProfileByUserResp.ProtoReflect.Descriptor instead.
func (*GetListenerProfileByUserResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{5}
}

func (x *GetListenerProfileByUserResp) GetProfile() *UserSeeListenerProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// XXX获取自己的资料
type GetListenerProfileByOwnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerProfileByOwnReq) Reset() {
	*x = GetListenerProfileByOwnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerProfileByOwnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerProfileByOwnReq) ProtoMessage() {}

func (x *GetListenerProfileByOwnReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerProfileByOwnReq.ProtoReflect.Descriptor instead.
func (*GetListenerProfileByOwnReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{6}
}

func (x *GetListenerProfileByOwnReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetListenerProfileByOwnResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *ListenerSeeOwnProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetListenerProfileByOwnResp) Reset() {
	*x = GetListenerProfileByOwnResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerProfileByOwnResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerProfileByOwnResp) ProtoMessage() {}

func (x *GetListenerProfileByOwnResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerProfileByOwnResp.ProtoReflect.Descriptor instead.
func (*GetListenerProfileByOwnResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{7}
}

func (x *GetListenerProfileByOwnResp) GetProfile() *ListenerSeeOwnProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// XXX备注用户
type ListenerRemarkUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	UserDesc    string `protobuf:"bytes,4,opt,name=userDesc,proto3" json:"userDesc,omitempty"`
}

func (x *ListenerRemarkUserReq) Reset() {
	*x = ListenerRemarkUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerRemarkUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerRemarkUserReq) ProtoMessage() {}

func (x *ListenerRemarkUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerRemarkUserReq.ProtoReflect.Descriptor instead.
func (*ListenerRemarkUserReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{8}
}

func (x *ListenerRemarkUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListenerRemarkUserReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ListenerRemarkUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListenerRemarkUserReq) GetUserDesc() string {
	if x != nil {
		return x.UserDesc
	}
	return ""
}

type ListenerRemarkUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListenerRemarkUserResp) Reset() {
	*x = ListenerRemarkUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerRemarkUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerRemarkUserResp) ProtoMessage() {}

func (x *ListenerRemarkUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerRemarkUserResp.ProtoReflect.Descriptor instead.
func (*ListenerRemarkUserResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{9}
}

// 获取XXX备注用户
type GetListenerRemarkUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerRemarkUserReq) Reset() {
	*x = GetListenerRemarkUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerRemarkUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerRemarkUserReq) ProtoMessage() {}

func (x *GetListenerRemarkUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerRemarkUserReq.ProtoReflect.Descriptor instead.
func (*GetListenerRemarkUserReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{10}
}

func (x *GetListenerRemarkUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetListenerRemarkUserReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetListenerRemarkUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`     // XXX备注
	UserDesc    string `protobuf:"bytes,4,opt,name=userDesc,proto3" json:"userDesc,omitempty"` // 描述
}

func (x *GetListenerRemarkUserResp) Reset() {
	*x = GetListenerRemarkUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerRemarkUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerRemarkUserResp) ProtoMessage() {}

func (x *GetListenerRemarkUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerRemarkUserResp.ProtoReflect.Descriptor instead.
func (*GetListenerRemarkUserResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{11}
}

func (x *GetListenerRemarkUserResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetListenerRemarkUserResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerRemarkUserResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetListenerRemarkUserResp) GetUserDesc() string {
	if x != nil {
		return x.UserDesc
	}
	return ""
}

// 推荐XXX列表
type UserSeeRecommendListenerProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid     int64   `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName        string  `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar          string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus   int64   `protobuf:"varint,4,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	Constellation   int64   `protobuf:"varint,5,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Job             string  `protobuf:"bytes,6,opt,name=job,proto3" json:"job,omitempty"`                      //job
	Education       int64   `protobuf:"varint,7,opt,name=education,proto3" json:"education,omitempty"`         //education
	Gender          int64   `protobuf:"varint,8,opt,name=gender,proto3" json:"gender,omitempty"`               //gender
	Age             int64   `protobuf:"varint,9,opt,name=age,proto3" json:"age,omitempty"`
	Specialties     []int64 `protobuf:"varint,10,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction    string  `protobuf:"bytes,12,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile       string  `protobuf:"bytes,13,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	TextChatPrice   int64   `protobuf:"varint,14,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`    // 文字聊天原单价
	VoiceChatPrice  int64   `protobuf:"varint,15,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"`  // 语音聊天原单价
	RatingSum       int64   `protobuf:"varint,16,opt,name=ratingSum,proto3" json:"ratingSum,omitempty"`            //ratingSum
	FiveStar        int64   `protobuf:"varint,17,opt,name=fiveStar,proto3" json:"fiveStar,omitempty"`              //fiveStar
	TextChatSwitch  int64   `protobuf:"varint,18,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch int64   `protobuf:"varint,19,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
}

func (x *UserSeeRecommendListenerProfile) Reset() {
	*x = UserSeeRecommendListenerProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSeeRecommendListenerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSeeRecommendListenerProfile) ProtoMessage() {}

func (x *UserSeeRecommendListenerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSeeRecommendListenerProfile.ProtoReflect.Descriptor instead.
func (*UserSeeRecommendListenerProfile) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{12}
}

func (x *UserSeeRecommendListenerProfile) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserSeeRecommendListenerProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserSeeRecommendListenerProfile) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UserSeeRecommendListenerProfile) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *UserSeeRecommendListenerProfile) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UserSeeRecommendListenerProfile) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *UserSeeRecommendListenerProfile) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetRatingSum() int64 {
	if x != nil {
		return x.RatingSum
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetFiveStar() int64 {
	if x != nil {
		return x.FiveStar
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *UserSeeRecommendListenerProfile) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

type GetRecommendListenerByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	PageNo      int64   `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Specialties int64   `protobuf:"varint,4,opt,name=specialties,proto3" json:"specialties,omitempty"`
	ChatType    int64   `protobuf:"varint,5,opt,name=chatType,proto3" json:"chatType,omitempty"`
	Gender      int64   `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Age         int64   `protobuf:"varint,7,opt,name=age,proto3" json:"age,omitempty"`
	SortOrder   int64   `protobuf:"varint,8,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
	WorkState   []int64 `protobuf:"varint,9,rep,packed,name=workState,proto3" json:"workState,omitempty"`
	AuthKey     string  `protobuf:"bytes,10,opt,name=authKey,proto3" json:"authKey,omitempty"`
}

func (x *GetRecommendListenerByUserReq) Reset() {
	*x = GetRecommendListenerByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendListenerByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendListenerByUserReq) ProtoMessage() {}

func (x *GetRecommendListenerByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendListenerByUserReq.ProtoReflect.Descriptor instead.
func (*GetRecommendListenerByUserReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{13}
}

func (x *GetRecommendListenerByUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetSpecialties() int64 {
	if x != nil {
		return x.Specialties
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetChatType() int64 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *GetRecommendListenerByUserReq) GetWorkState() []int64 {
	if x != nil {
		return x.WorkState
	}
	return nil
}

func (x *GetRecommendListenerByUserReq) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

type GetRecommendListenerByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener []*UserSeeRecommendListenerProfile `protobuf:"bytes,1,rep,name=listener,proto3" json:"listener,omitempty"`
}

func (x *GetRecommendListenerByUserResp) Reset() {
	*x = GetRecommendListenerByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendListenerByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendListenerByUserResp) ProtoMessage() {}

func (x *GetRecommendListenerByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendListenerByUserResp.ProtoReflect.Descriptor instead.
func (*GetRecommendListenerByUserResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{14}
}

func (x *GetRecommendListenerByUserResp) GetListener() []*UserSeeRecommendListenerProfile {
	if x != nil {
		return x.Listener
	}
	return nil
}

type GetRecommendListenerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	PageNo      int64 `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Specialties int64 `protobuf:"varint,4,opt,name=specialties,proto3" json:"specialties,omitempty"`
	ChatType    int64 `protobuf:"varint,5,opt,name=chatType,proto3" json:"chatType,omitempty"`
	Gender      int64 `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Age         int64 `protobuf:"varint,7,opt,name=age,proto3" json:"age,omitempty"`
	SortOrder   int64 `protobuf:"varint,8,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
}

func (x *GetRecommendListenerReq) Reset() {
	*x = GetRecommendListenerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendListenerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendListenerReq) ProtoMessage() {}

func (x *GetRecommendListenerReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendListenerReq.ProtoReflect.Descriptor instead.
func (*GetRecommendListenerReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{15}
}

func (x *GetRecommendListenerReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetRecommendListenerReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetRecommendListenerReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRecommendListenerReq) GetSpecialties() int64 {
	if x != nil {
		return x.Specialties
	}
	return 0
}

func (x *GetRecommendListenerReq) GetChatType() int64 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *GetRecommendListenerReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetRecommendListenerReq) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *GetRecommendListenerReq) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

type GetRecommendListenerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener []*ListenerShortProfile `protobuf:"bytes,1,rep,name=listener,proto3" json:"listener,omitempty"`
}

func (x *GetRecommendListenerResp) Reset() {
	*x = GetRecommendListenerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendListenerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendListenerResp) ProtoMessage() {}

func (x *GetRecommendListenerResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendListenerResp.ProtoReflect.Descriptor instead.
func (*GetRecommendListenerResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{16}
}

func (x *GetRecommendListenerResp) GetListener() []*ListenerShortProfile {
	if x != nil {
		return x.Listener
	}
	return nil
}

// 管理员看到的XXX的资料草稿
type AdminSeeListenerProfileDraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid          int64    `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus        int64    `protobuf:"varint,5,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	PhoneNumber          string   `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`      //phoneNumber
	Constellation        int64    `protobuf:"varint,7,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Province             string   `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`            //province
	City                 string   `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`                    //city
	Job                  string   `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                     //job
	Education            int64    `protobuf:"varint,11,opt,name=education,proto3" json:"education,omitempty"`        //education
	Gender               int64    `protobuf:"varint,12,opt,name=gender,proto3" json:"gender,omitempty"`              //gender
	Birthday             string   `protobuf:"bytes,13,opt,name=birthday,proto3" json:"birthday,omitempty"`
	IdNo                 string   `protobuf:"bytes,14,opt,name=idNo,proto3" json:"idNo,omitempty"`
	IdPhoto1             string   `protobuf:"bytes,15,opt,name=idPhoto1,proto3" json:"idPhoto1,omitempty"`               //idPhoto1
	IdPhoto2             string   `protobuf:"bytes,16,opt,name=idPhoto2,proto3" json:"idPhoto2,omitempty"`               //idPhoto2
	IdPhoto3             string   `protobuf:"bytes,17,opt,name=idPhoto3,proto3" json:"idPhoto3,omitempty"`               //idPhoto3
	Specialties          []int64  `protobuf:"varint,18,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction         string   `protobuf:"bytes,19,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile            string   `protobuf:"bytes,20,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	Experience1          string   `protobuf:"bytes,21,opt,name=experience1,proto3" json:"experience1,omitempty"`         //experience1
	Experience2          string   `protobuf:"bytes,22,opt,name=experience2,proto3" json:"experience2,omitempty"`         //experience2
	CertType             int64    `protobuf:"varint,23,opt,name=certType,proto3" json:"certType,omitempty"`
	CertFiles1           string   `protobuf:"bytes,24,opt,name=certFiles1,proto3" json:"certFiles1,omitempty"`                   //certFiles1
	CertFiles2           string   `protobuf:"bytes,25,opt,name=certFiles2,proto3" json:"certFiles2,omitempty"`                   //certFiles2
	CertFiles3           string   `protobuf:"bytes,26,opt,name=certFiles3,proto3" json:"certFiles3,omitempty"`                   //certFiles3
	CertFiles4           string   `protobuf:"bytes,27,opt,name=certFiles4,proto3" json:"certFiles4,omitempty"`                   //certFiles4
	CertFiles5           string   `protobuf:"bytes,28,opt,name=certFiles5,proto3" json:"certFiles5,omitempty"`                   //certFiles5
	AutoReplyNew         string   `protobuf:"bytes,29,opt,name=autoReplyNew,proto3" json:"autoReplyNew,omitempty"`               //autoReplyNew
	AutoReplyProcessing  string   `protobuf:"bytes,30,opt,name=autoReplyProcessing,proto3" json:"autoReplyProcessing,omitempty"` //autoReplyProcessing
	AutoReplyFinish      string   `protobuf:"bytes,31,opt,name=autoReplyFinish,proto3" json:"autoReplyFinish,omitempty"`         //autoReplyFinish
	TextChatPrice        int64    `protobuf:"varint,32,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`            //textChatPrice
	VoiceChatPrice       int64    `protobuf:"varint,33,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"`          //voiceChatPrice
	CheckFailField       []string `protobuf:"bytes,34,rep,name=checkFailField,proto3" json:"checkFailField,omitempty"`
	CheckingField        []string `protobuf:"bytes,35,rep,name=checkingField,proto3" json:"checkingField,omitempty"`
	CheckStatus          int64    `protobuf:"varint,36,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"` //checkStatus
	CreateTime           string   `protobuf:"bytes,37,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,38,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DraftVersion         int64    `protobuf:"varint,39,opt,name=draftVersion,proto3" json:"draftVersion,omitempty"`
	ListenerName         string   `protobuf:"bytes,40,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	OtherPlatformAccount string   `protobuf:"bytes,41,opt,name=otherPlatformAccount,proto3" json:"otherPlatformAccount,omitempty"`
	TextChatSwitch       int64    `protobuf:"varint,42,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch      int64    `protobuf:"varint,43,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
}

func (x *AdminSeeListenerProfileDraft) Reset() {
	*x = AdminSeeListenerProfileDraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminSeeListenerProfileDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminSeeListenerProfileDraft) ProtoMessage() {}

func (x *AdminSeeListenerProfileDraft) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminSeeListenerProfileDraft.ProtoReflect.Descriptor instead.
func (*AdminSeeListenerProfileDraft) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{17}
}

func (x *AdminSeeListenerProfileDraft) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetIdPhoto1() string {
	if x != nil {
		return x.IdPhoto1
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetIdPhoto2() string {
	if x != nil {
		return x.IdPhoto2
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetIdPhoto3() string {
	if x != nil {
		return x.IdPhoto3
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *AdminSeeListenerProfileDraft) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetExperience1() string {
	if x != nil {
		return x.Experience1
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetExperience2() string {
	if x != nil {
		return x.Experience2
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetCertFiles1() string {
	if x != nil {
		return x.CertFiles1
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetCertFiles2() string {
	if x != nil {
		return x.CertFiles2
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetCertFiles3() string {
	if x != nil {
		return x.CertFiles3
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetCertFiles4() string {
	if x != nil {
		return x.CertFiles4
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetCertFiles5() string {
	if x != nil {
		return x.CertFiles5
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetAutoReplyNew() string {
	if x != nil {
		return x.AutoReplyNew
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetAutoReplyProcessing() string {
	if x != nil {
		return x.AutoReplyProcessing
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetAutoReplyFinish() string {
	if x != nil {
		return x.AutoReplyFinish
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetCheckFailField() []string {
	if x != nil {
		return x.CheckFailField
	}
	return nil
}

func (x *AdminSeeListenerProfileDraft) GetCheckingField() []string {
	if x != nil {
		return x.CheckingField
	}
	return nil
}

func (x *AdminSeeListenerProfileDraft) GetCheckStatus() int64 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetDraftVersion() int64 {
	if x != nil {
		return x.DraftVersion
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetOtherPlatformAccount() string {
	if x != nil {
		return x.OtherPlatformAccount
	}
	return ""
}

func (x *AdminSeeListenerProfileDraft) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *AdminSeeListenerProfileDraft) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

// 管理员看到的XXX资料
type AdminSeeListenerProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid          int64    `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus        int64    `protobuf:"varint,5,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	PhoneNumber          string   `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`      //phoneNumber
	Constellation        int64    `protobuf:"varint,7,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Province             string   `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`            //province
	City                 string   `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`                    //city
	Job                  string   `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                     //job
	Education            int64    `protobuf:"varint,11,opt,name=education,proto3" json:"education,omitempty"`        //education
	Gender               int64    `protobuf:"varint,12,opt,name=gender,proto3" json:"gender,omitempty"`              //gender
	Birthday             string   `protobuf:"bytes,13,opt,name=birthday,proto3" json:"birthday,omitempty"`
	IdNo                 string   `protobuf:"bytes,14,opt,name=idNo,proto3" json:"idNo,omitempty"`
	IdPhoto1             string   `protobuf:"bytes,15,opt,name=idPhoto1,proto3" json:"idPhoto1,omitempty"`               //idPhoto1
	IdPhoto2             string   `protobuf:"bytes,16,opt,name=idPhoto2,proto3" json:"idPhoto2,omitempty"`               //idPhoto2
	IdPhoto3             string   `protobuf:"bytes,17,opt,name=idPhoto3,proto3" json:"idPhoto3,omitempty"`               //idPhoto3
	Specialties          []int64  `protobuf:"varint,18,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction         string   `protobuf:"bytes,19,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile            string   `protobuf:"bytes,20,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	Experience1          string   `protobuf:"bytes,21,opt,name=experience1,proto3" json:"experience1,omitempty"`         //experience1
	Experience2          string   `protobuf:"bytes,22,opt,name=experience2,proto3" json:"experience2,omitempty"`         //experience2
	CertType             int64    `protobuf:"varint,23,opt,name=certType,proto3" json:"certType,omitempty"`
	CertFiles1           string   `protobuf:"bytes,24,opt,name=certFiles1,proto3" json:"certFiles1,omitempty"`                   //certFiles1
	CertFiles2           string   `protobuf:"bytes,25,opt,name=certFiles2,proto3" json:"certFiles2,omitempty"`                   //certFiles2
	CertFiles3           string   `protobuf:"bytes,26,opt,name=certFiles3,proto3" json:"certFiles3,omitempty"`                   //certFiles3
	CertFiles4           string   `protobuf:"bytes,27,opt,name=certFiles4,proto3" json:"certFiles4,omitempty"`                   //certFiles4
	CertFiles5           string   `protobuf:"bytes,28,opt,name=certFiles5,proto3" json:"certFiles5,omitempty"`                   //certFiles5
	AutoReplyNew         string   `protobuf:"bytes,29,opt,name=autoReplyNew,proto3" json:"autoReplyNew,omitempty"`               //autoReplyNew
	AutoReplyProcessing  string   `protobuf:"bytes,30,opt,name=autoReplyProcessing,proto3" json:"autoReplyProcessing,omitempty"` //autoReplyProcessing
	AutoReplyFinish      string   `protobuf:"bytes,31,opt,name=autoReplyFinish,proto3" json:"autoReplyFinish,omitempty"`         //autoReplyFinish
	TextChatPrice        int64    `protobuf:"varint,32,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`            //textChatPrice
	VoiceChatPrice       int64    `protobuf:"varint,33,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"`          //voiceChatPrice
	CheckFailField       []string `protobuf:"bytes,34,rep,name=checkFailField,proto3" json:"checkFailField,omitempty"`
	CheckingField        []string `protobuf:"bytes,35,rep,name=checkingField,proto3" json:"checkingField,omitempty"`
	CheckStatus          int64    `protobuf:"varint,36,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"` //checkStatus
	CreateTime           string   `protobuf:"bytes,37,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,38,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	UserCount            int64    `protobuf:"varint,39,opt,name=userCount,proto3" json:"userCount,omitempty"`       //userCount
	ChatDuration         int64    `protobuf:"varint,40,opt,name=chatDuration,proto3" json:"chatDuration,omitempty"` //chatDuration
	RatingSum            int64    `protobuf:"varint,41,opt,name=ratingSum,proto3" json:"ratingSum,omitempty"`       //ratingSum
	FiveStar             int64    `protobuf:"varint,42,opt,name=fiveStar,proto3" json:"fiveStar,omitempty"`         //fiveStar
	WorkState            int64    `protobuf:"varint,43,opt,name=workState,proto3" json:"workState,omitempty"`
	RefundOrderCnt       int64    `protobuf:"varint,44,opt,name=refundOrderCnt,proto3" json:"refundOrderCnt,omitempty"`
	FinishOrderCnt       int64    `protobuf:"varint,45,opt,name=finishOrderCnt,proto3" json:"finishOrderCnt,omitempty"`
	PaidOrderCnt         int64    `protobuf:"varint,46,opt,name=paidOrderCnt,proto3" json:"paidOrderCnt,omitempty"`
	ListenerName         string   `protobuf:"bytes,47,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	OtherPlatformAccount string   `protobuf:"bytes,48,opt,name=otherPlatformAccount,proto3" json:"otherPlatformAccount,omitempty"`
	TextChatSwitch       int64    `protobuf:"varint,49,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch      int64    `protobuf:"varint,50,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
}

func (x *AdminSeeListenerProfile) Reset() {
	*x = AdminSeeListenerProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminSeeListenerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminSeeListenerProfile) ProtoMessage() {}

func (x *AdminSeeListenerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminSeeListenerProfile.ProtoReflect.Descriptor instead.
func (*AdminSeeListenerProfile) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{18}
}

func (x *AdminSeeListenerProfile) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetIdPhoto1() string {
	if x != nil {
		return x.IdPhoto1
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetIdPhoto2() string {
	if x != nil {
		return x.IdPhoto2
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetIdPhoto3() string {
	if x != nil {
		return x.IdPhoto3
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *AdminSeeListenerProfile) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetExperience1() string {
	if x != nil {
		return x.Experience1
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetExperience2() string {
	if x != nil {
		return x.Experience2
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetCertFiles1() string {
	if x != nil {
		return x.CertFiles1
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetCertFiles2() string {
	if x != nil {
		return x.CertFiles2
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetCertFiles3() string {
	if x != nil {
		return x.CertFiles3
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetCertFiles4() string {
	if x != nil {
		return x.CertFiles4
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetCertFiles5() string {
	if x != nil {
		return x.CertFiles5
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetAutoReplyNew() string {
	if x != nil {
		return x.AutoReplyNew
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetAutoReplyProcessing() string {
	if x != nil {
		return x.AutoReplyProcessing
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetAutoReplyFinish() string {
	if x != nil {
		return x.AutoReplyFinish
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetCheckFailField() []string {
	if x != nil {
		return x.CheckFailField
	}
	return nil
}

func (x *AdminSeeListenerProfile) GetCheckingField() []string {
	if x != nil {
		return x.CheckingField
	}
	return nil
}

func (x *AdminSeeListenerProfile) GetCheckStatus() int64 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetChatDuration() int64 {
	if x != nil {
		return x.ChatDuration
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetRatingSum() int64 {
	if x != nil {
		return x.RatingSum
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetFiveStar() int64 {
	if x != nil {
		return x.FiveStar
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetWorkState() int64 {
	if x != nil {
		return x.WorkState
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetRefundOrderCnt() int64 {
	if x != nil {
		return x.RefundOrderCnt
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetFinishOrderCnt() int64 {
	if x != nil {
		return x.FinishOrderCnt
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetPaidOrderCnt() int64 {
	if x != nil {
		return x.PaidOrderCnt
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetOtherPlatformAccount() string {
	if x != nil {
		return x.OtherPlatformAccount
	}
	return ""
}

func (x *AdminSeeListenerProfile) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *AdminSeeListenerProfile) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

// 获取XXX列表
type GetListenerProfileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminUid     int64   `protobuf:"varint,1,opt,name=adminUid,proto3" json:"adminUid,omitempty"`
	PageNo       int64   `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize     int64   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	CheckStatus  []int64 `protobuf:"varint,4,rep,packed,name=checkStatus,proto3" json:"checkStatus,omitempty"`
	ListenerUid  int64   `protobuf:"varint,5,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`  // XXXuid
	ListenerName string  `protobuf:"bytes,6,opt,name=listenerName,proto3" json:"listenerName,omitempty"` // XXX名称
	CertType     int64   `protobuf:"varint,7,opt,name=certType,proto3" json:"certType,omitempty"`        // 证书类型
}

func (x *GetListenerProfileListReq) Reset() {
	*x = GetListenerProfileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerProfileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerProfileListReq) ProtoMessage() {}

func (x *GetListenerProfileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerProfileListReq.ProtoReflect.Descriptor instead.
func (*GetListenerProfileListReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{19}
}

func (x *GetListenerProfileListReq) GetAdminUid() int64 {
	if x != nil {
		return x.AdminUid
	}
	return 0
}

func (x *GetListenerProfileListReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetListenerProfileListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetListenerProfileListReq) GetCheckStatus() []int64 {
	if x != nil {
		return x.CheckStatus
	}
	return nil
}

func (x *GetListenerProfileListReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerProfileListReq) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *GetListenerProfileListReq) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

type CheckListenerProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Draft   *AdminSeeListenerProfileDraft `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	Profile *AdminSeeListenerProfile      `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *CheckListenerProfile) Reset() {
	*x = CheckListenerProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckListenerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckListenerProfile) ProtoMessage() {}

func (x *CheckListenerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckListenerProfile.ProtoReflect.Descriptor instead.
func (*CheckListenerProfile) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{20}
}

func (x *CheckListenerProfile) GetDraft() *AdminSeeListenerProfileDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

func (x *CheckListenerProfile) GetProfile() *AdminSeeListenerProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type GetListenerProfileListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CheckListenerProfile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Sum  int64                   `protobuf:"varint,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *GetListenerProfileListResp) Reset() {
	*x = GetListenerProfileListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerProfileListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerProfileListResp) ProtoMessage() {}

func (x *GetListenerProfileListResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerProfileListResp.ProtoReflect.Descriptor instead.
func (*GetListenerProfileListResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{21}
}

func (x *GetListenerProfileListResp) GetList() []*CheckListenerProfile {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetListenerProfileListResp) GetSum() int64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

// 审核XXX资料
type CheckListenerProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid          int64    `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus        int64    `protobuf:"varint,5,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	PhoneNumber          string   `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`      //phoneNumber
	Constellation        int64    `protobuf:"varint,7,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Province             string   `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`            //province
	City                 string   `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`                    //city
	Job                  string   `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                     //job
	Education            int64    `protobuf:"varint,11,opt,name=education,proto3" json:"education,omitempty"`        //education
	Gender               int64    `protobuf:"varint,12,opt,name=gender,proto3" json:"gender,omitempty"`              //gender
	Birthday             string   `protobuf:"bytes,13,opt,name=birthday,proto3" json:"birthday,omitempty"`
	IdNo                 string   `protobuf:"bytes,14,opt,name=idNo,proto3" json:"idNo,omitempty"`
	IdPhoto1             string   `protobuf:"bytes,15,opt,name=idPhoto1,proto3" json:"idPhoto1,omitempty"`               //idPhoto1
	IdPhoto2             string   `protobuf:"bytes,16,opt,name=idPhoto2,proto3" json:"idPhoto2,omitempty"`               //idPhoto2
	IdPhoto3             string   `protobuf:"bytes,17,opt,name=idPhoto3,proto3" json:"idPhoto3,omitempty"`               //idPhoto3
	Specialties          []int64  `protobuf:"varint,18,rep,packed,name=specialties,proto3" json:"specialties,omitempty"` // 专业领域
	Introduction         string   `protobuf:"bytes,19,opt,name=introduction,proto3" json:"introduction,omitempty"`       //introduction
	VoiceFile            string   `protobuf:"bytes,20,opt,name=voiceFile,proto3" json:"voiceFile,omitempty"`             //voiceFile
	Experience1          string   `protobuf:"bytes,21,opt,name=experience1,proto3" json:"experience1,omitempty"`         //experience1
	Experience2          string   `protobuf:"bytes,22,opt,name=experience2,proto3" json:"experience2,omitempty"`         //experience2
	CertType             int64    `protobuf:"varint,23,opt,name=certType,proto3" json:"certType,omitempty"`
	CertFiles1           string   `protobuf:"bytes,24,opt,name=certFiles1,proto3" json:"certFiles1,omitempty"`                   //certFiles1
	CertFiles2           string   `protobuf:"bytes,25,opt,name=certFiles2,proto3" json:"certFiles2,omitempty"`                   //certFiles2
	CertFiles3           string   `protobuf:"bytes,26,opt,name=certFiles3,proto3" json:"certFiles3,omitempty"`                   //certFiles3
	CertFiles4           string   `protobuf:"bytes,27,opt,name=certFiles4,proto3" json:"certFiles4,omitempty"`                   //certFiles4
	CertFiles5           string   `protobuf:"bytes,28,opt,name=certFiles5,proto3" json:"certFiles5,omitempty"`                   //certFiles5
	AutoReplyNew         string   `protobuf:"bytes,29,opt,name=autoReplyNew,proto3" json:"autoReplyNew,omitempty"`               //autoReplyNew
	AutoReplyProcessing  string   `protobuf:"bytes,30,opt,name=autoReplyProcessing,proto3" json:"autoReplyProcessing,omitempty"` //autoReplyProcessing
	AutoReplyFinish      string   `protobuf:"bytes,31,opt,name=autoReplyFinish,proto3" json:"autoReplyFinish,omitempty"`         //autoReplyFinish
	TextChatPrice        int64    `protobuf:"varint,32,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`            //textChatPrice
	VoiceChatPrice       int64    `protobuf:"varint,33,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"`          //voiceChatPrice
	AdminUid             int64    `protobuf:"varint,34,opt,name=adminUid,proto3" json:"adminUid,omitempty"`
	CheckFailField       []string `protobuf:"bytes,35,rep,name=checkFailField,proto3" json:"checkFailField,omitempty"`
	CheckPassField       []string `protobuf:"bytes,36,rep,name=checkPassField,proto3" json:"checkPassField,omitempty"`
	Remark               string   `protobuf:"bytes,37,opt,name=remark,proto3" json:"remark,omitempty"`
	OpenId               string   `protobuf:"bytes,38,opt,name=openId,proto3" json:"openId,omitempty"`
	CheckStatus          int64    `protobuf:"varint,39,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"`
	DraftVersion         int64    `protobuf:"varint,40,opt,name=draftVersion,proto3" json:"draftVersion,omitempty"`
	ListenerName         string   `protobuf:"bytes,41,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	OtherPlatformAccount string   `protobuf:"bytes,42,opt,name=otherPlatformAccount,proto3" json:"otherPlatformAccount,omitempty"`
	TextChatSwitch       int64    `protobuf:"varint,43,opt,name=textChatSwitch,proto3" json:"textChatSwitch,omitempty"`
	VoiceChatSwitch      int64    `protobuf:"varint,44,opt,name=voiceChatSwitch,proto3" json:"voiceChatSwitch,omitempty"`
	Channel              string   `protobuf:"bytes,45,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CheckListenerProfileReq) Reset() {
	*x = CheckListenerProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckListenerProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckListenerProfileReq) ProtoMessage() {}

func (x *CheckListenerProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckListenerProfileReq.ProtoReflect.Descriptor instead.
func (*CheckListenerProfileReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{22}
}

func (x *CheckListenerProfileReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *CheckListenerProfileReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *CheckListenerProfileReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CheckListenerProfileReq) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *CheckListenerProfileReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CheckListenerProfileReq) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *CheckListenerProfileReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CheckListenerProfileReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *CheckListenerProfileReq) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *CheckListenerProfileReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CheckListenerProfileReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *CheckListenerProfileReq) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *CheckListenerProfileReq) GetIdPhoto1() string {
	if x != nil {
		return x.IdPhoto1
	}
	return ""
}

func (x *CheckListenerProfileReq) GetIdPhoto2() string {
	if x != nil {
		return x.IdPhoto2
	}
	return ""
}

func (x *CheckListenerProfileReq) GetIdPhoto3() string {
	if x != nil {
		return x.IdPhoto3
	}
	return ""
}

func (x *CheckListenerProfileReq) GetSpecialties() []int64 {
	if x != nil {
		return x.Specialties
	}
	return nil
}

func (x *CheckListenerProfileReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CheckListenerProfileReq) GetVoiceFile() string {
	if x != nil {
		return x.VoiceFile
	}
	return ""
}

func (x *CheckListenerProfileReq) GetExperience1() string {
	if x != nil {
		return x.Experience1
	}
	return ""
}

func (x *CheckListenerProfileReq) GetExperience2() string {
	if x != nil {
		return x.Experience2
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCertType() int64 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *CheckListenerProfileReq) GetCertFiles1() string {
	if x != nil {
		return x.CertFiles1
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCertFiles2() string {
	if x != nil {
		return x.CertFiles2
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCertFiles3() string {
	if x != nil {
		return x.CertFiles3
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCertFiles4() string {
	if x != nil {
		return x.CertFiles4
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCertFiles5() string {
	if x != nil {
		return x.CertFiles5
	}
	return ""
}

func (x *CheckListenerProfileReq) GetAutoReplyNew() string {
	if x != nil {
		return x.AutoReplyNew
	}
	return ""
}

func (x *CheckListenerProfileReq) GetAutoReplyProcessing() string {
	if x != nil {
		return x.AutoReplyProcessing
	}
	return ""
}

func (x *CheckListenerProfileReq) GetAutoReplyFinish() string {
	if x != nil {
		return x.AutoReplyFinish
	}
	return ""
}

func (x *CheckListenerProfileReq) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *CheckListenerProfileReq) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *CheckListenerProfileReq) GetAdminUid() int64 {
	if x != nil {
		return x.AdminUid
	}
	return 0
}

func (x *CheckListenerProfileReq) GetCheckFailField() []string {
	if x != nil {
		return x.CheckFailField
	}
	return nil
}

func (x *CheckListenerProfileReq) GetCheckPassField() []string {
	if x != nil {
		return x.CheckPassField
	}
	return nil
}

func (x *CheckListenerProfileReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CheckListenerProfileReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *CheckListenerProfileReq) GetCheckStatus() int64 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

func (x *CheckListenerProfileReq) GetDraftVersion() int64 {
	if x != nil {
		return x.DraftVersion
	}
	return 0
}

func (x *CheckListenerProfileReq) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *CheckListenerProfileReq) GetOtherPlatformAccount() string {
	if x != nil {
		return x.OtherPlatformAccount
	}
	return ""
}

func (x *CheckListenerProfileReq) GetTextChatSwitch() int64 {
	if x != nil {
		return x.TextChatSwitch
	}
	return 0
}

func (x *CheckListenerProfileReq) GetVoiceChatSwitch() int64 {
	if x != nil {
		return x.VoiceChatSwitch
	}
	return 0
}

func (x *CheckListenerProfileReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type CheckListenerProfileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckResult int64 `protobuf:"varint,1,opt,name=checkResult,proto3" json:"checkResult,omitempty"` // 2 新申请XXX审核通过
}

func (x *CheckListenerProfileResp) Reset() {
	*x = CheckListenerProfileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckListenerProfileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckListenerProfileResp) ProtoMessage() {}

func (x *CheckListenerProfileResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckListenerProfileResp.ProtoReflect.Descriptor instead.
func (*CheckListenerProfileResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{23}
}

func (x *CheckListenerProfileResp) GetCheckResult() int64 {
	if x != nil {
		return x.CheckResult
	}
	return 0
}

// 修改XXX状态
type ChangeWorkStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid       int64   `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	WorkState         int64   `protobuf:"varint,2,opt,name=workState,proto3" json:"workState,omitempty"`
	RestingTimeEnable int64   `protobuf:"varint,3,opt,name=restingTimeEnable,proto3" json:"restingTimeEnable,omitempty"`
	StopWorkTime      string  `protobuf:"bytes,4,opt,name=stopWorkTime,proto3" json:"stopWorkTime,omitempty"`
	StartWorkTime     string  `protobuf:"bytes,5,opt,name=startWorkTime,proto3" json:"startWorkTime,omitempty"`
	WorkDays          []int64 `protobuf:"varint,6,rep,packed,name=workDays,proto3" json:"workDays,omitempty"`
}

func (x *ChangeWorkStateReq) Reset() {
	*x = ChangeWorkStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWorkStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWorkStateReq) ProtoMessage() {}

func (x *ChangeWorkStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWorkStateReq.ProtoReflect.Descriptor instead.
func (*ChangeWorkStateReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{24}
}

func (x *ChangeWorkStateReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ChangeWorkStateReq) GetWorkState() int64 {
	if x != nil {
		return x.WorkState
	}
	return 0
}

func (x *ChangeWorkStateReq) GetRestingTimeEnable() int64 {
	if x != nil {
		return x.RestingTimeEnable
	}
	return 0
}

func (x *ChangeWorkStateReq) GetStopWorkTime() string {
	if x != nil {
		return x.StopWorkTime
	}
	return ""
}

func (x *ChangeWorkStateReq) GetStartWorkTime() string {
	if x != nil {
		return x.StartWorkTime
	}
	return ""
}

func (x *ChangeWorkStateReq) GetWorkDays() []int64 {
	if x != nil {
		return x.WorkDays
	}
	return nil
}

type ChangeWorkStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeWorkStateResp) Reset() {
	*x = ChangeWorkStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWorkStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWorkStateResp) ProtoMessage() {}

func (x *ChangeWorkStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWorkStateResp.ProtoReflect.Descriptor instead.
func (*ChangeWorkStateResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{25}
}

// 获取XXX设置的状态
type GetWorkStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetWorkStateReq) Reset() {
	*x = GetWorkStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkStateReq) ProtoMessage() {}

func (x *GetWorkStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkStateReq.ProtoReflect.Descriptor instead.
func (*GetWorkStateReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{26}
}

func (x *GetWorkStateReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetWorkStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkState         int64   `protobuf:"varint,1,opt,name=workState,proto3" json:"workState,omitempty"`
	RestingTimeEnable int64   `protobuf:"varint,2,opt,name=restingTimeEnable,proto3" json:"restingTimeEnable,omitempty"`
	StopWorkTime      string  `protobuf:"bytes,3,opt,name=stopWorkTime,proto3" json:"stopWorkTime,omitempty"`
	StartWorkTime     string  `protobuf:"bytes,4,opt,name=startWorkTime,proto3" json:"startWorkTime,omitempty"`
	Introduction      string  `protobuf:"bytes,5,opt,name=introduction,proto3" json:"introduction,omitempty"`
	WorkDays          []int64 `protobuf:"varint,6,rep,packed,name=workDays,proto3" json:"workDays,omitempty"`
	OnlineState       int64   `protobuf:"varint,7,opt,name=onlineState,proto3" json:"onlineState,omitempty"`
}

func (x *GetWorkStateResp) Reset() {
	*x = GetWorkStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkStateResp) ProtoMessage() {}

func (x *GetWorkStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkStateResp.ProtoReflect.Descriptor instead.
func (*GetWorkStateResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{27}
}

func (x *GetWorkStateResp) GetWorkState() int64 {
	if x != nil {
		return x.WorkState
	}
	return 0
}

func (x *GetWorkStateResp) GetRestingTimeEnable() int64 {
	if x != nil {
		return x.RestingTimeEnable
	}
	return 0
}

func (x *GetWorkStateResp) GetStopWorkTime() string {
	if x != nil {
		return x.StopWorkTime
	}
	return ""
}

func (x *GetWorkStateResp) GetStartWorkTime() string {
	if x != nil {
		return x.StartWorkTime
	}
	return ""
}

func (x *GetWorkStateResp) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GetWorkStateResp) GetWorkDays() []int64 {
	if x != nil {
		return x.WorkDays
	}
	return nil
}

func (x *GetWorkStateResp) GetOnlineState() int64 {
	if x != nil {
		return x.OnlineState
	}
	return 0
}

// 获取XXX定价和当前定价方案
type GetListenerPriceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	AuthKey     string `protobuf:"bytes,3,opt,name=authKey,proto3" json:"authKey,omitempty"`
}

func (x *GetListenerPriceReq) Reset() {
	*x = GetListenerPriceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerPriceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerPriceReq) ProtoMessage() {}

func (x *GetListenerPriceReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerPriceReq.ProtoReflect.Descriptor instead.
func (*GetListenerPriceReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{28}
}

func (x *GetListenerPriceReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetListenerPriceReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerPriceReq) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

type GetListenerPriceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextChatPrice  int64  `protobuf:"varint,1,opt,name=textChatPrice,proto3" json:"textChatPrice,omitempty"`   //textChatPrice
	VoiceChatPrice int64  `protobuf:"varint,2,opt,name=voiceChatPrice,proto3" json:"voiceChatPrice,omitempty"` //voiceChatPrice
	Channel        string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *GetListenerPriceResp) Reset() {
	*x = GetListenerPriceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerPriceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerPriceResp) ProtoMessage() {}

func (x *GetListenerPriceResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerPriceResp.ProtoReflect.Descriptor instead.
func (*GetListenerPriceResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{29}
}

func (x *GetListenerPriceResp) GetTextChatPrice() int64 {
	if x != nil {
		return x.TextChatPrice
	}
	return 0
}

func (x *GetListenerPriceResp) GetVoiceChatPrice() int64 {
	if x != nil {
		return x.VoiceChatPrice
	}
	return 0
}

func (x *GetListenerPriceResp) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

// 更新XXX钱包
type UpdateListenerWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	Amount      int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`           // 收益金额 分
	OrderAmount int64  `protobuf:"varint,3,opt,name=orderAmount,proto3" json:"orderAmount,omitempty"` // 订单金额(待确认金额、退款金额)
	OutId       string `protobuf:"bytes,4,opt,name=outId,proto3" json:"outId,omitempty"`              // 本次金额更新关联的外部id
	SettleType  int64  `protobuf:"varint,5,opt,name=settleType,proto3" json:"settleType,omitempty"`   // 本次金额更新操作类型
	Remark      string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	OutTime     string `protobuf:"bytes,7,opt,name=outTime,proto3" json:"outTime,omitempty"` // 订单创建时间或者提现申请时间
	FlowNo      string `protobuf:"bytes,8,opt,name=flowNo,proto3" json:"flowNo,omitempty"`   // 钱包流水号 订单收益可以不用 提现操作更新需要使用
}

func (x *UpdateListenerWalletReq) Reset() {
	*x = UpdateListenerWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerWalletReq) ProtoMessage() {}

func (x *UpdateListenerWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerWalletReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerWalletReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateListenerWalletReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UpdateListenerWalletReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpdateListenerWalletReq) GetOrderAmount() int64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *UpdateListenerWalletReq) GetOutId() string {
	if x != nil {
		return x.OutId
	}
	return ""
}

func (x *UpdateListenerWalletReq) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

func (x *UpdateListenerWalletReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateListenerWalletReq) GetOutTime() string {
	if x != nil {
		return x.OutTime
	}
	return ""
}

func (x *UpdateListenerWalletReq) GetFlowNo() string {
	if x != nil {
		return x.FlowNo
	}
	return ""
}

type UpdateListenerWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerWalletResp) Reset() {
	*x = UpdateListenerWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerWalletResp) ProtoMessage() {}

func (x *UpdateListenerWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerWalletResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerWalletResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{31}
}

// 更新XXX订单的统计数据
type UpdateListenerOrderStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddUserCount         int64   `protobuf:"varint,1,opt,name=addUserCount,proto3" json:"addUserCount,omitempty"`
	AddChatDuration      int64   `protobuf:"varint,2,opt,name=addChatDuration,proto3" json:"addChatDuration,omitempty"`
	AddRatingSum         int64   `protobuf:"varint,3,opt,name=addRatingSum,proto3" json:"addRatingSum,omitempty"`
	AddFiveStar          int64   `protobuf:"varint,4,opt,name=addFiveStar,proto3" json:"addFiveStar,omitempty"`
	AddThreeStar         int64   `protobuf:"varint,5,opt,name=addThreeStar,proto3" json:"addThreeStar,omitempty"`
	AddOneStar           int64   `protobuf:"varint,6,opt,name=addOneStar,proto3" json:"addOneStar,omitempty"`
	AddRefundOrderCnt    int64   `protobuf:"varint,7,opt,name=addRefundOrderCnt,proto3" json:"addRefundOrderCnt,omitempty"`
	AddFinishOrderCnt    int64   `protobuf:"varint,8,opt,name=addFinishOrderCnt,proto3" json:"addFinishOrderCnt,omitempty"`
	AddPaidOrderCnt      int64   `protobuf:"varint,9,opt,name=addPaidOrderCnt,proto3" json:"addPaidOrderCnt,omitempty"`
	AddRepeatPaidUserCnt int64   `protobuf:"varint,10,opt,name=addRepeatPaidUserCnt,proto3" json:"addRepeatPaidUserCnt,omitempty"`
	ListenerUid          int64   `protobuf:"varint,11,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	CommentTag           []int64 `protobuf:"varint,12,rep,packed,name=commentTag,proto3" json:"commentTag,omitempty"`
	UserPaidOrderAmount  int64   `protobuf:"varint,13,opt,name=userPaidOrderAmount,proto3" json:"userPaidOrderAmount,omitempty"`
}

func (x *UpdateListenerOrderStatReq) Reset() {
	*x = UpdateListenerOrderStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerOrderStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerOrderStatReq) ProtoMessage() {}

func (x *UpdateListenerOrderStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerOrderStatReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerOrderStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateListenerOrderStatReq) GetAddUserCount() int64 {
	if x != nil {
		return x.AddUserCount
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddChatDuration() int64 {
	if x != nil {
		return x.AddChatDuration
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddRatingSum() int64 {
	if x != nil {
		return x.AddRatingSum
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddFiveStar() int64 {
	if x != nil {
		return x.AddFiveStar
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddThreeStar() int64 {
	if x != nil {
		return x.AddThreeStar
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddOneStar() int64 {
	if x != nil {
		return x.AddOneStar
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddRefundOrderCnt() int64 {
	if x != nil {
		return x.AddRefundOrderCnt
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddFinishOrderCnt() int64 {
	if x != nil {
		return x.AddFinishOrderCnt
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddPaidOrderCnt() int64 {
	if x != nil {
		return x.AddPaidOrderCnt
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetAddRepeatPaidUserCnt() int64 {
	if x != nil {
		return x.AddRepeatPaidUserCnt
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UpdateListenerOrderStatReq) GetCommentTag() []int64 {
	if x != nil {
		return x.CommentTag
	}
	return nil
}

func (x *UpdateListenerOrderStatReq) GetUserPaidOrderAmount() int64 {
	if x != nil {
		return x.UserPaidOrderAmount
	}
	return 0
}

type UpdateListenerOrderStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerOrderStatResp) Reset() {
	*x = UpdateListenerOrderStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerOrderStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerOrderStatResp) ProtoMessage() {}

func (x *UpdateListenerOrderStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerOrderStatResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerOrderStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{33}
}

//
type CommitCheckNewListenerProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CheckStatus int64 `protobuf:"varint,2,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"`
}

func (x *CommitCheckNewListenerProfileReq) Reset() {
	*x = CommitCheckNewListenerProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitCheckNewListenerProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCheckNewListenerProfileReq) ProtoMessage() {}

func (x *CommitCheckNewListenerProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCheckNewListenerProfileReq.ProtoReflect.Descriptor instead.
func (*CommitCheckNewListenerProfileReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{34}
}

func (x *CommitCheckNewListenerProfileReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CommitCheckNewListenerProfileReq) GetCheckStatus() int64 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

type CommitCheckNewListenerProfileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitCheckNewListenerProfileResp) Reset() {
	*x = CommitCheckNewListenerProfileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitCheckNewListenerProfileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCheckNewListenerProfileResp) ProtoMessage() {}

func (x *CommitCheckNewListenerProfileResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCheckNewListenerProfileResp.ProtoReflect.Descriptor instead.
func (*CommitCheckNewListenerProfileResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{35}
}

// 绑定银行卡
type SetBankCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerName string `protobuf:"bytes,1,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	PhoneNumber  string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	IdNo         string `protobuf:"bytes,3,opt,name=idNo,proto3" json:"idNo,omitempty"`
	BankCardNo   string `protobuf:"bytes,4,opt,name=bankCardNo,proto3" json:"bankCardNo,omitempty"`
	ListenerUid  int64  `protobuf:"varint,5,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *SetBankCardReq) Reset() {
	*x = SetBankCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBankCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBankCardReq) ProtoMessage() {}

func (x *SetBankCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBankCardReq.ProtoReflect.Descriptor instead.
func (*SetBankCardReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{36}
}

func (x *SetBankCardReq) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *SetBankCardReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SetBankCardReq) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *SetBankCardReq) GetBankCardNo() string {
	if x != nil {
		return x.BankCardNo
	}
	return ""
}

func (x *SetBankCardReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type SetBankCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBankCardResp) Reset() {
	*x = SetBankCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBankCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBankCardResp) ProtoMessage() {}

func (x *SetBankCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBankCardResp.ProtoReflect.Descriptor instead.
func (*SetBankCardResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{37}
}

// 获取绑定的银行卡
type GetBankCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetBankCardReq) Reset() {
	*x = GetBankCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBankCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankCardReq) ProtoMessage() {}

func (x *GetBankCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankCardReq.ProtoReflect.Descriptor instead.
func (*GetBankCardReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{38}
}

func (x *GetBankCardReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetBankCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerName string `protobuf:"bytes,1,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	PhoneNumber  string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	IdNo         string `protobuf:"bytes,3,opt,name=idNo,proto3" json:"idNo,omitempty"`
	BankCardNo   string `protobuf:"bytes,4,opt,name=bankCardNo,proto3" json:"bankCardNo,omitempty"`
	ListenerUid  int64  `protobuf:"varint,5,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetBankCardResp) Reset() {
	*x = GetBankCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBankCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankCardResp) ProtoMessage() {}

func (x *GetBankCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankCardResp.ProtoReflect.Descriptor instead.
func (*GetBankCardResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{39}
}

func (x *GetBankCardResp) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *GetBankCardResp) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetBankCardResp) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *GetBankCardResp) GetBankCardNo() string {
	if x != nil {
		return x.BankCardNo
	}
	return ""
}

func (x *GetBankCardResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

// 获取XXX钱包详情
type GetListenerWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerWalletReq) Reset() {
	*x = GetListenerWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerWalletReq) ProtoMessage() {}

func (x *GetListenerWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerWalletReq.ProtoReflect.Descriptor instead.
func (*GetListenerWalletReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{40}
}

func (x *GetListenerWalletReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetListenerWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid             int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	WaitConfirmAmount       int64 `protobuf:"varint,2,opt,name=waitConfirmAmount,proto3" json:"waitConfirmAmount,omitempty"`             // 等待确认的金额（分）
	Amount                  int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                                   // 已经确认的收益金额（分）
	RefundSumAmount         int64 `protobuf:"varint,4,opt,name=refundSumAmount,proto3" json:"refundSumAmount,omitempty"`                 // 累计退款金额 (分)
	CashSumAmount           int64 `protobuf:"varint,5,opt,name=cashSumAmount,proto3" json:"cashSumAmount,omitempty"`                     // 累计提现金额 （分）
	ApplyCashAmount         int64 `protobuf:"varint,6,opt,name=applyCashAmount,proto3" json:"applyCashAmount,omitempty"`                 // 当前申请的提现金额
	CurrentMonthAmount      int64 `protobuf:"varint,7,opt,name=currentMonthAmount,proto3" json:"currentMonthAmount,omitempty"`           // 本月收益
	CurrentMonthOrderAmount int64 `protobuf:"varint,8,opt,name=currentMonthOrderAmount,proto3" json:"currentMonthOrderAmount,omitempty"` // 本月订单金额
}

func (x *GetListenerWalletResp) Reset() {
	*x = GetListenerWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerWalletResp) ProtoMessage() {}

func (x *GetListenerWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerWalletResp.ProtoReflect.Descriptor instead.
func (*GetListenerWalletResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{41}
}

func (x *GetListenerWalletResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerWalletResp) GetWaitConfirmAmount() int64 {
	if x != nil {
		return x.WaitConfirmAmount
	}
	return 0
}

func (x *GetListenerWalletResp) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetListenerWalletResp) GetRefundSumAmount() int64 {
	if x != nil {
		return x.RefundSumAmount
	}
	return 0
}

func (x *GetListenerWalletResp) GetCashSumAmount() int64 {
	if x != nil {
		return x.CashSumAmount
	}
	return 0
}

func (x *GetListenerWalletResp) GetApplyCashAmount() int64 {
	if x != nil {
		return x.ApplyCashAmount
	}
	return 0
}

func (x *GetListenerWalletResp) GetCurrentMonthAmount() int64 {
	if x != nil {
		return x.CurrentMonthAmount
	}
	return 0
}

func (x *GetListenerWalletResp) GetCurrentMonthOrderAmount() int64 {
	if x != nil {
		return x.CurrentMonthOrderAmount
	}
	return 0
}

// 获取XXX提现记录
type GetListenerCashLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	PageNo      int64 `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SettleType  int64 `protobuf:"varint,4,opt,name=settleType,proto3" json:"settleType,omitempty"`
}

func (x *GetListenerCashLogReq) Reset() {
	*x = GetListenerCashLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerCashLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerCashLogReq) ProtoMessage() {}

func (x *GetListenerCashLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerCashLogReq.ProtoReflect.Descriptor instead.
func (*GetListenerCashLogReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{42}
}

func (x *GetListenerCashLogReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerCashLogReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetListenerCashLogReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetListenerCashLogReq) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

type ListenerCashLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Amount     int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	SettleType int64  `protobuf:"varint,3,opt,name=settleType,proto3" json:"settleType,omitempty"`
	OutId      string `protobuf:"bytes,4,opt,name=outId,proto3" json:"outId,omitempty"`
	Remark     string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ListenerCashLog) Reset() {
	*x = ListenerCashLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerCashLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerCashLog) ProtoMessage() {}

func (x *ListenerCashLog) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerCashLog.ProtoReflect.Descriptor instead.
func (*ListenerCashLog) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{43}
}

func (x *ListenerCashLog) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListenerCashLog) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ListenerCashLog) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

func (x *ListenerCashLog) GetOutId() string {
	if x != nil {
		return x.OutId
	}
	return ""
}

func (x *ListenerCashLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type GetListenerCashLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListenerCashLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetListenerCashLogResp) Reset() {
	*x = GetListenerCashLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerCashLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerCashLogResp) ProtoMessage() {}

func (x *GetListenerCashLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerCashLogResp.ProtoReflect.Descriptor instead.
func (*GetListenerCashLogResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{44}
}

func (x *GetListenerCashLogResp) GetList() []*ListenerCashLog {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取XXX收益记录
type GetListenerIncomeLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	PageNo      int64 `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetListenerIncomeLogReq) Reset() {
	*x = GetListenerIncomeLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerIncomeLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerIncomeLogReq) ProtoMessage() {}

func (x *GetListenerIncomeLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerIncomeLogReq.ProtoReflect.Descriptor instead.
func (*GetListenerIncomeLogReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{45}
}

func (x *GetListenerIncomeLogReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerIncomeLogReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetListenerIncomeLogReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListenerIncomeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Amount     int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	SettleType int64  `protobuf:"varint,3,opt,name=settleType,proto3" json:"settleType,omitempty"`
	OutId      string `protobuf:"bytes,4,opt,name=outId,proto3" json:"outId,omitempty"`
	Remark     string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ListenerIncomeLog) Reset() {
	*x = ListenerIncomeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerIncomeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerIncomeLog) ProtoMessage() {}

func (x *ListenerIncomeLog) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerIncomeLog.ProtoReflect.Descriptor instead.
func (*ListenerIncomeLog) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{46}
}

func (x *ListenerIncomeLog) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListenerIncomeLog) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ListenerIncomeLog) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

func (x *ListenerIncomeLog) GetOutId() string {
	if x != nil {
		return x.OutId
	}
	return ""
}

func (x *ListenerIncomeLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type GetListenerIncomeLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListenerIncomeLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetListenerIncomeLogResp) Reset() {
	*x = GetListenerIncomeLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerIncomeLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerIncomeLogResp) ProtoMessage() {}

func (x *GetListenerIncomeLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerIncomeLogResp.ProtoReflect.Descriptor instead.
func (*GetListenerIncomeLogResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{47}
}

func (x *GetListenerIncomeLogResp) GetList() []*ListenerIncomeLog {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取提交转账的信息并更新状态
type GetCommitMoveCashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowNo string `protobuf:"bytes,1,opt,name=flowNo,proto3" json:"flowNo,omitempty"`
	Uid    int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetCommitMoveCashReq) Reset() {
	*x = GetCommitMoveCashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitMoveCashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitMoveCashReq) ProtoMessage() {}

func (x *GetCommitMoveCashReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitMoveCashReq.ProtoReflect.Descriptor instead.
func (*GetCommitMoveCashReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{48}
}

func (x *GetCommitMoveCashReq) GetFlowNo() string {
	if x != nil {
		return x.FlowNo
	}
	return ""
}

func (x *GetCommitMoveCashReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetCommitMoveCashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowNo      string `protobuf:"bytes,1,opt,name=flowNo,proto3" json:"flowNo,omitempty"`
	Amount      int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	IdNo        string `protobuf:"bytes,5,opt,name=idNo,proto3" json:"idNo,omitempty"`
	BankCardNo  string `protobuf:"bytes,6,opt,name=bankCardNo,proto3" json:"bankCardNo,omitempty"`
	Uid         int64  `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetCommitMoveCashResp) Reset() {
	*x = GetCommitMoveCashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitMoveCashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitMoveCashResp) ProtoMessage() {}

func (x *GetCommitMoveCashResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitMoveCashResp.ProtoReflect.Descriptor instead.
func (*GetCommitMoveCashResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{49}
}

func (x *GetCommitMoveCashResp) GetFlowNo() string {
	if x != nil {
		return x.FlowNo
	}
	return ""
}

func (x *GetCommitMoveCashResp) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetCommitMoveCashResp) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetCommitMoveCashResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCommitMoveCashResp) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *GetCommitMoveCashResp) GetBankCardNo() string {
	if x != nil {
		return x.BankCardNo
	}
	return ""
}

func (x *GetCommitMoveCashResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 获取XXX评价统计情况
type GetListenerRatingStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerRatingStatReq) Reset() {
	*x = GetListenerRatingStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerRatingStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerRatingStatReq) ProtoMessage() {}

func (x *GetListenerRatingStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerRatingStatReq.ProtoReflect.Descriptor instead.
func (*GetListenerRatingStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{50}
}

func (x *GetListenerRatingStatReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type CommentTagPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag int64 `protobuf:"varint,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Cnt int64 `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *CommentTagPair) Reset() {
	*x = CommentTagPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentTagPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentTagPair) ProtoMessage() {}

func (x *CommentTagPair) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentTagPair.ProtoReflect.Descriptor instead.
func (*CommentTagPair) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{51}
}

func (x *CommentTagPair) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *CommentTagPair) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

type GetListenerRatingStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RatingSum      int64             `protobuf:"varint,1,opt,name=ratingSum,proto3" json:"ratingSum,omitempty"`
	FiveStar       int64             `protobuf:"varint,2,opt,name=fiveStar,proto3" json:"fiveStar,omitempty"`
	ThreeStar      int64             `protobuf:"varint,3,opt,name=threeStar,proto3" json:"threeStar,omitempty"`
	OneStar        int64             `protobuf:"varint,4,opt,name=oneStar,proto3" json:"oneStar,omitempty"`
	UserCount      int64             `protobuf:"varint,5,opt,name=userCount,proto3" json:"userCount,omitempty"`
	ChatDuration   int64             `protobuf:"varint,6,opt,name=chatDuration,proto3" json:"chatDuration,omitempty"`
	CommentTagStat []*CommentTagPair `protobuf:"bytes,7,rep,name=commentTagStat,proto3" json:"commentTagStat,omitempty"`
}

func (x *GetListenerRatingStatResp) Reset() {
	*x = GetListenerRatingStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerRatingStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerRatingStatResp) ProtoMessage() {}

func (x *GetListenerRatingStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerRatingStatResp.ProtoReflect.Descriptor instead.
func (*GetListenerRatingStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{52}
}

func (x *GetListenerRatingStatResp) GetRatingSum() int64 {
	if x != nil {
		return x.RatingSum
	}
	return 0
}

func (x *GetListenerRatingStatResp) GetFiveStar() int64 {
	if x != nil {
		return x.FiveStar
	}
	return 0
}

func (x *GetListenerRatingStatResp) GetThreeStar() int64 {
	if x != nil {
		return x.ThreeStar
	}
	return 0
}

func (x *GetListenerRatingStatResp) GetOneStar() int64 {
	if x != nil {
		return x.OneStar
	}
	return 0
}

func (x *GetListenerRatingStatResp) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *GetListenerRatingStatResp) GetChatDuration() int64 {
	if x != nil {
		return x.ChatDuration
	}
	return 0
}

func (x *GetListenerRatingStatResp) GetCommentTagStat() []*CommentTagPair {
	if x != nil {
		return x.CommentTagStat
	}
	return nil
}

// 获取常用语
type GetListenerWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerWordsReq) Reset() {
	*x = GetListenerWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerWordsReq) ProtoMessage() {}

func (x *GetListenerWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerWordsReq.ProtoReflect.Descriptor instead.
func (*GetListenerWordsReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{53}
}

func (x *GetListenerWordsReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetListenerWordsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words1      string  `protobuf:"bytes,1,opt,name=words1,proto3" json:"words1,omitempty"`
	Words2      string  `protobuf:"bytes,2,opt,name=words2,proto3" json:"words2,omitempty"`
	Words3      string  `protobuf:"bytes,3,opt,name=words3,proto3" json:"words3,omitempty"`
	Words4      string  `protobuf:"bytes,4,opt,name=words4,proto3" json:"words4,omitempty"`
	Words5      string  `protobuf:"bytes,5,opt,name=words5,proto3" json:"words5,omitempty"`
	Words6      string  `protobuf:"bytes,6,opt,name=words6,proto3" json:"words6,omitempty"`
	Words7      string  `protobuf:"bytes,7,opt,name=words7,proto3" json:"words7,omitempty"`
	Words8      string  `protobuf:"bytes,8,opt,name=words8,proto3" json:"words8,omitempty"`
	Words9      string  `protobuf:"bytes,9,opt,name=words9,proto3" json:"words9,omitempty"`
	Words10     string  `protobuf:"bytes,10,opt,name=words10,proto3" json:"words10,omitempty"`
	ListenerUid int64   `protobuf:"varint,11,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	WordsSort   []int64 `protobuf:"varint,12,rep,packed,name=wordsSort,proto3" json:"wordsSort,omitempty"`
}

func (x *GetListenerWordsResp) Reset() {
	*x = GetListenerWordsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerWordsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerWordsResp) ProtoMessage() {}

func (x *GetListenerWordsResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerWordsResp.ProtoReflect.Descriptor instead.
func (*GetListenerWordsResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{54}
}

func (x *GetListenerWordsResp) GetWords1() string {
	if x != nil {
		return x.Words1
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords2() string {
	if x != nil {
		return x.Words2
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords3() string {
	if x != nil {
		return x.Words3
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords4() string {
	if x != nil {
		return x.Words4
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords5() string {
	if x != nil {
		return x.Words5
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords6() string {
	if x != nil {
		return x.Words6
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords7() string {
	if x != nil {
		return x.Words7
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords8() string {
	if x != nil {
		return x.Words8
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords9() string {
	if x != nil {
		return x.Words9
	}
	return ""
}

func (x *GetListenerWordsResp) GetWords10() string {
	if x != nil {
		return x.Words10
	}
	return ""
}

func (x *GetListenerWordsResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerWordsResp) GetWordsSort() []int64 {
	if x != nil {
		return x.WordsSort
	}
	return nil
}

// 更改常用语
type EditListenerWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words1      string  `protobuf:"bytes,1,opt,name=words1,proto3" json:"words1,omitempty"`
	Words2      string  `protobuf:"bytes,2,opt,name=words2,proto3" json:"words2,omitempty"`
	Words3      string  `protobuf:"bytes,3,opt,name=words3,proto3" json:"words3,omitempty"`
	Words4      string  `protobuf:"bytes,4,opt,name=words4,proto3" json:"words4,omitempty"`
	Words5      string  `protobuf:"bytes,5,opt,name=words5,proto3" json:"words5,omitempty"`
	Words6      string  `protobuf:"bytes,6,opt,name=words6,proto3" json:"words6,omitempty"`
	Words7      string  `protobuf:"bytes,7,opt,name=words7,proto3" json:"words7,omitempty"`
	Words8      string  `protobuf:"bytes,8,opt,name=words8,proto3" json:"words8,omitempty"`
	Words9      string  `protobuf:"bytes,9,opt,name=words9,proto3" json:"words9,omitempty"`
	Words10     string  `protobuf:"bytes,10,opt,name=words10,proto3" json:"words10,omitempty"`
	ListenerUid int64   `protobuf:"varint,11,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	WordsSort   []int64 `protobuf:"varint,12,rep,packed,name=wordsSort,proto3" json:"wordsSort,omitempty"`
}

func (x *EditListenerWordsReq) Reset() {
	*x = EditListenerWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditListenerWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditListenerWordsReq) ProtoMessage() {}

func (x *EditListenerWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditListenerWordsReq.ProtoReflect.Descriptor instead.
func (*EditListenerWordsReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{55}
}

func (x *EditListenerWordsReq) GetWords1() string {
	if x != nil {
		return x.Words1
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords2() string {
	if x != nil {
		return x.Words2
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords3() string {
	if x != nil {
		return x.Words3
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords4() string {
	if x != nil {
		return x.Words4
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords5() string {
	if x != nil {
		return x.Words5
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords6() string {
	if x != nil {
		return x.Words6
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords7() string {
	if x != nil {
		return x.Words7
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords8() string {
	if x != nil {
		return x.Words8
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords9() string {
	if x != nil {
		return x.Words9
	}
	return ""
}

func (x *EditListenerWordsReq) GetWords10() string {
	if x != nil {
		return x.Words10
	}
	return ""
}

func (x *EditListenerWordsReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *EditListenerWordsReq) GetWordsSort() []int64 {
	if x != nil {
		return x.WordsSort
	}
	return nil
}

type EditListenerWordsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditListenerWordsResp) Reset() {
	*x = EditListenerWordsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditListenerWordsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditListenerWordsResp) ProtoMessage() {}

func (x *EditListenerWordsResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditListenerWordsResp.ProtoReflect.Descriptor instead.
func (*EditListenerWordsResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{56}
}

// 更新XXX和用户的交互情况
type UpdateListenerUserStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        string  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Event       int64   `protobuf:"varint,2,opt,name=event,proto3" json:"event,omitempty"`
	Uid         int64   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	ListenerUid []int64 `protobuf:"varint,4,rep,packed,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *UpdateListenerUserStatReq) Reset() {
	*x = UpdateListenerUserStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerUserStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerUserStatReq) ProtoMessage() {}

func (x *UpdateListenerUserStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerUserStatReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerUserStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateListenerUserStatReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UpdateListenerUserStatReq) GetEvent() int64 {
	if x != nil {
		return x.Event
	}
	return 0
}

func (x *UpdateListenerUserStatReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateListenerUserStatReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateListenerUserStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerUserStatResp) Reset() {
	*x = UpdateListenerUserStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerUserStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerUserStatResp) ProtoMessage() {}

func (x *UpdateListenerUserStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerUserStatResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerUserStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{58}
}

// 更新统计今日推荐和浏览XXX资料页统计
type UpdateTodayListenerUserStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid []int64 `protobuf:"varint,1,rep,packed,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *UpdateTodayListenerUserStatReq) Reset() {
	*x = UpdateTodayListenerUserStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTodayListenerUserStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTodayListenerUserStatReq) ProtoMessage() {}

func (x *UpdateTodayListenerUserStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTodayListenerUserStatReq.ProtoReflect.Descriptor instead.
func (*UpdateTodayListenerUserStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateTodayListenerUserStatReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateTodayListenerUserStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTodayListenerUserStatResp) Reset() {
	*x = UpdateTodayListenerUserStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTodayListenerUserStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTodayListenerUserStatResp) ProtoMessage() {}

func (x *UpdateTodayListenerUserStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTodayListenerUserStatResp.ProtoReflect.Descriptor instead.
func (*UpdateTodayListenerUserStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{60}
}

// 更新XXX首页数据统计
type UpdateListenerDashboardStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        string  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	ListenerUid []int64 `protobuf:"varint,2,rep,packed,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *UpdateListenerDashboardStatReq) Reset() {
	*x = UpdateListenerDashboardStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerDashboardStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerDashboardStatReq) ProtoMessage() {}

func (x *UpdateListenerDashboardStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerDashboardStatReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerDashboardStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateListenerDashboardStatReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UpdateListenerDashboardStatReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateListenerDashboardStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerDashboardStatResp) Reset() {
	*x = UpdateListenerDashboardStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerDashboardStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerDashboardStatResp) ProtoMessage() {}

func (x *UpdateListenerDashboardStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerDashboardStatResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerDashboardStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{62}
}

// 查询几天内更新过的XXX列表
type FindListenerListRangeByUpdateTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start     string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"` // 开始时间
	End       string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`     // 结束时间
	PageNo    int64  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize  int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	WorkState int64  `protobuf:"varint,5,opt,name=workState,proto3" json:"workState,omitempty"`
}

func (x *FindListenerListRangeByUpdateTimeReq) Reset() {
	*x = FindListenerListRangeByUpdateTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindListenerListRangeByUpdateTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindListenerListRangeByUpdateTimeReq) ProtoMessage() {}

func (x *FindListenerListRangeByUpdateTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindListenerListRangeByUpdateTimeReq.ProtoReflect.Descriptor instead.
func (*FindListenerListRangeByUpdateTimeReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{63}
}

func (x *FindListenerListRangeByUpdateTimeReq) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *FindListenerListRangeByUpdateTimeReq) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *FindListenerListRangeByUpdateTimeReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *FindListenerListRangeByUpdateTimeReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindListenerListRangeByUpdateTimeReq) GetWorkState() int64 {
	if x != nil {
		return x.WorkState
	}
	return 0
}

type ListenerShortProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid      int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerNickName string `protobuf:"bytes,2,opt,name=listenerNickName,proto3" json:"listenerNickName,omitempty"`
	ListenerAvatar   string `protobuf:"bytes,3,opt,name=listenerAvatar,proto3" json:"listenerAvatar,omitempty"`
}

func (x *ListenerShortProfile) Reset() {
	*x = ListenerShortProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerShortProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerShortProfile) ProtoMessage() {}

func (x *ListenerShortProfile) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerShortProfile.ProtoReflect.Descriptor instead.
func (*ListenerShortProfile) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{64}
}

func (x *ListenerShortProfile) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ListenerShortProfile) GetListenerNickName() string {
	if x != nil {
		return x.ListenerNickName
	}
	return ""
}

func (x *ListenerShortProfile) GetListenerAvatar() string {
	if x != nil {
		return x.ListenerAvatar
	}
	return ""
}

type FindListenerListRangeByUpdateTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener []*ListenerShortProfile `protobuf:"bytes,1,rep,name=listener,proto3" json:"listener,omitempty"`
}

func (x *FindListenerListRangeByUpdateTimeResp) Reset() {
	*x = FindListenerListRangeByUpdateTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindListenerListRangeByUpdateTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindListenerListRangeByUpdateTimeResp) ProtoMessage() {}

func (x *FindListenerListRangeByUpdateTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindListenerListRangeByUpdateTimeResp.ProtoReflect.Descriptor instead.
func (*FindListenerListRangeByUpdateTimeResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{65}
}

func (x *FindListenerListRangeByUpdateTimeResp) GetListener() []*ListenerShortProfile {
	if x != nil {
		return x.Listener
	}
	return nil
}

// 获取XXX首页统计数据
type GetListenerHomePageDashboardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerHomePageDashboardReq) Reset() {
	*x = GetListenerHomePageDashboardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerHomePageDashboardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerHomePageDashboardReq) ProtoMessage() {}

func (x *GetListenerHomePageDashboardReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerHomePageDashboardReq.ProtoReflect.Descriptor instead.
func (*GetListenerHomePageDashboardReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{66}
}

func (x *GetListenerHomePageDashboardReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetListenerHomePageDashboardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid                        int64    `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	TodayOrderCnt                      int64    `protobuf:"varint,2,opt,name=todayOrderCnt,proto3" json:"todayOrderCnt,omitempty"`                                            // 今日接单数
	TodayOrderCntRank                  int64    `protobuf:"varint,3,opt,name=todayOrderCntRank,proto3" json:"todayOrderCntRank,omitempty"`                                    // 今日接单数排名
	TodayOrderAmount                   int64    `protobuf:"varint,4,opt,name=todayOrderAmount,proto3" json:"todayOrderAmount,omitempty"`                                      // 今日接单金额
	TodayOrderAmountRank               int64    `protobuf:"varint,5,opt,name=todayOrderAmountRank,proto3" json:"todayOrderAmountRank,omitempty"`                              // 今日接单金额排名
	TodayRecommendUserCnt              int64    `protobuf:"varint,6,opt,name=todayRecommendUserCnt,proto3" json:"todayRecommendUserCnt,omitempty"`                            // 今日推荐用户数
	TodayRecommendUserCntRank          int64    `protobuf:"varint,7,opt,name=todayRecommendUserCntRank,proto3" json:"todayRecommendUserCntRank,omitempty"`                    // 今日推荐用户数排名
	TodayEnterChatUserCnt              int64    `protobuf:"varint,8,opt,name=todayEnterChatUserCnt,proto3" json:"todayEnterChatUserCnt,omitempty"`                            // 今日进入聊天页面用户数
	TodayEnterChatUserCntRank          int64    `protobuf:"varint,9,opt,name=todayEnterChatUserCntRank,proto3" json:"todayEnterChatUserCntRank,omitempty"`                    // 今日进入聊天界面用户数排名
	TodayViewUserCnt                   int64    `protobuf:"varint,10,opt,name=todayViewUserCnt,proto3" json:"todayViewUserCnt,omitempty"`                                     // 今日访问资料页面用户数
	TodayViewUserCntRank               int64    `protobuf:"varint,11,opt,name=todayViewUserCntRank,proto3" json:"todayViewUserCntRank,omitempty"`                             // 今日资料页面用户数排名
	TodayStatUpdateTime                string   `protobuf:"bytes,12,opt,name=todayStatUpdateTime,proto3" json:"todayStatUpdateTime,omitempty"`                                // 今日统计数据更新时间
	Last30DaysPaidUserCnt              int64    `protobuf:"varint,13,opt,name=last30DaysPaidUserCnt,proto3" json:"last30DaysPaidUserCnt,omitempty"`                           // 过去30天下单人数（下单人数占进入聊天页面的人数比例）
	Last30DaysEnterChatUserCnt         int64    `protobuf:"varint,14,opt,name=last30DaysEnterChatUserCnt,proto3" json:"last30DaysEnterChatUserCnt,omitempty"`                 // 过去30天进入聊天页面人数
	Last7DaysRepeatPaidUserCnt         int64    `protobuf:"varint,15,opt,name=last7DaysRepeatPaidUserCnt,proto3" json:"last7DaysRepeatPaidUserCnt,omitempty"`                 // 过去7天复购人数 （复购人数占下单人数比例）
	Last7DaysPaidUserCnt               int64    `protobuf:"varint,16,opt,name=last7DaysPaidUserCnt,proto3" json:"last7DaysPaidUserCnt,omitempty"`                             // 过去7天下单人数（
	Last30DaysRepeatPaidUserCnt        int64    `protobuf:"varint,17,opt,name=last30DaysRepeatPaidUserCnt,proto3" json:"last30DaysRepeatPaidUserCnt,omitempty"`               // 过去30天复购人数
	Last7DaysAveragePaidAmountPerUser  int64    `protobuf:"varint,18,opt,name=last7DaysAveragePaidAmountPerUser,proto3" json:"last7DaysAveragePaidAmountPerUser,omitempty"`   // 过去7天人均消费
	Last30DaysAveragePaidAmountPerUser int64    `protobuf:"varint,19,opt,name=last30DaysAveragePaidAmountPerUser,proto3" json:"last30DaysAveragePaidAmountPerUser,omitempty"` // 过去30天人均消费
	Last7DaysAveragePaidAmountPerDay   int64    `protobuf:"varint,20,opt,name=last7DaysAveragePaidAmountPerDay,proto3" json:"last7DaysAveragePaidAmountPerDay,omitempty"`     // 过去7天日均消费
	Last30DaysAveragePaidAmountPerDay  int64    `protobuf:"varint,21,opt,name=last30DaysAveragePaidAmountPerDay,proto3" json:"last30DaysAveragePaidAmountPerDay,omitempty"`   // 过去30天日均消费
	LastDayStatUpdateTime              string   `protobuf:"bytes,22,opt,name=lastDayStatUpdateTime,proto3" json:"lastDayStatUpdateTime,omitempty"`                            // 过去几天统计数据更新时间
	OneStarRatingOrderCnt              int64    `protobuf:"varint,23,opt,name=oneStarRatingOrderCnt,proto3" json:"oneStarRatingOrderCnt,omitempty"`                           // 累计不满意评价订单数
	RefundOrderCnt                     int64    `protobuf:"varint,24,opt,name=refundOrderCnt,proto3" json:"refundOrderCnt,omitempty"`                                         // 累计退款订单数
	Suggestion                         []string `protobuf:"bytes,25,rep,name=suggestion,proto3" json:"suggestion,omitempty"`                                                  // 建议
}

func (x *GetListenerHomePageDashboardResp) Reset() {
	*x = GetListenerHomePageDashboardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerHomePageDashboardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerHomePageDashboardResp) ProtoMessage() {}

func (x *GetListenerHomePageDashboardResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerHomePageDashboardResp.ProtoReflect.Descriptor instead.
func (*GetListenerHomePageDashboardResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{67}
}

func (x *GetListenerHomePageDashboardResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayOrderCnt() int64 {
	if x != nil {
		return x.TodayOrderCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayOrderCntRank() int64 {
	if x != nil {
		return x.TodayOrderCntRank
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayOrderAmount() int64 {
	if x != nil {
		return x.TodayOrderAmount
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayOrderAmountRank() int64 {
	if x != nil {
		return x.TodayOrderAmountRank
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayRecommendUserCnt() int64 {
	if x != nil {
		return x.TodayRecommendUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayRecommendUserCntRank() int64 {
	if x != nil {
		return x.TodayRecommendUserCntRank
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayEnterChatUserCnt() int64 {
	if x != nil {
		return x.TodayEnterChatUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayEnterChatUserCntRank() int64 {
	if x != nil {
		return x.TodayEnterChatUserCntRank
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayViewUserCnt() int64 {
	if x != nil {
		return x.TodayViewUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayViewUserCntRank() int64 {
	if x != nil {
		return x.TodayViewUserCntRank
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetTodayStatUpdateTime() string {
	if x != nil {
		return x.TodayStatUpdateTime
	}
	return ""
}

func (x *GetListenerHomePageDashboardResp) GetLast30DaysPaidUserCnt() int64 {
	if x != nil {
		return x.Last30DaysPaidUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast30DaysEnterChatUserCnt() int64 {
	if x != nil {
		return x.Last30DaysEnterChatUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast7DaysRepeatPaidUserCnt() int64 {
	if x != nil {
		return x.Last7DaysRepeatPaidUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast7DaysPaidUserCnt() int64 {
	if x != nil {
		return x.Last7DaysPaidUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast30DaysRepeatPaidUserCnt() int64 {
	if x != nil {
		return x.Last30DaysRepeatPaidUserCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast7DaysAveragePaidAmountPerUser() int64 {
	if x != nil {
		return x.Last7DaysAveragePaidAmountPerUser
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast30DaysAveragePaidAmountPerUser() int64 {
	if x != nil {
		return x.Last30DaysAveragePaidAmountPerUser
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast7DaysAveragePaidAmountPerDay() int64 {
	if x != nil {
		return x.Last7DaysAveragePaidAmountPerDay
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLast30DaysAveragePaidAmountPerDay() int64 {
	if x != nil {
		return x.Last30DaysAveragePaidAmountPerDay
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetLastDayStatUpdateTime() string {
	if x != nil {
		return x.LastDayStatUpdateTime
	}
	return ""
}

func (x *GetListenerHomePageDashboardResp) GetOneStarRatingOrderCnt() int64 {
	if x != nil {
		return x.OneStarRatingOrderCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetRefundOrderCnt() int64 {
	if x != nil {
		return x.RefundOrderCnt
	}
	return 0
}

func (x *GetListenerHomePageDashboardResp) GetSuggestion() []string {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

// 保存最近多少天的统计数据（一天更新一次，不能覆盖每日更新的数据）
type SnapshotLastDaysListenerStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid []int64 `protobuf:"varint,1,rep,packed,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *SnapshotLastDaysListenerStatReq) Reset() {
	*x = SnapshotLastDaysListenerStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotLastDaysListenerStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotLastDaysListenerStatReq) ProtoMessage() {}

func (x *SnapshotLastDaysListenerStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotLastDaysListenerStatReq.ProtoReflect.Descriptor instead.
func (*SnapshotLastDaysListenerStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{68}
}

func (x *SnapshotLastDaysListenerStatReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type SnapshotLastDaysListenerStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SnapshotLastDaysListenerStatResp) Reset() {
	*x = SnapshotLastDaysListenerStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotLastDaysListenerStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotLastDaysListenerStatResp) ProtoMessage() {}

func (x *SnapshotLastDaysListenerStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotLastDaysListenerStatResp.ProtoReflect.Descriptor instead.
func (*SnapshotLastDaysListenerStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{69}
}

// 更新XXX每日统计数据
type UpdateListenerEveryDayAverageStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerEveryDayAverageStatReq) Reset() {
	*x = UpdateListenerEveryDayAverageStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerEveryDayAverageStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerEveryDayAverageStatReq) ProtoMessage() {}

func (x *UpdateListenerEveryDayAverageStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerEveryDayAverageStatReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerEveryDayAverageStatReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{70}
}

type UpdateListenerEveryDayAverageStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerEveryDayAverageStatResp) Reset() {
	*x = UpdateListenerEveryDayAverageStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerEveryDayAverageStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerEveryDayAverageStatResp) ProtoMessage() {}

func (x *UpdateListenerEveryDayAverageStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerEveryDayAverageStatResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerEveryDayAverageStatResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{71}
}

// 更新XXX建议
type UpdateListenerSuggestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid []int64 `protobuf:"varint,1,rep,packed,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *UpdateListenerSuggestionReq) Reset() {
	*x = UpdateListenerSuggestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerSuggestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerSuggestionReq) ProtoMessage() {}

func (x *UpdateListenerSuggestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerSuggestionReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerSuggestionReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{72}
}

func (x *UpdateListenerSuggestionReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateListenerSuggestionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerSuggestionResp) Reset() {
	*x = UpdateListenerSuggestionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerSuggestionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerSuggestionResp) ProtoMessage() {}

func (x *UpdateListenerSuggestionResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerSuggestionResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerSuggestionResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{73}
}

// 更新XXX的状态
type UpdateListenerOnlineStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         int64 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	ListenerUid   int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	TodayLoginCnt int64 `protobuf:"varint,3,opt,name=todayLoginCnt,proto3" json:"todayLoginCnt,omitempty"`
}

func (x *UpdateListenerOnlineStateReq) Reset() {
	*x = UpdateListenerOnlineStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerOnlineStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerOnlineStateReq) ProtoMessage() {}

func (x *UpdateListenerOnlineStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerOnlineStateReq.ProtoReflect.Descriptor instead.
func (*UpdateListenerOnlineStateReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{74}
}

func (x *UpdateListenerOnlineStateReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UpdateListenerOnlineStateReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UpdateListenerOnlineStateReq) GetTodayLoginCnt() int64 {
	if x != nil {
		return x.TodayLoginCnt
	}
	return 0
}

type UpdateListenerOnlineStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateListenerOnlineStateResp) Reset() {
	*x = UpdateListenerOnlineStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateListenerOnlineStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateListenerOnlineStateResp) ProtoMessage() {}

func (x *UpdateListenerOnlineStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateListenerOnlineStateResp.ProtoReflect.Descriptor instead.
func (*UpdateListenerOnlineStateResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{75}
}

// 获取XXX基本资料
type GetListenerBasicInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
}

func (x *GetListenerBasicInfoReq) Reset() {
	*x = GetListenerBasicInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerBasicInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerBasicInfoReq) ProtoMessage() {}

func (x *GetListenerBasicInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerBasicInfoReq.ProtoReflect.Descriptor instead.
func (*GetListenerBasicInfoReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{76}
}

func (x *GetListenerBasicInfoReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type GetListenerBasicInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid   int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`     //uid
	NickName      string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`            //nickName
	Avatar        string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                //avatar
	MaritalStatus int64  `protobuf:"varint,5,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"` //maritalStatus
	PhoneNumber   string `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`      //phoneNumber
	Constellation int64  `protobuf:"varint,7,opt,name=constellation,proto3" json:"constellation,omitempty"` //constellation
	Province      string `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`            //province
	City          string `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`                    //city
	Job           string `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                     //job
	Education     int64  `protobuf:"varint,11,opt,name=education,proto3" json:"education,omitempty"`        //education
	Gender        int64  `protobuf:"varint,12,opt,name=gender,proto3" json:"gender,omitempty"`              //gender
	Birthday      string `protobuf:"bytes,13,opt,name=birthday,proto3" json:"birthday,omitempty"`
	ListenerName  string `protobuf:"bytes,14,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	OpenId        string `protobuf:"bytes,15,opt,name=openId,proto3" json:"openId,omitempty"`
	Introduction  string `protobuf:"bytes,16,opt,name=introduction,proto3" json:"introduction,omitempty"`  //introduction
	UserCount     int64  `protobuf:"varint,17,opt,name=userCount,proto3" json:"userCount,omitempty"`       //userCount
	ChatDuration  int64  `protobuf:"varint,18,opt,name=chatDuration,proto3" json:"chatDuration,omitempty"` //chatDuration
	RatingSum     int64  `protobuf:"varint,19,opt,name=ratingSum,proto3" json:"ratingSum,omitempty"`       //ratingSum
	FiveStar      int64  `protobuf:"varint,20,opt,name=fiveStar,proto3" json:"fiveStar,omitempty"`         //fiveStar
	Age           int64  `protobuf:"varint,21,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *GetListenerBasicInfoResp) Reset() {
	*x = GetListenerBasicInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerBasicInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerBasicInfoResp) ProtoMessage() {}

func (x *GetListenerBasicInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerBasicInfoResp.ProtoReflect.Descriptor instead.
func (*GetListenerBasicInfoResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{77}
}

func (x *GetListenerBasicInfoResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetMaritalStatus() int64 {
	if x != nil {
		return x.MaritalStatus
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetConstellation() int64 {
	if x != nil {
		return x.Constellation
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetEducation() int64 {
	if x != nil {
		return x.Education
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GetListenerBasicInfoResp) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetChatDuration() int64 {
	if x != nil {
		return x.ChatDuration
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetRatingSum() int64 {
	if x != nil {
		return x.RatingSum
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetFiveStar() int64 {
	if x != nil {
		return x.FiveStar
	}
	return 0
}

func (x *GetListenerBasicInfoResp) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

// 更新推荐XXX集合
type UpdateRecommendListenerPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecentDay int64 `protobuf:"varint,1,opt,name=recentDay,proto3" json:"recentDay,omitempty"` // 最近多少天活跃的
	Size      int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`           // 个数
}

func (x *UpdateRecommendListenerPoolReq) Reset() {
	*x = UpdateRecommendListenerPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendListenerPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendListenerPoolReq) ProtoMessage() {}

func (x *UpdateRecommendListenerPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendListenerPoolReq.ProtoReflect.Descriptor instead.
func (*UpdateRecommendListenerPoolReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateRecommendListenerPoolReq) GetRecentDay() int64 {
	if x != nil {
		return x.RecentDay
	}
	return 0
}

func (x *UpdateRecommendListenerPoolReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UpdateRecommendListenerPoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnt int64 `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *UpdateRecommendListenerPoolResp) Reset() {
	*x = UpdateRecommendListenerPoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendListenerPoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendListenerPoolResp) ProtoMessage() {}

func (x *UpdateRecommendListenerPoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendListenerPoolResp.ProtoReflect.Descriptor instead.
func (*UpdateRecommendListenerPoolResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateRecommendListenerPoolResp) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 用户登陆推荐XXX发消息
type RecListenerWhenUserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	IsNewUser int64  `protobuf:"varint,2,opt,name=isNewUser,proto3" json:"isNewUser,omitempty"`
	RegDays   int64  `protobuf:"varint,3,opt,name=regDays,proto3" json:"regDays,omitempty"`   // 注册后第几天
	OrderCnt  int64  `protobuf:"varint,4,opt,name=orderCnt,proto3" json:"orderCnt,omitempty"` // 订单数
	AuthKey   string `protobuf:"bytes,5,opt,name=authKey,proto3" json:"authKey,omitempty"`
}

func (x *RecListenerWhenUserLoginReq) Reset() {
	*x = RecListenerWhenUserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecListenerWhenUserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecListenerWhenUserLoginReq) ProtoMessage() {}

func (x *RecListenerWhenUserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecListenerWhenUserLoginReq.ProtoReflect.Descriptor instead.
func (*RecListenerWhenUserLoginReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{80}
}

func (x *RecListenerWhenUserLoginReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RecListenerWhenUserLoginReq) GetIsNewUser() int64 {
	if x != nil {
		return x.IsNewUser
	}
	return 0
}

func (x *RecListenerWhenUserLoginReq) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *RecListenerWhenUserLoginReq) GetOrderCnt() int64 {
	if x != nil {
		return x.OrderCnt
	}
	return 0
}

func (x *RecListenerWhenUserLoginReq) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

type RecListenerWhenUserLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecListener *UserSeeRecommendListenerProfile `protobuf:"bytes,1,opt,name=recListener,proto3" json:"recListener,omitempty"`
}

func (x *RecListenerWhenUserLoginResp) Reset() {
	*x = RecListenerWhenUserLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecListenerWhenUserLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecListenerWhenUserLoginResp) ProtoMessage() {}

func (x *RecListenerWhenUserLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecListenerWhenUserLoginResp.ProtoReflect.Descriptor instead.
func (*RecListenerWhenUserLoginResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{81}
}

func (x *RecListenerWhenUserLoginResp) GetRecListener() *UserSeeRecommendListenerProfile {
	if x != nil {
		return x.RecListener
	}
	return nil
}

// 管理后台获取XXX提现申请列表
type GetListenerMoveCashListByAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	PageNo      int64 `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SettleType  int64 `protobuf:"varint,4,opt,name=settleType,proto3" json:"settleType,omitempty"`
}

func (x *GetListenerMoveCashListByAdminReq) Reset() {
	*x = GetListenerMoveCashListByAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerMoveCashListByAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerMoveCashListByAdminReq) ProtoMessage() {}

func (x *GetListenerMoveCashListByAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerMoveCashListByAdminReq.ProtoReflect.Descriptor instead.
func (*GetListenerMoveCashListByAdminReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{82}
}

func (x *GetListenerMoveCashListByAdminReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GetListenerMoveCashListByAdminReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetListenerMoveCashListByAdminReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetListenerMoveCashListByAdminReq) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

type AdminSeeListenerMoveCash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime   string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Amount       int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	SettleType   int64  `protobuf:"varint,3,opt,name=settleType,proto3" json:"settleType,omitempty"`
	OutId        string `protobuf:"bytes,4,opt,name=outId,proto3" json:"outId,omitempty"`
	Remark       string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	ListenerUid  int64  `protobuf:"varint,6,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerName string `protobuf:"bytes,7,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	IdNo         string `protobuf:"bytes,8,opt,name=idNo,proto3" json:"idNo,omitempty"`
	BankCardNo   string `protobuf:"bytes,9,opt,name=bankCardNo,proto3" json:"bankCardNo,omitempty"`
	FlowNo       string `protobuf:"bytes,10,opt,name=flowNo,proto3" json:"flowNo,omitempty"`
}

func (x *AdminSeeListenerMoveCash) Reset() {
	*x = AdminSeeListenerMoveCash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminSeeListenerMoveCash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminSeeListenerMoveCash) ProtoMessage() {}

func (x *AdminSeeListenerMoveCash) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminSeeListenerMoveCash.ProtoReflect.Descriptor instead.
func (*AdminSeeListenerMoveCash) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{83}
}

func (x *AdminSeeListenerMoveCash) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AdminSeeListenerMoveCash) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdminSeeListenerMoveCash) GetSettleType() int64 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

func (x *AdminSeeListenerMoveCash) GetOutId() string {
	if x != nil {
		return x.OutId
	}
	return ""
}

func (x *AdminSeeListenerMoveCash) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AdminSeeListenerMoveCash) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *AdminSeeListenerMoveCash) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *AdminSeeListenerMoveCash) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *AdminSeeListenerMoveCash) GetBankCardNo() string {
	if x != nil {
		return x.BankCardNo
	}
	return ""
}

func (x *AdminSeeListenerMoveCash) GetFlowNo() string {
	if x != nil {
		return x.FlowNo
	}
	return ""
}

type GetListenerMoveCashListByAdminResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum  int64                       `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	List []*AdminSeeListenerMoveCash `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetListenerMoveCashListByAdminResp) Reset() {
	*x = GetListenerMoveCashListByAdminResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerMoveCashListByAdminResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerMoveCashListByAdminResp) ProtoMessage() {}

func (x *GetListenerMoveCashListByAdminResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerMoveCashListByAdminResp.ProtoReflect.Descriptor instead.
func (*GetListenerMoveCashListByAdminResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{84}
}

func (x *GetListenerMoveCashListByAdminResp) GetSum() int64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *GetListenerMoveCashListByAdminResp) GetList() []*AdminSeeListenerMoveCash {
	if x != nil {
		return x.List
	}
	return nil
}

type GenListenerContractReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid  int64  `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid,omitempty"`
	ListenerName string `protobuf:"bytes,2,opt,name=listenerName,proto3" json:"listenerName,omitempty"`
	IdNo         string `protobuf:"bytes,3,opt,name=idNo,proto3" json:"idNo,omitempty"`
	PhoneNumber  string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	CheckStatus  int64  `protobuf:"varint,5,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"`
	ContractType int64  `protobuf:"varint,6,opt,name=contractType,proto3" json:"contractType,omitempty"`
}

func (x *GenListenerContractReq) Reset() {
	*x = GenListenerContractReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenListenerContractReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenListenerContractReq) ProtoMessage() {}

func (x *GenListenerContractReq) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenListenerContractReq.ProtoReflect.Descriptor instead.
func (*GenListenerContractReq) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{85}
}

func (x *GenListenerContractReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *GenListenerContractReq) GetListenerName() string {
	if x != nil {
		return x.ListenerName
	}
	return ""
}

func (x *GenListenerContractReq) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *GenListenerContractReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GenListenerContractReq) GetCheckStatus() int64 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

func (x *GenListenerContractReq) GetContractType() int64 {
	if x != nil {
		return x.ContractType
	}
	return 0
}

type GenListenerContractResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File         string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	ContractType int64  `protobuf:"varint,2,opt,name=contractType,proto3" json:"contractType,omitempty"`
	UploadState  int64  `protobuf:"varint,3,opt,name=uploadState,proto3" json:"uploadState,omitempty"` // 状态 1 初始 2 成功 3 失败
}

func (x *GenListenerContractResp) Reset() {
	*x = GenListenerContractResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_listener_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenListenerContractResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenListenerContractResp) ProtoMessage() {}

func (x *GenListenerContractResp) ProtoReflect() protoreflect.Message {
	mi := &file_listener_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenListenerContractResp.ProtoReflect.Descriptor instead.
func (*GenListenerContractResp) Descriptor() ([]byte, []int) {
	return file_listener_proto_rawDescGZIP(), []int{86}
}

func (x *GenListenerContractResp) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *GenListenerContractResp) GetContractType() int64 {
	if x != nil {
		return x.ContractType
	}
	return 0
}

func (x *GenListenerContractResp) GetUploadState() int64 {
	if x != nil {
		return x.UploadState
	}
	return 0
}

var File_listener_proto protoreflect.FileDescriptor

var file_listener_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0xfa, 0x08, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61,
	0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x32,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65,
	0x77, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x22, 0xc7, 0x0a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x65,
	0x65, 0x4f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x32,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x21, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x78,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0xdd, 0x09, 0x0a, 0x1b,
	0x45, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x32,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x78,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x42, 0x0a, 0x1c, 0x45,
	0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x85, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x54, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x52, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x65, 0x4f, 0x77,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x7f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x22, 0xdb, 0x04, 0x0a, 0x1f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x22, 0xa3, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x61, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x22, 0xe5, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x22, 0x8e, 0x0b, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61,
	0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x64, 0x4e, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x31, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x31, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x33, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x33, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13,
	0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46,
	0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x23, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x72,
	0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x22, 0xf3, 0x0c, 0x0a, 0x17, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d,
	0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x31, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x32, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x33, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x33, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x34, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x34, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x35, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4e, 0x65, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x23, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x6d, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x2e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x30, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0xef, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x35, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x5c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x22, 0xb1, 0x0b, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x72,
	0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x31,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x32,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x33,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x33, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x34,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x34, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x35,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e,
	0x65, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x23,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73,
	0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x24, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x2b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x3c, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f,
	0x70, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x79, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x79, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x61, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x7e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xf5, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xa2, 0x04, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x43, 0x68, 0x61, 0x74, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61,
	0x64, 0x64, 0x43, 0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x46, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x46, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x4f,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x64,
	0x64, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x64, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x61, 0x64, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x50, 0x61, 0x69, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61,
	0x64, 0x64, 0x50, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x61, 0x64, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x61, 0x64,
	0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x56, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x23, 0x0a,
	0x21, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x64, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x22, 0xe3, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x77, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x77, 0x61, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x75,
	0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x75, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x61, 0x73,
	0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x43, 0x61, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x41, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x64, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x3c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22,
	0x34, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x63, 0x6e, 0x74, 0x22, 0x8b, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x6e,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x22, 0x37, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0xc8, 0x02, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x31, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x33, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x33, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x35, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x35, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x37, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x37, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x39, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x39, 0x12, 0x18, 0x0a,
	0x07, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x31, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x22, 0xc8, 0x02, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x34,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x36,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x38,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x39, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x39, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x31, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x53, 0x6f,
	0x72, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x79, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x64, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x56, 0x0a, 0x1e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa0, 0x01, 0x0a, 0x24, 0x46, 0x69, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x42, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x5d, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x42, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x8a, 0x0b, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x3c, 0x0a,
	0x19, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x19, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x15, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x19, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x30, 0x0a, 0x13, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x50,
	0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x50, 0x61, 0x69, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x33,
	0x30, 0x44, 0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x6c, 0x61, 0x73,
	0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x37,
	0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x6c, 0x61, 0x73,
	0x74, 0x37, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50, 0x61, 0x69, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x37,
	0x44, 0x61, 0x79, 0x73, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x37, 0x44, 0x61, 0x79, 0x73,
	0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x1b, 0x6c,
	0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50,
	0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x1b, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x4c, 0x0a,
	0x21, 0x6c, 0x61, 0x73, 0x74, 0x37, 0x44, 0x61, 0x79, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x21, 0x6c, 0x61, 0x73, 0x74, 0x37, 0x44,
	0x61, 0x79, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x22, 0x6c,
	0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x22, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44,
	0x61, 0x79, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x20, 0x6c,
	0x61, 0x73, 0x74, 0x37, 0x44, 0x61, 0x79, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x37, 0x44, 0x61, 0x79, 0x73,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x4c, 0x0a, 0x21, 0x6c, 0x61, 0x73, 0x74, 0x33,
	0x30, 0x44, 0x61, 0x79, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x69, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x21, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6f,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6f, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x1f, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x22,
	0x0a, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61,
	0x79, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x26, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x45, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x45, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x79, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x3f, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x7c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x3b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x22, 0xe0, 0x04, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x69,
	0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x75, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x33, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x22, 0x9d, 0x01, 0x0a,
	0x1b, 0x52, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x68, 0x65, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x65, 0x0a, 0x1c,
	0x52, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x68, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x22, 0x99, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb2, 0x02, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c,
	0x6f, 0x77, 0x4e, 0x6f, 0x22, 0x68, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xda,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x64, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x17, 0x47,
	0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x32, 0xc1, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x64, 0x0a,
	0x1f, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5d, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5a, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x67, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x67, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x10, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b,
	0x67, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x12, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x73,
	0x68, 0x4c, 0x6f, 0x67, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x43, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x67,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x4c, 0x6f, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54,
	0x0a, 0x15, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x65,
	0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66,
	0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x78,
	0x0a, 0x21, 0x66, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x78,
	0x0a, 0x21, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x45, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x79, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x67, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x1b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x19, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x48, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x43, 0x61, 0x73, 0x68, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x76,
	0x65, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x67, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x1b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x22, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x72, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x57, 0x68, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x57, 0x68, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x57, 0x68, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x76,
	0x65, 0x43, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_listener_proto_rawDescOnce sync.Once
	file_listener_proto_rawDescData = file_listener_proto_rawDesc
)

func file_listener_proto_rawDescGZIP() []byte {
	file_listener_proto_rawDescOnce.Do(func() {
		file_listener_proto_rawDescData = protoimpl.X.CompressGZIP(file_listener_proto_rawDescData)
	})
	return file_listener_proto_rawDescData
}

var file_listener_proto_msgTypes = make([]protoimpl.MessageInfo, 87)
var file_listener_proto_goTypes = []interface{}{
	(*UserSeeListenerProfile)(nil),                // 0: pb.UserSeeListenerProfile
	(*ListenerSeeOwnProfile)(nil),                 // 1: pb.ListenerSeeOwnProfile
	(*EditListenerProfileDraftReq)(nil),           // 2: pb.EditListenerProfileDraftReq
	(*EditListenerProfileDraftResp)(nil),          // 3: pb.EditListenerProfileDraftResp
	(*GetListenerProfileByUserReq)(nil),           // 4: pb.GetListenerProfileByUserReq
	(*GetListenerProfileByUserResp)(nil),          // 5: pb.GetListenerProfileByUserResp
	(*GetListenerProfileByOwnReq)(nil),            // 6: pb.GetListenerProfileByOwnReq
	(*GetListenerProfileByOwnResp)(nil),           // 7: pb.GetListenerProfileByOwnResp
	(*ListenerRemarkUserReq)(nil),                 // 8: pb.ListenerRemarkUserReq
	(*ListenerRemarkUserResp)(nil),                // 9: pb.ListenerRemarkUserResp
	(*GetListenerRemarkUserReq)(nil),              // 10: pb.GetListenerRemarkUserReq
	(*GetListenerRemarkUserResp)(nil),             // 11: pb.GetListenerRemarkUserResp
	(*UserSeeRecommendListenerProfile)(nil),       // 12: pb.UserSeeRecommendListenerProfile
	(*GetRecommendListenerByUserReq)(nil),         // 13: pb.GetRecommendListenerByUserReq
	(*GetRecommendListenerByUserResp)(nil),        // 14: pb.GetRecommendListenerByUserResp
	(*GetRecommendListenerReq)(nil),               // 15: pb.GetRecommendListenerReq
	(*GetRecommendListenerResp)(nil),              // 16: pb.GetRecommendListenerResp
	(*AdminSeeListenerProfileDraft)(nil),          // 17: pb.AdminSeeListenerProfileDraft
	(*AdminSeeListenerProfile)(nil),               // 18: pb.AdminSeeListenerProfile
	(*GetListenerProfileListReq)(nil),             // 19: pb.GetListenerProfileListReq
	(*CheckListenerProfile)(nil),                  // 20: pb.CheckListenerProfile
	(*GetListenerProfileListResp)(nil),            // 21: pb.GetListenerProfileListResp
	(*CheckListenerProfileReq)(nil),               // 22: pb.CheckListenerProfileReq
	(*CheckListenerProfileResp)(nil),              // 23: pb.CheckListenerProfileResp
	(*ChangeWorkStateReq)(nil),                    // 24: pb.ChangeWorkStateReq
	(*ChangeWorkStateResp)(nil),                   // 25: pb.ChangeWorkStateResp
	(*GetWorkStateReq)(nil),                       // 26: pb.GetWorkStateReq
	(*GetWorkStateResp)(nil),                      // 27: pb.GetWorkStateResp
	(*GetListenerPriceReq)(nil),                   // 28: pb.GetListenerPriceReq
	(*GetListenerPriceResp)(nil),                  // 29: pb.GetListenerPriceResp
	(*UpdateListenerWalletReq)(nil),               // 30: pb.UpdateListenerWalletReq
	(*UpdateListenerWalletResp)(nil),              // 31: pb.UpdateListenerWalletResp
	(*UpdateListenerOrderStatReq)(nil),            // 32: pb.UpdateListenerOrderStatReq
	(*UpdateListenerOrderStatResp)(nil),           // 33: pb.UpdateListenerOrderStatResp
	(*CommitCheckNewListenerProfileReq)(nil),      // 34: pb.CommitCheckNewListenerProfileReq
	(*CommitCheckNewListenerProfileResp)(nil),     // 35: pb.CommitCheckNewListenerProfileResp
	(*SetBankCardReq)(nil),                        // 36: pb.SetBankCardReq
	(*SetBankCardResp)(nil),                       // 37: pb.SetBankCardResp
	(*GetBankCardReq)(nil),                        // 38: pb.GetBankCardReq
	(*GetBankCardResp)(nil),                       // 39: pb.GetBankCardResp
	(*GetListenerWalletReq)(nil),                  // 40: pb.GetListenerWalletReq
	(*GetListenerWalletResp)(nil),                 // 41: pb.GetListenerWalletResp
	(*GetListenerCashLogReq)(nil),                 // 42: pb.GetListenerCashLogReq
	(*ListenerCashLog)(nil),                       // 43: pb.ListenerCashLog
	(*GetListenerCashLogResp)(nil),                // 44: pb.GetListenerCashLogResp
	(*GetListenerIncomeLogReq)(nil),               // 45: pb.GetListenerIncomeLogReq
	(*ListenerIncomeLog)(nil),                     // 46: pb.ListenerIncomeLog
	(*GetListenerIncomeLogResp)(nil),              // 47: pb.GetListenerIncomeLogResp
	(*GetCommitMoveCashReq)(nil),                  // 48: pb.GetCommitMoveCashReq
	(*GetCommitMoveCashResp)(nil),                 // 49: pb.GetCommitMoveCashResp
	(*GetListenerRatingStatReq)(nil),              // 50: pb.GetListenerRatingStatReq
	(*CommentTagPair)(nil),                        // 51: pb.CommentTagPair
	(*GetListenerRatingStatResp)(nil),             // 52: pb.GetListenerRatingStatResp
	(*GetListenerWordsReq)(nil),                   // 53: pb.GetListenerWordsReq
	(*GetListenerWordsResp)(nil),                  // 54: pb.GetListenerWordsResp
	(*EditListenerWordsReq)(nil),                  // 55: pb.EditListenerWordsReq
	(*EditListenerWordsResp)(nil),                 // 56: pb.EditListenerWordsResp
	(*UpdateListenerUserStatReq)(nil),             // 57: pb.UpdateListenerUserStatReq
	(*UpdateListenerUserStatResp)(nil),            // 58: pb.UpdateListenerUserStatResp
	(*UpdateTodayListenerUserStatReq)(nil),        // 59: pb.UpdateTodayListenerUserStatReq
	(*UpdateTodayListenerUserStatResp)(nil),       // 60: pb.UpdateTodayListenerUserStatResp
	(*UpdateListenerDashboardStatReq)(nil),        // 61: pb.UpdateListenerDashboardStatReq
	(*UpdateListenerDashboardStatResp)(nil),       // 62: pb.UpdateListenerDashboardStatResp
	(*FindListenerListRangeByUpdateTimeReq)(nil),  // 63: pb.FindListenerListRangeByUpdateTimeReq
	(*ListenerShortProfile)(nil),                  // 64: pb.ListenerShortProfile
	(*FindListenerListRangeByUpdateTimeResp)(nil), // 65: pb.FindListenerListRangeByUpdateTimeResp
	(*GetListenerHomePageDashboardReq)(nil),       // 66: pb.GetListenerHomePageDashboardReq
	(*GetListenerHomePageDashboardResp)(nil),      // 67: pb.GetListenerHomePageDashboardResp
	(*SnapshotLastDaysListenerStatReq)(nil),       // 68: pb.SnapshotLastDaysListenerStatReq
	(*SnapshotLastDaysListenerStatResp)(nil),      // 69: pb.SnapshotLastDaysListenerStatResp
	(*UpdateListenerEveryDayAverageStatReq)(nil),  // 70: pb.UpdateListenerEveryDayAverageStatReq
	(*UpdateListenerEveryDayAverageStatResp)(nil), // 71: pb.UpdateListenerEveryDayAverageStatResp
	(*UpdateListenerSuggestionReq)(nil),           // 72: pb.UpdateListenerSuggestionReq
	(*UpdateListenerSuggestionResp)(nil),          // 73: pb.UpdateListenerSuggestionResp
	(*UpdateListenerOnlineStateReq)(nil),          // 74: pb.UpdateListenerOnlineStateReq
	(*UpdateListenerOnlineStateResp)(nil),         // 75: pb.UpdateListenerOnlineStateResp
	(*GetListenerBasicInfoReq)(nil),               // 76: pb.GetListenerBasicInfoReq
	(*GetListenerBasicInfoResp)(nil),              // 77: pb.GetListenerBasicInfoResp
	(*UpdateRecommendListenerPoolReq)(nil),        // 78: pb.UpdateRecommendListenerPoolReq
	(*UpdateRecommendListenerPoolResp)(nil),       // 79: pb.UpdateRecommendListenerPoolResp
	(*RecListenerWhenUserLoginReq)(nil),           // 80: pb.RecListenerWhenUserLoginReq
	(*RecListenerWhenUserLoginResp)(nil),          // 81: pb.RecListenerWhenUserLoginResp
	(*GetListenerMoveCashListByAdminReq)(nil),     // 82: pb.GetListenerMoveCashListByAdminReq
	(*AdminSeeListenerMoveCash)(nil),              // 83: pb.AdminSeeListenerMoveCash
	(*GetListenerMoveCashListByAdminResp)(nil),    // 84: pb.GetListenerMoveCashListByAdminResp
	(*GenListenerContractReq)(nil),                // 85: pb.GenListenerContractReq
	(*GenListenerContractResp)(nil),               // 86: pb.GenListenerContractResp
}
var file_listener_proto_depIdxs = []int32{
	0,  // 0: pb.GetListenerProfileByUserResp.Profile:type_name -> pb.UserSeeListenerProfile
	1,  // 1: pb.GetListenerProfileByOwnResp.profile:type_name -> pb.ListenerSeeOwnProfile
	12, // 2: pb.GetRecommendListenerByUserResp.listener:type_name -> pb.UserSeeRecommendListenerProfile
	64, // 3: pb.GetRecommendListenerResp.listener:type_name -> pb.ListenerShortProfile
	17, // 4: pb.CheckListenerProfile.draft:type_name -> pb.AdminSeeListenerProfileDraft
	18, // 5: pb.CheckListenerProfile.profile:type_name -> pb.AdminSeeListenerProfile
	20, // 6: pb.GetListenerProfileListResp.list:type_name -> pb.CheckListenerProfile
	43, // 7: pb.GetListenerCashLogResp.list:type_name -> pb.ListenerCashLog
	46, // 8: pb.GetListenerIncomeLogResp.list:type_name -> pb.ListenerIncomeLog
	51, // 9: pb.GetListenerRatingStatResp.commentTagStat:type_name -> pb.CommentTagPair
	64, // 10: pb.FindListenerListRangeByUpdateTimeResp.listener:type_name -> pb.ListenerShortProfile
	12, // 11: pb.RecListenerWhenUserLoginResp.recListener:type_name -> pb.UserSeeRecommendListenerProfile
	83, // 12: pb.GetListenerMoveCashListByAdminResp.list:type_name -> pb.AdminSeeListenerMoveCash
	2,  // 13: pb.listener.addOrUpdateListenerProfileDraft:input_type -> pb.EditListenerProfileDraftReq
	34, // 14: pb.listener.commitCheckNewListenerProfile:input_type -> pb.CommitCheckNewListenerProfileReq
	4,  // 15: pb.listener.getListenerProfileByUser:input_type -> pb.GetListenerProfileByUserReq
	6,  // 16: pb.listener.getListenerProfileByOwn:input_type -> pb.GetListenerProfileByOwnReq
	8,  // 17: pb.listener.listenerRemarkUser:input_type -> pb.ListenerRemarkUserReq
	10, // 18: pb.listener.getListenerRemarkUser:input_type -> pb.GetListenerRemarkUserReq
	13, // 19: pb.listener.getRecommendListenerListByUser:input_type -> pb.GetRecommendListenerByUserReq
	15, // 20: pb.listener.getRecommendListenerList:input_type -> pb.GetRecommendListenerReq
	26, // 21: pb.listener.getWorkState:input_type -> pb.GetWorkStateReq
	24, // 22: pb.listener.changeWorkState:input_type -> pb.ChangeWorkStateReq
	28, // 23: pb.listener.getListenerPrice:input_type -> pb.GetListenerPriceReq
	30, // 24: pb.listener.updateListenerWallet:input_type -> pb.UpdateListenerWalletReq
	32, // 25: pb.listener.updateListenerOrderStat:input_type -> pb.UpdateListenerOrderStatReq
	36, // 26: pb.listener.setBankCard:input_type -> pb.SetBankCardReq
	38, // 27: pb.listener.getBankCard:input_type -> pb.GetBankCardReq
	40, // 28: pb.listener.getListenerWallet:input_type -> pb.GetListenerWalletReq
	42, // 29: pb.listener.getListenerCashLog:input_type -> pb.GetListenerCashLogReq
	45, // 30: pb.listener.getListenerIncomeLog:input_type -> pb.GetListenerIncomeLogReq
	50, // 31: pb.listener.getListenerRatingStat:input_type -> pb.GetListenerRatingStatReq
	53, // 32: pb.listener.getListenerWords:input_type -> pb.GetListenerWordsReq
	55, // 33: pb.listener.editListenerWords:input_type -> pb.EditListenerWordsReq
	57, // 34: pb.listener.updateListenerUserStat:input_type -> pb.UpdateListenerUserStatReq
	59, // 35: pb.listener.updateTodayListenerUserStat:input_type -> pb.UpdateTodayListenerUserStatReq
	61, // 36: pb.listener.updateListenerDashboardStat:input_type -> pb.UpdateListenerDashboardStatReq
	63, // 37: pb.listener.findListenerListRangeByUpdateTime:input_type -> pb.FindListenerListRangeByUpdateTimeReq
	66, // 38: pb.listener.getListenerHomePageDashboard:input_type -> pb.GetListenerHomePageDashboardReq
	68, // 39: pb.listener.snapshotLastDaysListenerStat:input_type -> pb.SnapshotLastDaysListenerStatReq
	70, // 40: pb.listener.updateListenerEveryDayAverageStat:input_type -> pb.UpdateListenerEveryDayAverageStatReq
	72, // 41: pb.listener.updateListenerSuggestion:input_type -> pb.UpdateListenerSuggestionReq
	74, // 42: pb.listener.updateListenerOnlineState:input_type -> pb.UpdateListenerOnlineStateReq
	85, // 43: pb.listener.genListenerContract:input_type -> pb.GenListenerContractReq
	19, // 44: pb.listener.adminGetListenerProfileList:input_type -> pb.GetListenerProfileListReq
	22, // 45: pb.listener.adminCheckListenerProfile:input_type -> pb.CheckListenerProfileReq
	48, // 46: pb.listener.getCommitMoveCash:input_type -> pb.GetCommitMoveCashReq
	76, // 47: pb.listener.getListenerBasicInfo:input_type -> pb.GetListenerBasicInfoReq
	78, // 48: pb.listener.updateRecommendListenerPool:input_type -> pb.UpdateRecommendListenerPoolReq
	80, // 49: pb.listener.recListenerWhenUserLogin:input_type -> pb.RecListenerWhenUserLoginReq
	82, // 50: pb.listener.getListenerMoveCashListByAdmin:input_type -> pb.GetListenerMoveCashListByAdminReq
	3,  // 51: pb.listener.addOrUpdateListenerProfileDraft:output_type -> pb.EditListenerProfileDraftResp
	35, // 52: pb.listener.commitCheckNewListenerProfile:output_type -> pb.CommitCheckNewListenerProfileResp
	5,  // 53: pb.listener.getListenerProfileByUser:output_type -> pb.GetListenerProfileByUserResp
	7,  // 54: pb.listener.getListenerProfileByOwn:output_type -> pb.GetListenerProfileByOwnResp
	9,  // 55: pb.listener.listenerRemarkUser:output_type -> pb.ListenerRemarkUserResp
	11, // 56: pb.listener.getListenerRemarkUser:output_type -> pb.GetListenerRemarkUserResp
	14, // 57: pb.listener.getRecommendListenerListByUser:output_type -> pb.GetRecommendListenerByUserResp
	16, // 58: pb.listener.getRecommendListenerList:output_type -> pb.GetRecommendListenerResp
	27, // 59: pb.listener.getWorkState:output_type -> pb.GetWorkStateResp
	25, // 60: pb.listener.changeWorkState:output_type -> pb.ChangeWorkStateResp
	29, // 61: pb.listener.getListenerPrice:output_type -> pb.GetListenerPriceResp
	31, // 62: pb.listener.updateListenerWallet:output_type -> pb.UpdateListenerWalletResp
	33, // 63: pb.listener.updateListenerOrderStat:output_type -> pb.UpdateListenerOrderStatResp
	37, // 64: pb.listener.setBankCard:output_type -> pb.SetBankCardResp
	39, // 65: pb.listener.getBankCard:output_type -> pb.GetBankCardResp
	41, // 66: pb.listener.getListenerWallet:output_type -> pb.GetListenerWalletResp
	44, // 67: pb.listener.getListenerCashLog:output_type -> pb.GetListenerCashLogResp
	47, // 68: pb.listener.getListenerIncomeLog:output_type -> pb.GetListenerIncomeLogResp
	52, // 69: pb.listener.getListenerRatingStat:output_type -> pb.GetListenerRatingStatResp
	54, // 70: pb.listener.getListenerWords:output_type -> pb.GetListenerWordsResp
	56, // 71: pb.listener.editListenerWords:output_type -> pb.EditListenerWordsResp
	58, // 72: pb.listener.updateListenerUserStat:output_type -> pb.UpdateListenerUserStatResp
	60, // 73: pb.listener.updateTodayListenerUserStat:output_type -> pb.UpdateTodayListenerUserStatResp
	62, // 74: pb.listener.updateListenerDashboardStat:output_type -> pb.UpdateListenerDashboardStatResp
	65, // 75: pb.listener.findListenerListRangeByUpdateTime:output_type -> pb.FindListenerListRangeByUpdateTimeResp
	67, // 76: pb.listener.getListenerHomePageDashboard:output_type -> pb.GetListenerHomePageDashboardResp
	69, // 77: pb.listener.snapshotLastDaysListenerStat:output_type -> pb.SnapshotLastDaysListenerStatResp
	71, // 78: pb.listener.updateListenerEveryDayAverageStat:output_type -> pb.UpdateListenerEveryDayAverageStatResp
	73, // 79: pb.listener.updateListenerSuggestion:output_type -> pb.UpdateListenerSuggestionResp
	75, // 80: pb.listener.updateListenerOnlineState:output_type -> pb.UpdateListenerOnlineStateResp
	86, // 81: pb.listener.genListenerContract:output_type -> pb.GenListenerContractResp
	21, // 82: pb.listener.adminGetListenerProfileList:output_type -> pb.GetListenerProfileListResp
	23, // 83: pb.listener.adminCheckListenerProfile:output_type -> pb.CheckListenerProfileResp
	49, // 84: pb.listener.getCommitMoveCash:output_type -> pb.GetCommitMoveCashResp
	77, // 85: pb.listener.getListenerBasicInfo:output_type -> pb.GetListenerBasicInfoResp
	79, // 86: pb.listener.updateRecommendListenerPool:output_type -> pb.UpdateRecommendListenerPoolResp
	81, // 87: pb.listener.recListenerWhenUserLogin:output_type -> pb.RecListenerWhenUserLoginResp
	84, // 88: pb.listener.getListenerMoveCashListByAdmin:output_type -> pb.GetListenerMoveCashListByAdminResp
	51, // [51:89] is the sub-list for method output_type
	13, // [13:51] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_listener_proto_init() }
func file_listener_proto_init() {
	if File_listener_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_listener_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSeeListenerProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerSeeOwnProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditListenerProfileDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditListenerProfileDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerProfileByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerProfileByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerProfileByOwnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerProfileByOwnResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerRemarkUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerRemarkUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerRemarkUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerRemarkUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSeeRecommendListenerProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendListenerByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendListenerByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendListenerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendListenerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminSeeListenerProfileDraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminSeeListenerProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerProfileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckListenerProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerProfileListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckListenerProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckListenerProfileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWorkStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWorkStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerPriceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerPriceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerOrderStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerOrderStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitCheckNewListenerProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitCheckNewListenerProfileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBankCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBankCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBankCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBankCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerCashLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerCashLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerCashLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerIncomeLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerIncomeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerIncomeLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitMoveCashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitMoveCashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerRatingStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentTagPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerRatingStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerWordsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditListenerWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditListenerWordsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerUserStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerUserStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTodayListenerUserStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTodayListenerUserStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerDashboardStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerDashboardStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindListenerListRangeByUpdateTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerShortProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindListenerListRangeByUpdateTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerHomePageDashboardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerHomePageDashboardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotLastDaysListenerStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotLastDaysListenerStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerEveryDayAverageStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerEveryDayAverageStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerSuggestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerSuggestionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerOnlineStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateListenerOnlineStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerBasicInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerBasicInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendListenerPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendListenerPoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecListenerWhenUserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecListenerWhenUserLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerMoveCashListByAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminSeeListenerMoveCash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerMoveCashListByAdminResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenListenerContractReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_listener_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenListenerContractResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_listener_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   87,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_listener_proto_goTypes,
		DependencyIndexes: file_listener_proto_depIdxs,
		MessageInfos:      file_listener_proto_msgTypes,
	}.Build()
	File_listener_proto = out.File
	file_listener_proto_rawDesc = nil
	file_listener_proto_goTypes = nil
	file_listener_proto_depIdxs = nil
}
