// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: chat.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 同步免费聊天和购买的聊天服务状态
type SyncListenerFreeChatCntReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	Action      int64 `protobuf:"varint,3,opt,name=action,proto3" json:"action"`
}

func (x *SyncListenerFreeChatCntReq) Reset() {
	*x = SyncListenerFreeChatCntReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncListenerFreeChatCntReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListenerFreeChatCntReq) ProtoMessage() {}

func (x *SyncListenerFreeChatCntReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListenerFreeChatCntReq.ProtoReflect.Descriptor instead.
func (*SyncListenerFreeChatCntReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *SyncListenerFreeChatCntReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SyncListenerFreeChatCntReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *SyncListenerFreeChatCntReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type SyncListenerFreeChatCntResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeChatCnt        int64  `protobuf:"varint,1,opt,name=freeChatCnt,proto3" json:"freeChatCnt"`              // 免费聊天次数
	TextChatExpiryTime string `protobuf:"bytes,2,opt,name=textChatExpiryTime,proto3" json:"textChatExpiryTime"` // 文字聊天到期时间
	VoiceChatMinute    int64  `protobuf:"varint,3,opt,name=voiceChatMinute,proto3" json:"voiceChatMinute"`      // 语音聊天当前剩余时长
}

func (x *SyncListenerFreeChatCntResp) Reset() {
	*x = SyncListenerFreeChatCntResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncListenerFreeChatCntResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListenerFreeChatCntResp) ProtoMessage() {}

func (x *SyncListenerFreeChatCntResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListenerFreeChatCntResp.ProtoReflect.Descriptor instead.
func (*SyncListenerFreeChatCntResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *SyncListenerFreeChatCntResp) GetFreeChatCnt() int64 {
	if x != nil {
		return x.FreeChatCnt
	}
	return 0
}

func (x *SyncListenerFreeChatCntResp) GetTextChatExpiryTime() string {
	if x != nil {
		return x.TextChatExpiryTime
	}
	return ""
}

func (x *SyncListenerFreeChatCntResp) GetVoiceChatMinute() int64 {
	if x != nil {
		return x.VoiceChatMinute
	}
	return 0
}

// 同步聊天过程状态
type SyncChatStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`                 // 普通用户
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"` // XXX
	Action      int64 `protobuf:"varint,3,opt,name=action,proto3" json:"action"`           // 操作 参考api定义文档
}

func (x *SyncChatStateReq) Reset() {
	*x = SyncChatStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncChatStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncChatStateReq) ProtoMessage() {}

func (x *SyncChatStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncChatStateReq.ProtoReflect.Descriptor instead.
func (*SyncChatStateReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SyncChatStateReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SyncChatStateReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *SyncChatStateReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type SyncChatStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeChatCnt           int64  `protobuf:"varint,1,opt,name=freeChatCnt,proto3" json:"freeChatCnt"`                     // 免费聊天次数
	TextChatExpiryTime    string `protobuf:"bytes,2,opt,name=textChatExpiryTime,proto3" json:"textChatExpiryTime"`        // 文字聊天到期时间
	VoiceChatMinute       int64  `protobuf:"varint,3,opt,name=voiceChatMinute,proto3" json:"voiceChatMinute"`             // 语音聊天当前剩余时长
	UsedVoiceChatMinute   int64  `protobuf:"varint,4,opt,name=usedVoiceChatMinute,proto3" json:"usedVoiceChatMinute"`     // 已经使用过的通话时间
	ChatState             int64  `protobuf:"varint,5,opt,name=chatState,proto3" json:"chatState"`                         // 1 新用户 未付费 2 服务中用户 3 老用户 已完成用户
	ListenerChatState     int64  `protobuf:"varint,6,opt,name=listenerChatState,proto3" json:"listenerChatState"`         // 1 2、通话中 3、不在通话中
	Uid                   int64  `protobuf:"varint,7,opt,name=uid,proto3" json:"uid"`                                     // 普通用户
	ListenerUid           int64  `protobuf:"varint,8,opt,name=listenerUid,proto3" json:"listenerUid"`                     // XXX
	CurrentVoiceChatState int64  `protobuf:"varint,9,opt,name=currentVoiceChatState,proto3" json:"currentVoiceChatState"` // 当前通话状态
	IsFirstEnterChat      int64  `protobuf:"varint,10,opt,name=isFirstEnterChat,proto3" json:"isFirstEnterChat"`          // 2 是
}

func (x *SyncChatStateResp) Reset() {
	*x = SyncChatStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncChatStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncChatStateResp) ProtoMessage() {}

func (x *SyncChatStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncChatStateResp.ProtoReflect.Descriptor instead.
func (*SyncChatStateResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SyncChatStateResp) GetFreeChatCnt() int64 {
	if x != nil {
		return x.FreeChatCnt
	}
	return 0
}

func (x *SyncChatStateResp) GetTextChatExpiryTime() string {
	if x != nil {
		return x.TextChatExpiryTime
	}
	return ""
}

func (x *SyncChatStateResp) GetVoiceChatMinute() int64 {
	if x != nil {
		return x.VoiceChatMinute
	}
	return 0
}

func (x *SyncChatStateResp) GetUsedVoiceChatMinute() int64 {
	if x != nil {
		return x.UsedVoiceChatMinute
	}
	return 0
}

func (x *SyncChatStateResp) GetChatState() int64 {
	if x != nil {
		return x.ChatState
	}
	return 0
}

func (x *SyncChatStateResp) GetListenerChatState() int64 {
	if x != nil {
		return x.ListenerChatState
	}
	return 0
}

func (x *SyncChatStateResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SyncChatStateResp) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *SyncChatStateResp) GetCurrentVoiceChatState() int64 {
	if x != nil {
		return x.CurrentVoiceChatState
	}
	return 0
}

func (x *SyncChatStateResp) GetIsFirstEnterChat() int64 {
	if x != nil {
		return x.IsFirstEnterChat
	}
	return 0
}

// 更新用户聊天可用时间
type UpdateUserChatBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid    int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	OrderType      int64  `protobuf:"varint,3,opt,name=orderType,proto3" json:"orderType"`
	AddMinute      int64  `protobuf:"varint,4,opt,name=addMinute,proto3" json:"addMinute"`
	OrderId        string `protobuf:"bytes,5,opt,name=orderId,proto3" json:"orderId"`
	EventType      int64  `protobuf:"varint,6,opt,name=eventType,proto3" json:"eventType"`
	Action         int64  `protobuf:"varint,7,opt,name=action,proto3" json:"action"`
	TextExpireTime string `protobuf:"bytes,8,opt,name=textExpireTime,proto3" json:"textExpireTime"`
}

func (x *UpdateUserChatBalanceReq) Reset() {
	*x = UpdateUserChatBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserChatBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserChatBalanceReq) ProtoMessage() {}

func (x *UpdateUserChatBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserChatBalanceReq.ProtoReflect.Descriptor instead.
func (*UpdateUserChatBalanceReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserChatBalanceReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserChatBalanceReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UpdateUserChatBalanceReq) GetOrderType() int64 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *UpdateUserChatBalanceReq) GetAddMinute() int64 {
	if x != nil {
		return x.AddMinute
	}
	return 0
}

func (x *UpdateUserChatBalanceReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateUserChatBalanceReq) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *UpdateUserChatBalanceReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *UpdateUserChatBalanceReq) GetTextExpireTime() string {
	if x != nil {
		return x.TextExpireTime
	}
	return ""
}

type UpdateUserChatBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeChatCnt        int64  `protobuf:"varint,1,opt,name=freeChatCnt,proto3" json:"freeChatCnt"`              // 免费聊天次数
	TextChatExpiryTime string `protobuf:"bytes,2,opt,name=textChatExpiryTime,proto3" json:"textChatExpiryTime"` // 文字聊天到期时间
	VoiceChatMinute    int64  `protobuf:"varint,3,opt,name=voiceChatMinute,proto3" json:"voiceChatMinute"`      // 语音聊天当前剩余时长
}

func (x *UpdateUserChatBalanceResp) Reset() {
	*x = UpdateUserChatBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserChatBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserChatBalanceResp) ProtoMessage() {}

func (x *UpdateUserChatBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserChatBalanceResp.ProtoReflect.Descriptor instead.
func (*UpdateUserChatBalanceResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserChatBalanceResp) GetFreeChatCnt() int64 {
	if x != nil {
		return x.FreeChatCnt
	}
	return 0
}

func (x *UpdateUserChatBalanceResp) GetTextChatExpiryTime() string {
	if x != nil {
		return x.TextChatExpiryTime
	}
	return ""
}

func (x *UpdateUserChatBalanceResp) GetVoiceChatMinute() int64 {
	if x != nil {
		return x.VoiceChatMinute
	}
	return 0
}

// 更新聊天统计
type UpdateVoiceChatStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	UsedMinute  int64  `protobuf:"varint,3,opt,name=usedMinute,proto3" json:"usedMinute"`
	ChatLogId   string `protobuf:"bytes,4,opt,name=chatLogId,proto3" json:"chatLogId"`
}

func (x *UpdateVoiceChatStatReq) Reset() {
	*x = UpdateVoiceChatStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVoiceChatStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVoiceChatStatReq) ProtoMessage() {}

func (x *UpdateVoiceChatStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVoiceChatStatReq.ProtoReflect.Descriptor instead.
func (*UpdateVoiceChatStatReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateVoiceChatStatReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateVoiceChatStatReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UpdateVoiceChatStatReq) GetUsedMinute() int64 {
	if x != nil {
		return x.UsedMinute
	}
	return 0
}

func (x *UpdateVoiceChatStatReq) GetChatLogId() string {
	if x != nil {
		return x.ChatLogId
	}
	return ""
}

type UpdateVoiceChatStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeChatCnt        int64  `protobuf:"varint,1,opt,name=freeChatCnt,proto3" json:"freeChatCnt"`              // 免费聊天次数
	TextChatExpiryTime string `protobuf:"bytes,2,opt,name=textChatExpiryTime,proto3" json:"textChatExpiryTime"` // 文字聊天到期时间
	VoiceChatMinute    int64  `protobuf:"varint,3,opt,name=voiceChatMinute,proto3" json:"voiceChatMinute"`      // 语音聊天当前剩余时长
}

func (x *UpdateVoiceChatStatResp) Reset() {
	*x = UpdateVoiceChatStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVoiceChatStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVoiceChatStatResp) ProtoMessage() {}

func (x *UpdateVoiceChatStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVoiceChatStatResp.ProtoReflect.Descriptor instead.
func (*UpdateVoiceChatStatResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVoiceChatStatResp) GetFreeChatCnt() int64 {
	if x != nil {
		return x.FreeChatCnt
	}
	return 0
}

func (x *UpdateVoiceChatStatResp) GetTextChatExpiryTime() string {
	if x != nil {
		return x.TextChatExpiryTime
	}
	return ""
}

func (x *UpdateVoiceChatStatResp) GetVoiceChatMinute() int64 {
	if x != nil {
		return x.VoiceChatMinute
	}
	return 0
}

// 获取时间快结束的通话
type GetUseOutVoiceChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State      int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state"`
	ExpiryTime string `protobuf:"bytes,2,opt,name=expiryTime,proto3" json:"expiryTime"`
	PageNo     int64  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo"`
	PageSize   int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *GetUseOutVoiceChatReq) Reset() {
	*x = GetUseOutVoiceChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUseOutVoiceChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUseOutVoiceChatReq) ProtoMessage() {}

func (x *GetUseOutVoiceChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUseOutVoiceChatReq.ProtoReflect.Descriptor instead.
func (*GetUseOutVoiceChatReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{8}
}

func (x *GetUseOutVoiceChatReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetUseOutVoiceChatReq) GetExpiryTime() string {
	if x != nil {
		return x.ExpiryTime
	}
	return ""
}

func (x *GetUseOutVoiceChatReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetUseOutVoiceChatReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type VoiceChatUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid      int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	CurrentChatLogId string `protobuf:"bytes,3,opt,name=currentChatLogId,proto3" json:"currentChatLogId"`
}

func (x *VoiceChatUser) Reset() {
	*x = VoiceChatUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceChatUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceChatUser) ProtoMessage() {}

func (x *VoiceChatUser) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceChatUser.ProtoReflect.Descriptor instead.
func (*VoiceChatUser) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{9}
}

func (x *VoiceChatUser) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *VoiceChatUser) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *VoiceChatUser) GetCurrentChatLogId() string {
	if x != nil {
		return x.CurrentChatLogId
	}
	return ""
}

type GetUseOutVoiceChatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*VoiceChatUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetUseOutVoiceChatResp) Reset() {
	*x = GetUseOutVoiceChatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUseOutVoiceChatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUseOutVoiceChatResp) ProtoMessage() {}

func (x *GetUseOutVoiceChatResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUseOutVoiceChatResp.ProtoReflect.Descriptor instead.
func (*GetUseOutVoiceChatResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{10}
}

func (x *GetUseOutVoiceChatResp) GetList() []*VoiceChatUser {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取时间快结束的文字聊天
type GetUseOutTextChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpiryTime string `protobuf:"bytes,1,opt,name=expiryTime,proto3" json:"expiryTime"`
	PageNo     int64  `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo"`
	PageSize   int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *GetUseOutTextChatReq) Reset() {
	*x = GetUseOutTextChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUseOutTextChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUseOutTextChatReq) ProtoMessage() {}

func (x *GetUseOutTextChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUseOutTextChatReq.ProtoReflect.Descriptor instead.
func (*GetUseOutTextChatReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{11}
}

func (x *GetUseOutTextChatReq) GetExpiryTime() string {
	if x != nil {
		return x.ExpiryTime
	}
	return ""
}

func (x *GetUseOutTextChatReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetUseOutTextChatReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TextChatUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid      int64  `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	CurrentChatLogId string `protobuf:"bytes,3,opt,name=currentChatLogId,proto3" json:"currentChatLogId"`
}

func (x *TextChatUser) Reset() {
	*x = TextChatUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextChatUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextChatUser) ProtoMessage() {}

func (x *TextChatUser) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextChatUser.ProtoReflect.Descriptor instead.
func (*TextChatUser) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{12}
}

func (x *TextChatUser) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TextChatUser) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *TextChatUser) GetCurrentChatLogId() string {
	if x != nil {
		return x.CurrentChatLogId
	}
	return ""
}

type GetUseOutTextChatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TextChatUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetUseOutTextChatResp) Reset() {
	*x = GetUseOutTextChatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUseOutTextChatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUseOutTextChatResp) ProtoMessage() {}

func (x *GetUseOutTextChatResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUseOutTextChatResp.ProtoReflect.Descriptor instead.
func (*GetUseOutTextChatResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{13}
}

func (x *GetUseOutTextChatResp) GetList() []*TextChatUser {
	if x != nil {
		return x.List
	}
	return nil
}

// 重置免费聊天次数
type ResetFreeTextChatCntReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	FreeCnt     int64 `protobuf:"varint,3,opt,name=freeCnt,proto3" json:"freeCnt"`
}

func (x *ResetFreeTextChatCntReq) Reset() {
	*x = ResetFreeTextChatCntReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetFreeTextChatCntReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetFreeTextChatCntReq) ProtoMessage() {}

func (x *ResetFreeTextChatCntReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetFreeTextChatCntReq.ProtoReflect.Descriptor instead.
func (*ResetFreeTextChatCntReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{14}
}

func (x *ResetFreeTextChatCntReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ResetFreeTextChatCntReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *ResetFreeTextChatCntReq) GetFreeCnt() int64 {
	if x != nil {
		return x.FreeCnt
	}
	return 0
}

type ResetFreeTextChatCntResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetFreeTextChatCntResp) Reset() {
	*x = ResetFreeTextChatCntResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetFreeTextChatCntResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetFreeTextChatCntResp) ProtoMessage() {}

func (x *ResetFreeTextChatCntResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetFreeTextChatCntResp.ProtoReflect.Descriptor instead.
func (*ResetFreeTextChatCntResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{15}
}

// 更新统计进入XXX聊天页面用户数
type UpdateTodayEnterChatUserCntReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid []int64 `protobuf:"varint,1,rep,packed,name=listenerUid,proto3" json:"listenerUid"`
}

func (x *UpdateTodayEnterChatUserCntReq) Reset() {
	*x = UpdateTodayEnterChatUserCntReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTodayEnterChatUserCntReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTodayEnterChatUserCntReq) ProtoMessage() {}

func (x *UpdateTodayEnterChatUserCntReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTodayEnterChatUserCntReq.ProtoReflect.Descriptor instead.
func (*UpdateTodayEnterChatUserCntReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateTodayEnterChatUserCntReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateTodayEnterChatUserCntResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTodayEnterChatUserCntResp) Reset() {
	*x = UpdateTodayEnterChatUserCntResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTodayEnterChatUserCntResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTodayEnterChatUserCntResp) ProtoMessage() {}

func (x *UpdateTodayEnterChatUserCntResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTodayEnterChatUserCntResp.ProtoReflect.Descriptor instead.
func (*UpdateTodayEnterChatUserCntResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{17}
}

// 更新统计进入XXX聊天页面用户数
type UpdateLastDaysEnterChatUserCntReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid []int64 `protobuf:"varint,1,rep,packed,name=listenerUid,proto3" json:"listenerUid"`
}

func (x *UpdateLastDaysEnterChatUserCntReq) Reset() {
	*x = UpdateLastDaysEnterChatUserCntReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLastDaysEnterChatUserCntReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLastDaysEnterChatUserCntReq) ProtoMessage() {}

func (x *UpdateLastDaysEnterChatUserCntReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLastDaysEnterChatUserCntReq.ProtoReflect.Descriptor instead.
func (*UpdateLastDaysEnterChatUserCntReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateLastDaysEnterChatUserCntReq) GetListenerUid() []int64 {
	if x != nil {
		return x.ListenerUid
	}
	return nil
}

type UpdateLastDaysEnterChatUserCntResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLastDaysEnterChatUserCntResp) Reset() {
	*x = UpdateLastDaysEnterChatUserCntResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLastDaysEnterChatUserCntResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLastDaysEnterChatUserCntResp) ProtoMessage() {}

func (x *UpdateLastDaysEnterChatUserCntResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLastDaysEnterChatUserCntResp.ProtoReflect.Descriptor instead.
func (*UpdateLastDaysEnterChatUserCntResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{19}
}

// 更新文字聊天时间用完
type UpdateTextChatOverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
}

func (x *UpdateTextChatOverReq) Reset() {
	*x = UpdateTextChatOverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTextChatOverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTextChatOverReq) ProtoMessage() {}

func (x *UpdateTextChatOverReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTextChatOverReq.ProtoReflect.Descriptor instead.
func (*UpdateTextChatOverReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateTextChatOverReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateTextChatOverReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type UpdateTextChatOverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int64 `protobuf:"varint,1,opt,name=state,proto3" json:"state"`
}

func (x *UpdateTextChatOverResp) Reset() {
	*x = UpdateTextChatOverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTextChatOverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTextChatOverResp) ProtoMessage() {}

func (x *UpdateTextChatOverResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTextChatOverResp.ProtoReflect.Descriptor instead.
func (*UpdateTextChatOverResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateTextChatOverResp) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 初始化XXX通话状态
type CreateListenerVoiceChatStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid"`
}

func (x *CreateListenerVoiceChatStateReq) Reset() {
	*x = CreateListenerVoiceChatStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateListenerVoiceChatStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateListenerVoiceChatStateReq) ProtoMessage() {}

func (x *CreateListenerVoiceChatStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateListenerVoiceChatStateReq.ProtoReflect.Descriptor instead.
func (*CreateListenerVoiceChatStateReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{22}
}

func (x *CreateListenerVoiceChatStateReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

type CreateListenerVoiceChatStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateListenerVoiceChatStateResp) Reset() {
	*x = CreateListenerVoiceChatStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateListenerVoiceChatStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateListenerVoiceChatStateResp) ProtoMessage() {}

func (x *CreateListenerVoiceChatStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateListenerVoiceChatStateResp.ProtoReflect.Descriptor instead.
func (*CreateListenerVoiceChatStateResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{23}
}

// 用户和XXX互动事件
type SendUserListenerRelationEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	ListenerUid int64 `protobuf:"varint,2,opt,name=listenerUid,proto3" json:"listenerUid"`
	EventType   int64 `protobuf:"varint,3,opt,name=eventType,proto3" json:"eventType"`
}

func (x *SendUserListenerRelationEventReq) Reset() {
	*x = SendUserListenerRelationEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUserListenerRelationEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUserListenerRelationEventReq) ProtoMessage() {}

func (x *SendUserListenerRelationEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUserListenerRelationEventReq.ProtoReflect.Descriptor instead.
func (*SendUserListenerRelationEventReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{24}
}

func (x *SendUserListenerRelationEventReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SendUserListenerRelationEventReq) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *SendUserListenerRelationEventReq) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

type SendUserListenerRelationEventResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendUserListenerRelationEventResp) Reset() {
	*x = SendUserListenerRelationEventResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUserListenerRelationEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUserListenerRelationEventResp) ProtoMessage() {}

func (x *SendUserListenerRelationEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUserListenerRelationEventResp.ProtoReflect.Descriptor instead.
func (*SendUserListenerRelationEventResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{25}
}

// 获取交互最频繁的几位XXX
type GetTopUserAndListenerRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	PageNo   int64 `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo"`
	PageSize int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *GetTopUserAndListenerRelationReq) Reset() {
	*x = GetTopUserAndListenerRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopUserAndListenerRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopUserAndListenerRelationReq) ProtoMessage() {}

func (x *GetTopUserAndListenerRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopUserAndListenerRelationReq.ProtoReflect.Descriptor instead.
func (*GetTopUserAndListenerRelationReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{26}
}

func (x *GetTopUserAndListenerRelationReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetTopUserAndListenerRelationReq) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetTopUserAndListenerRelationReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserAndListenerRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerUid int64 `protobuf:"varint,1,opt,name=listenerUid,proto3" json:"listenerUid"`
	Score       int64 `protobuf:"varint,2,opt,name=score,proto3" json:"score"`
}

func (x *UserAndListenerRelation) Reset() {
	*x = UserAndListenerRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAndListenerRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAndListenerRelation) ProtoMessage() {}

func (x *UserAndListenerRelation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAndListenerRelation.ProtoReflect.Descriptor instead.
func (*UserAndListenerRelation) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{27}
}

func (x *UserAndListenerRelation) GetListenerUid() int64 {
	if x != nil {
		return x.ListenerUid
	}
	return 0
}

func (x *UserAndListenerRelation) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type GetTopUserAndListenerRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserAndListenerRelation `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetTopUserAndListenerRelationResp) Reset() {
	*x = GetTopUserAndListenerRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopUserAndListenerRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopUserAndListenerRelationResp) ProtoMessage() {}

func (x *GetTopUserAndListenerRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopUserAndListenerRelationResp.ProtoReflect.Descriptor instead.
func (*GetTopUserAndListenerRelationResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{28}
}

func (x *GetTopUserAndListenerRelationResp) GetList() []*UserAndListenerRelation {
	if x != nil {
		return x.List
	}
	return nil
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0x68, 0x0a, 0x1a, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x46, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x1b, 0x53,
	0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x46, 0x72, 0x65, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72,
	0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x66, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x03, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x64,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x75, 0x73, 0x65, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69, 0x73, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x22, 0x82, 0x02, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x78,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x6f, 0x0a, 0x0d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x4c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x4f,
	0x75, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x6e, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67,
	0x49, 0x64, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x67, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x65, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x43, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a,
	0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61,
	0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x74, 0x0a, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x68, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x51, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x54, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xc1,
	0x08, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x4f, 0x75, 0x74,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a,
	0x1e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12,
	0x25, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x44,
	0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x4f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1d, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_chat_proto_goTypes = []interface{}{
	(*SyncListenerFreeChatCntReq)(nil),         // 0: pb.SyncListenerFreeChatCntReq
	(*SyncListenerFreeChatCntResp)(nil),        // 1: pb.SyncListenerFreeChatCntResp
	(*SyncChatStateReq)(nil),                   // 2: pb.SyncChatStateReq
	(*SyncChatStateResp)(nil),                  // 3: pb.SyncChatStateResp
	(*UpdateUserChatBalanceReq)(nil),           // 4: pb.UpdateUserChatBalanceReq
	(*UpdateUserChatBalanceResp)(nil),          // 5: pb.UpdateUserChatBalanceResp
	(*UpdateVoiceChatStatReq)(nil),             // 6: pb.UpdateVoiceChatStatReq
	(*UpdateVoiceChatStatResp)(nil),            // 7: pb.UpdateVoiceChatStatResp
	(*GetUseOutVoiceChatReq)(nil),              // 8: pb.GetUseOutVoiceChatReq
	(*VoiceChatUser)(nil),                      // 9: pb.VoiceChatUser
	(*GetUseOutVoiceChatResp)(nil),             // 10: pb.GetUseOutVoiceChatResp
	(*GetUseOutTextChatReq)(nil),               // 11: pb.GetUseOutTextChatReq
	(*TextChatUser)(nil),                       // 12: pb.TextChatUser
	(*GetUseOutTextChatResp)(nil),              // 13: pb.GetUseOutTextChatResp
	(*ResetFreeTextChatCntReq)(nil),            // 14: pb.ResetFreeTextChatCntReq
	(*ResetFreeTextChatCntResp)(nil),           // 15: pb.ResetFreeTextChatCntResp
	(*UpdateTodayEnterChatUserCntReq)(nil),     // 16: pb.UpdateTodayEnterChatUserCntReq
	(*UpdateTodayEnterChatUserCntResp)(nil),    // 17: pb.UpdateTodayEnterChatUserCntResp
	(*UpdateLastDaysEnterChatUserCntReq)(nil),  // 18: pb.UpdateLastDaysEnterChatUserCntReq
	(*UpdateLastDaysEnterChatUserCntResp)(nil), // 19: pb.UpdateLastDaysEnterChatUserCntResp
	(*UpdateTextChatOverReq)(nil),              // 20: pb.UpdateTextChatOverReq
	(*UpdateTextChatOverResp)(nil),             // 21: pb.UpdateTextChatOverResp
	(*CreateListenerVoiceChatStateReq)(nil),    // 22: pb.CreateListenerVoiceChatStateReq
	(*CreateListenerVoiceChatStateResp)(nil),   // 23: pb.CreateListenerVoiceChatStateResp
	(*SendUserListenerRelationEventReq)(nil),   // 24: pb.SendUserListenerRelationEventReq
	(*SendUserListenerRelationEventResp)(nil),  // 25: pb.SendUserListenerRelationEventResp
	(*GetTopUserAndListenerRelationReq)(nil),   // 26: pb.GetTopUserAndListenerRelationReq
	(*UserAndListenerRelation)(nil),            // 27: pb.UserAndListenerRelation
	(*GetTopUserAndListenerRelationResp)(nil),  // 28: pb.GetTopUserAndListenerRelationResp
}
var file_chat_proto_depIdxs = []int32{
	9,  // 0: pb.GetUseOutVoiceChatResp.list:type_name -> pb.VoiceChatUser
	12, // 1: pb.GetUseOutTextChatResp.list:type_name -> pb.TextChatUser
	27, // 2: pb.GetTopUserAndListenerRelationResp.list:type_name -> pb.UserAndListenerRelation
	2,  // 3: pb.chat.syncChatState:input_type -> pb.SyncChatStateReq
	4,  // 4: pb.chat.updateUserChatBalance:input_type -> pb.UpdateUserChatBalanceReq
	6,  // 5: pb.chat.updateVoiceChatStat:input_type -> pb.UpdateVoiceChatStatReq
	8,  // 6: pb.chat.getUseOutVoiceChat:input_type -> pb.GetUseOutVoiceChatReq
	11, // 7: pb.chat.getUseOutTextChat:input_type -> pb.GetUseOutTextChatReq
	14, // 8: pb.chat.resetFreeTextChatCnt:input_type -> pb.ResetFreeTextChatCntReq
	16, // 9: pb.chat.updateTodayEnterChatUserCnt:input_type -> pb.UpdateTodayEnterChatUserCntReq
	18, // 10: pb.chat.updateLastDaysEnterChatUserCnt:input_type -> pb.UpdateLastDaysEnterChatUserCntReq
	20, // 11: pb.chat.updateTextChatOver:input_type -> pb.UpdateTextChatOverReq
	22, // 12: pb.chat.createListenerVoiceChatState:input_type -> pb.CreateListenerVoiceChatStateReq
	24, // 13: pb.chat.sendUserListenerRelationEvent:input_type -> pb.SendUserListenerRelationEventReq
	26, // 14: pb.chat.GetTopUserAndListenerRelation:input_type -> pb.GetTopUserAndListenerRelationReq
	3,  // 15: pb.chat.syncChatState:output_type -> pb.SyncChatStateResp
	5,  // 16: pb.chat.updateUserChatBalance:output_type -> pb.UpdateUserChatBalanceResp
	7,  // 17: pb.chat.updateVoiceChatStat:output_type -> pb.UpdateVoiceChatStatResp
	10, // 18: pb.chat.getUseOutVoiceChat:output_type -> pb.GetUseOutVoiceChatResp
	13, // 19: pb.chat.getUseOutTextChat:output_type -> pb.GetUseOutTextChatResp
	15, // 20: pb.chat.resetFreeTextChatCnt:output_type -> pb.ResetFreeTextChatCntResp
	17, // 21: pb.chat.updateTodayEnterChatUserCnt:output_type -> pb.UpdateTodayEnterChatUserCntResp
	19, // 22: pb.chat.updateLastDaysEnterChatUserCnt:output_type -> pb.UpdateLastDaysEnterChatUserCntResp
	21, // 23: pb.chat.updateTextChatOver:output_type -> pb.UpdateTextChatOverResp
	23, // 24: pb.chat.createListenerVoiceChatState:output_type -> pb.CreateListenerVoiceChatStateResp
	25, // 25: pb.chat.sendUserListenerRelationEvent:output_type -> pb.SendUserListenerRelationEventResp
	28, // 26: pb.chat.GetTopUserAndListenerRelation:output_type -> pb.GetTopUserAndListenerRelationResp
	15, // [15:27] is the sub-list for method output_type
	3,  // [3:15] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncListenerFreeChatCntReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncListenerFreeChatCntResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncChatStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncChatStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserChatBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserChatBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVoiceChatStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVoiceChatStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUseOutVoiceChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceChatUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUseOutVoiceChatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUseOutTextChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextChatUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUseOutTextChatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetFreeTextChatCntReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetFreeTextChatCntResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTodayEnterChatUserCntReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTodayEnterChatUserCntResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLastDaysEnterChatUserCntReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLastDaysEnterChatUserCntResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTextChatOverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTextChatOverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateListenerVoiceChatStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateListenerVoiceChatStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUserListenerRelationEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUserListenerRelationEventResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopUserAndListenerRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAndListenerRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopUserAndListenerRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
