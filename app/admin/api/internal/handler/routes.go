// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "jakarta/app/admin/api/internal/handler/admin"
	contract1021 "jakarta/app/admin/api/internal/handler/contract1021"
	listener "jakarta/app/admin/api/internal/handler/listener"
	order "jakarta/app/admin/api/internal/handler/order"
	stat "jakarta/app/admin/api/internal/handler/stat"
	user "jakarta/app/admin/api/internal/handler/user"
	wx "jakarta/app/admin/api/internal/handler/wx"
	"jakarta/app/admin/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: admin.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/admin/register",
				Handler: admin.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/menu/add",
				Handler: admin.AddAdminMenuHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/menu/del",
				Handler: admin.DelAdminMenuHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/menu/list",
				Handler: admin.ListAdminMenuHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/listener/list",
				Handler: listener.ListListenerProfileHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/listener/check",
				Handler: listener.CheckListenerProfileHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/listener/business/config",
				Handler: listener.GetDefineBusinessConfigHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/listener/cashlog/list",
				Handler: listener.GetCashListReqHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/listener/movecash/commit",
				Handler: listener.CommitMoveCashHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/listener/contract/gen",
				Handler: listener.GenListenerContractHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/order/refundorder/list",
				Handler: order.GetRefundOrderListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/order/refundorder/check",
				Handler: order.CheckRefundOrderHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/reportlist",
				Handler: user.GetReportUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/report/process",
				Handler: user.ProcessReportUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/needhelp/list",
				Handler: user.GetNeedHelpUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/needhelp/process",
				Handler: user.ProcessNeedHelpUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/list",
				Handler: user.GetUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/delete",
				Handler: user.DeleteUserAccountHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/wx/mp/url/gen",
				Handler: wx.GenMpUrlHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/stat/daily/list",
				Handler: stat.GetDailyStatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/stat/userchannel/list",
				Handler: stat.GetUserChannelListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/stat/ltv/list",
				Handler: stat.GetLTVStatHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/contract/c1021/gen",
				Handler: contract1021.GenContract1021Handler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/contract/c1021/list",
				Handler: contract1021.GetContract1021ListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/admin/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/contract/c1021/sign",
				Handler: contract1021.SignContract1021Handler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/contract/c1021/id",
				Handler: contract1021.GetContract1021ByIdHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin/v1"),
	)
}
