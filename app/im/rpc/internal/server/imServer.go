// Code generated by goctl. DO NOT EDIT!
// Source: im.proto

package server

import (
	"context"

	"jakarta/app/im/rpc/internal/logic"
	"jakarta/app/im/rpc/internal/svc"
	"jakarta/app/im/rpc/pb"
)

type ImServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedImServer
}

func NewImServer(svcCtx *svc.ServiceContext) *ImServer {
	return &ImServer{
		svcCtx: svcCtx,
	}
}

// 发送普通文字消息
func (s *ImServer) SendTextMsg(ctx context.Context, in *pb.SendTextMsgReq) (*pb.SendTextMsgResp, error) {
	l := logic.NewSendTextMsgLogic(ctx, s.svcCtx)
	return l.SendTextMsg(in)
}

// 发送自定义消息
func (s *ImServer) SendDefineMsg(ctx context.Context, in *pb.SendDefineMsgReq) (*pb.SendDefineMsgResp, error) {
	l := logic.NewSendDefineMsgLogic(ctx, s.svcCtx)
	return l.SendDefineMsg(in)
}

// 发送小程序订阅消息
func (s *ImServer) SendMiniProgramSubscribeMsg(ctx context.Context, in *pb.SendMiniProgramSubscribeMsgReq) (*pb.SendMiniProgramSubscribeMsgResp, error) {
	l := logic.NewSendMiniProgramSubscribeMsgLogic(ctx, s.svcCtx)
	return l.SendMiniProgramSubscribeMsg(in)
}

// 发送微信服务号消息
func (s *ImServer) SendFwhTemplateMsg(ctx context.Context, in *pb.SendFwhTemplateMsgReq) (*pb.SendFwhTemplateMsgResp, error) {
	l := logic.NewSendFwhTemplateMsgLogic(ctx, s.svcCtx)
	return l.SendFwhTemplateMsg(in)
}

// 根据用户的服务号openid获取用户的unionId
func (s *ImServer) GetUserUnionIdByFwhOpenId(ctx context.Context, in *pb.GetUserUnionIdByFwhOpenIdReq) (*pb.GetUserUnionIdByFwhOpenIdResp, error) {
	l := logic.NewGetUserUnionIdByFwhOpenIdLogic(ctx, s.svcCtx)
	return l.GetUserUnionIdByFwhOpenId(in)
}

// 生成小程序url link/schema
func (s *ImServer) GenWxMpUrl(ctx context.Context, in *pb.GenWxMpUrlReq) (*pb.GenWxMpUrlResp, error) {
	l := logic.NewGenWxMpUrlLogic(ctx, s.svcCtx)
	return l.GenWxMpUrl(in)
}

// im msg log
func (s *ImServer) AddImMsgLog(ctx context.Context, in *pb.AddImMsgLogReq) (*pb.AddImMsgLogResp, error) {
	l := logic.NewAddImMsgLogLogic(ctx, s.svcCtx)
	return l.AddImMsgLog(in)
}
