version: '3'

######## 项目依赖的环境，启动项目之前要先启动此环境 #######

services:
  #jaeger链路追踪
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=jakarta2022
      - LOG_LEVEL=INFO
    networks:
      - jakarta_net

  #prometheus监控
  prometheus:
    image: prom/prometheus:v2.39.1
    container_name: prometheus
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    volumes:
      - ./deploy/pre/prometheus/server/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always
    user: root
    ports:
      - 9090:9090
    networks:
      - jakarta_net

  #查看prometheus监控数据
  grafana:
    image: grafana/grafana:8.5.13
    container_name: grafana
    hostname: grafana
    user: root
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    restart: always
    volumes:
      - ./data/grafana/data:/var/lib/grafana
    ports:
      - "3001:3000"
    networks:
      - jakarta_net

  #  #搜集kafka业务日志、存储prometheus监控数据
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=jakarta2022
      - xpack.security.transport.ssl.enabled=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - TZ=Asia/Shanghai
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - jakarta_net

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.6
    restart: always
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 5601:5601
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - jakarta_net
    depends_on:
      - elasticsearch

  #消费kafka中filebeat收集的数据输出到es
  go-stash:
    image: reg.domain.com/bogota/go-stash:latest
    container_name: go-stash
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    #user: root
    restart: always
    volumes:
      - ./deploy/pre/go-stash/etc:/app/etc
    networks:
      - jakarta_net
    depends_on:
      - elasticsearch
      - kafka

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - TZ=Asia/Shanghai
    networks:
      - jakarta_net

  kafka:
    image: docker.io/bitnami/kafka:3.3.1
    container_name: kafka
    ports:
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://10.0.0.38:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - TZ=Asia/Shanghai
    networks:
      - jakarta_net
    depends_on:
      - zookeeper

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  jakarta_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/16

